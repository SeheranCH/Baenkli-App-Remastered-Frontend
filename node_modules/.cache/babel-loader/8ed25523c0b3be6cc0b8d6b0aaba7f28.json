{"ast":null,"code":"var _jsxFileName = \"/Users/ivogurtner/OneDrive - TBZ/M326/Baenkli-App-Frontend/src/components/pages/cardPage/cardPage.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../molecules/navbar/navbar\";\nimport PostCard from \"../../molecules/card/card\";\nimport CardForm from \"../../organisms/cardForm/cardForm\";\nimport Grid from '@material-ui/core/Grid';\nimport Rating from \"../../atoms/rating/rating\";\nimport Typography from '@material-ui/core/Typography';\n\nconst CardPage = props => {\n  const [editing, setEditing] = useState(false);\n  const [postCardId, setPostCardId] = useState(props.match.params.id);\n\n  function randomImg(width, height, key) {\n    var source = 'https://source.unsplash.com/random/' + width + 'x' + height + '/?bench,park' + key;\n    return source;\n  }\n\n  function calRating() {\n    var total = 0;\n    var length = 0;\n    let array = bench.ratings;\n    length = array.length;\n    array.map(r => total += r.rating);\n    let result = total / length;\n    return Math.round(result * 2) / 2;\n  }\n\n  const [bench, setBench] = useState([]);\n\n  function getOneBench(id) {\n    if (id !== 'new') {\n      axios.get(`http://localhost:8080/benches/${id}`).then(res => {\n        const data = res.data;\n        console.log(\"res one\", data);\n        return setBench(data);\n      });\n    }\n  }\n\n  function deleteBench(id) {\n    axios.delete(`http://localhost:8080/benches/${id}`).then(res => {\n      const data = res.data;\n      console.log(\"res one\", data); //  return setBenche(data);\n\n      props.history.push(`/`);\n    });\n  }\n\n  function editBench(id) {\n    // axios.delete(`http://localhost:8080/benches/${id}`)\n    //     .then(res => {\n    //         const data = res.data;\n    //         console.log(\"res one\", data)\n    //         //  return setBenche(data);\n    //         props.history.push(`/`);\n    //     })\n    setEditing(true);\n  }\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    getOneBench(postCardId);\n  }, []);\n  const [value, setValue] = useState();\n\n  function rateBench(ratingDTO) {\n    axios.post(`http://localhost:8080/ratings`, ratingDTO).then(res => {\n      const data = res.data;\n      console.log(\"res one\", data, ratingDTO); //setValue(value);\n    });\n  }\n\n  const ratingDTO = {\n    \"rating\": value,\n    \"bench\": bench\n  };\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), editing || postCardId === 'new' ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardForm, {\n    bench: postCardId === 'new' ? {} : bench,\n    setBench: postCardId === 'new' ? () => {} : setBench,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }))) : /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(PostCard, {\n    id: postCardId,\n    image: randomImg(500, 500, postCardId),\n    deleteButton: true,\n    editButton: true,\n    title: bench.title,\n    valueQuietness: bench.quietness // valueRating={calRating(postCardId)}\n    ,\n    amountBenches: bench.amountBenches,\n    amountFirePlaces: bench.amountFirePlaces,\n    amountTrashCans: bench.amountTrashCans,\n    distanceToNextShop: bench.distanceToNextShop,\n    directions: bench.directions,\n    readOnly: true,\n    deleteFunction: () => deleteBench(postCardId),\n    editFunction: () => editBench(postCardId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, \"Rate\"), /*#__PURE__*/React.createElement(Rating, {\n    name: \"hover-feedback\",\n    value: value,\n    onChange: (event, newValue) => {\n      console.log(\"newvalue, \", newValue);\n      ratingDTO.rating = newValue;\n      console.log(\"ratingDTO\", ratingDTO);\n      setValue(newValue);\n      rateBench(ratingDTO);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }))));\n};\n\nexport default CardPage;","map":{"version":3,"sources":["/Users/ivogurtner/OneDrive - TBZ/M326/Baenkli-App-Frontend/src/components/pages/cardPage/cardPage.js"],"names":["React","Fragment","useState","useEffect","axios","Navbar","PostCard","CardForm","Grid","Rating","Typography","CardPage","props","editing","setEditing","postCardId","setPostCardId","match","params","id","randomImg","width","height","key","source","calRating","total","length","array","bench","ratings","map","r","rating","result","Math","round","setBench","getOneBench","get","then","res","data","console","log","deleteBench","delete","history","push","editBench","value","setValue","rateBench","ratingDTO","post","title","quietness","amountBenches","amountFirePlaces","amountTrashCans","distanceToNextShop","directions","event","newValue"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../molecules/navbar/navbar\";\nimport PostCard from \"../../molecules/card/card\";\nimport CardForm from \"../../organisms/cardForm/cardForm\";\nimport Grid from '@material-ui/core/Grid';\nimport Rating from \"../../atoms/rating/rating\";\nimport Typography from '@material-ui/core/Typography';\n\nconst CardPage = (props) => {\n\n    const [editing, setEditing] = useState(false);\n    const [postCardId, setPostCardId] = useState(props.match.params.id);\n\n\n\n    function randomImg(width, height, key) {\n        var source = 'https://source.unsplash.com/random/' + width + 'x' + height + '/?bench,park' + key;\n        return source;\n    }\n\n    function calRating() {\n\n        var total = 0;\n        var length = 0;\n\n        let array = bench.ratings;\n        length = array.length;\n        array.map(r => total += r.rating);\n\n        let result = total / length;\n\n        return Math.round(result * 2) / 2;\n\n    }\n\n    const [bench, setBench] = useState([]);\n\n    function getOneBench(id) {\n        if (id !== 'new') {\n            axios.get(`http://localhost:8080/benches/${id}`)\n                .then(res => {\n                    const data = res.data;\n                    console.log(\"res one\", data)\n                    return setBench(data);\n                })\n        }\n\n    }\n\n    function deleteBench(id) {\n        axios.delete(`http://localhost:8080/benches/${id}`)\n            .then(res => {\n                const data = res.data;\n                console.log(\"res one\", data)\n                //  return setBenche(data);\n                props.history.push(`/`);\n            })\n    }\n\n    function editBench(id) {\n        // axios.delete(`http://localhost:8080/benches/${id}`)\n        //     .then(res => {\n        //         const data = res.data;\n        //         console.log(\"res one\", data)\n        //         //  return setBenche(data);\n        //         props.history.push(`/`);\n        //     })\n        setEditing(true);\n    }\n\n    useEffect(() => {\n        // Update the document title using the browser API\n        getOneBench(postCardId);\n    }, []);\n\n    const [value, setValue] = useState();\n\n    function rateBench(ratingDTO) {\n        axios.post(`http://localhost:8080/ratings`, ratingDTO)\n            .then(res => {\n                const data = res.data;\n                console.log(\"res one\", data, ratingDTO)\n                //setValue(value);\n            })\n    }\n\n    const ratingDTO = {\n        \"rating\": value,\n        \"bench\": bench\n    }\n\n    return (\n        <Fragment>\n            <Navbar />\n                {editing || postCardId === 'new' ?\n                    <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                        <Grid item xs={4}>\n                            <CardForm bench={postCardId === 'new' ? {} : bench} setBench={postCardId === 'new' ? () => {} : setBench} />\n                        </Grid>\n                    </Grid>\n                        \n                    :\n                    <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                        <Grid item xs={4}>\n                        <PostCard\n                            id={postCardId}\n                            image={randomImg(500, 500, postCardId)}\n                            deleteButton={true}\n                            editButton={true}\n                            title={bench.title}\n                            valueQuietness={bench.quietness}\n                            // valueRating={calRating(postCardId)}\n                            amountBenches={bench.amountBenches}\n                            amountFirePlaces={bench.amountFirePlaces}\n                            amountTrashCans={bench.amountTrashCans}\n                            distanceToNextShop={bench.distanceToNextShop}\n                            directions={bench.directions}\n                            readOnly={true}\n                            deleteFunction={() => deleteBench(postCardId)}\n                            editFunction={() => editBench(postCardId)}\n                        />\n                    </Grid>\n                    <Grid item xs={4}>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            Rate\n                        </Typography>\n                        <Rating name=\"hover-feedback\"\n                            value={value}\n                            onChange={(event, newValue) => {\n                                console.log(\"newvalue, \", newValue)\n\n                                ratingDTO.rating = newValue;\n                                console.log(\"ratingDTO\", ratingDTO)\n                                setValue(newValue)\n                                rateBench(ratingDTO)\n                            }}\n                        />\n                    </Grid>\n                    </Grid>\n                    }\n        </Fragment>\n    );\n}\n\nexport default CardPage;"]},"metadata":{},"sourceType":"module"}
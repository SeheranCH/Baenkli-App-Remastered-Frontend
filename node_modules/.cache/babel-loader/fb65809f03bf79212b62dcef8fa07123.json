{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swesthauser\\\\Documents\\\\_D\\\\Workspace\\\\tbz\\\\Baenkli-App-Remastered-Frontend\\\\src\\\\components\\\\organisms\\\\cardForm\\\\CardForm.js\";\nimport React, { Fragment, useState } from \"react\";\nimport Navbar from \"../../molecules/navbar/Navbar\";\nimport Grid from '@material-ui/core/Grid';\nimport { Formik } from \"formik\";\nimport { TextField } from \"@material-ui/core\";\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { useHistory } from 'react-router-dom';\nimport BenchService from \"../../../service/BenchService\";\nimport OwnButton from \"../../atoms/ownButton/OwnButton\";\nimport { CardValidationSchema } from \"../../other/validation/CardValidationSchema\";\n\nconst CardForm = ({\n  bench,\n  setBench,\n  modeCreate\n}) => {\n  const GreenSwitch = withStyles({\n    switchBase: {\n      color: \"#F3FAF0\",\n      '&$checked': {\n        color: \"#75BF4A\"\n      },\n      '&$checked + $track': {\n        backgroundColor: \"#75BF4A\"\n      }\n    },\n    checked: {},\n    track: {}\n  })(Switch);\n  const useStyles = makeStyles(theme => ({\n    root: {\n      background: \"#e6f3d8\",\n      color: \"black\"\n    },\n    heading: {\n      color: \"#47792A\",\n      textAlign: \"center\",\n      margin: '2vh'\n    }\n  }));\n  const classes = useStyles();\n  const history = useHistory();\n  const [hasMeadow, setHasMeadow] = useState(bench.hasMeadow);\n  const [locationOnWater, setLocationOnWater] = useState(bench.locationOnWater);\n\n  const handleChangeMeadow = () => {\n    setHasMeadow(!hasMeadow);\n  };\n\n  const handleChangeLocationOnwater = () => {\n    setLocationOnWater(!locationOnWater);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: bench,\n    enableReinitialize: true,\n    validationSchema: CardValidationSchema,\n    onSubmit: values => {\n      const dto = { ...bench,\n        ...values\n      };\n      console.log('DTO ', dto);\n\n      if (modeCreate) {\n        BenchService.create(dto).then(res => {\n          history.push(`/`);\n        }).catch(err => {\n          console.error('Error in CardForm ', err);\n        }).finally(() => {});\n      } else {\n        BenchService.update(dto.id, dto).then(res => {\n          history.push(`/`);\n        }).catch(err => {\n          console.error('Error in CardForm ', err);\n        }).finally(() => {});\n      }\n\n      {\n        /* if (bench.id !== 'new') {\r\n           axios.put(`http://localhost:8080/benches/${bench.id}`, dto)\r\n               .then(response => {\r\n                   setBench(response.data);\r\n                   history.push(`/`);\r\n               })\r\n               .catch(error => {\r\n                   console.error('Error in Put', error);\r\n               })\r\n               .finally(() => {\r\n                   setSubmitting(false);\r\n               })\r\n        } else {\r\n           axios.post(`http://localhost:8080/benches`, dto)\r\n               .then(response => {\r\n                   setBench(response.data);\r\n                   history.push(`/`);\r\n               })\r\n               .catch(error => {\r\n                   console.error('Error in Post', error);\r\n               })\r\n               .finally(() => {\r\n                   setSubmitting(false);\r\n               })\r\n        } */\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, ({\n    handleSubmit,\n    errors,\n    touched,\n    handleChange,\n    initialValues,\n    dirty\n  }) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\",\n      onSubmit: handleSubmit,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      className: classes.heading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 37\n      }\n    }, modeCreate ? \"Create publication\" : \"Change \" + bench.title), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      justify: \"space-around\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"title\",\n      label: \"Title *\",\n      error: errors.title && touched.title,\n      helperText: touched.title ? errors.title : null,\n      defaultValue: initialValues.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"description\",\n      label: \"Description\",\n      multiline: true,\n      error: errors.description && touched.description,\n      helperText: touched.description ? errors.description : null,\n      defaultValue: initialValues.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"latitude\",\n      label: \"Latitude\",\n      error: errors.latitude && touched.latitude,\n      helperText: touched.latitude ? errors.latitude : null,\n      defaultValue: initialValues.latitude,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"longitude\",\n      label: \"Longitude\",\n      error: errors.longitude && touched.longitude,\n      helperText: touched.longitude ? errors.longitude : null,\n      defaultValue: initialValues.longitude,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      name: \"amountBenches\",\n      label: \"Amount benches *\",\n      error: errors.amountBenches && touched.amountBenches,\n      helperText: touched.amountBenches ? errors.amountBenches : null,\n      defaultValue: initialValues.amountBenches,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      name: \"amountFirePlaces\",\n      label: \"Amount fire places *\",\n      error: errors.amountFirePlaces && touched.amountFirePlaces,\n      helperText: touched.amountFirePlaces ? errors.amountFirePlaces : null,\n      defaultValue: initialValues.amountFirePlaces,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      name: \"amountTrashCans\",\n      label: \"Amount trash cans *\",\n      error: errors.amountTrashCans && touched.amountTrashCans,\n      helperText: touched.amountTrashCans ? errors.amountTrashCans : null,\n      defaultValue: initialValues.amountTrashCans,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"distanceToNextShop\",\n      label: \"Distance to next shop\",\n      error: errors.distanceToNextShop && touched.distanceToNextShop,\n      helperText: touched.distanceToNextShop ? errors.distanceToNextShop : null,\n      defaultValue: initialValues.distanceToNextShop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"directions\",\n      label: \"Directions\",\n      multiline: true,\n      error: errors.directions && touched.directions,\n      helperText: touched.directions ? errors.directions : null,\n      defaultValue: initialValues.directions,\n      className: classes.switch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(GreenSwitch, {\n        checked: hasMeadow,\n        onChange: handleChangeMeadow,\n        color: \"primary\",\n        name: \"hasMeadow\",\n        inputProps: {\n          'aria-label': 'primary checkbox'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 58\n        }\n      }),\n      label: \"Meadows\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(GreenSwitch, {\n        checked: locationOnWater,\n        onChange: handleChangeLocationOnwater,\n        color: \"primary\",\n        name: \"locationOnWater\",\n        inputProps: {\n          'aria-label': 'primary checkbox'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 58\n        }\n      }),\n      label: \"Location on water\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(OwnButton, {\n      typeOfButton: 'submit',\n      text: modeCreate ? \"Create\" : \"Update\",\n      disabled: !modeCreate ? !dirty : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(OwnButton, {\n      typeOfButton: 'reset',\n      text: 'Reset',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 45\n      }\n    })))));\n  })));\n};\n\nexport default CardForm;","map":{"version":3,"sources":["C:/Users/swesthauser/Documents/_D/Workspace/tbz/Baenkli-App-Remastered-Frontend/src/components/organisms/cardForm/CardForm.js"],"names":["React","Fragment","useState","Navbar","Grid","Formik","TextField","Switch","Paper","makeStyles","withStyles","Typography","FormControlLabel","useHistory","BenchService","OwnButton","CardValidationSchema","CardForm","bench","setBench","modeCreate","GreenSwitch","switchBase","color","backgroundColor","checked","track","useStyles","theme","root","background","heading","textAlign","margin","classes","history","hasMeadow","setHasMeadow","locationOnWater","setLocationOnWater","handleChangeMeadow","handleChangeLocationOnwater","values","dto","console","log","create","then","res","push","catch","err","error","finally","update","id","handleSubmit","errors","touched","handleChange","initialValues","dirty","title","description","latitude","longitude","amountBenches","amountFirePlaces","amountTrashCans","distanceToNextShop","directions","switch"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport Navbar from \"../../molecules/navbar/Navbar\"\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Formik } from \"formik\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { useHistory } from 'react-router-dom'\r\nimport BenchService from \"../../../service/BenchService\";\r\nimport OwnButton from \"../../atoms/ownButton/OwnButton\";\r\nimport { CardValidationSchema } from \"../../other/validation/CardValidationSchema\";\r\n\r\n\r\nconst CardForm = ({ bench, setBench, modeCreate }) => {\r\n\r\n    const GreenSwitch = withStyles({\r\n        switchBase: {\r\n            color: \"#F3FAF0\",\r\n            '&$checked': {\r\n                color: \"#75BF4A\",\r\n            },\r\n            '&$checked + $track': {\r\n                backgroundColor: \"#75BF4A\",\r\n            },\r\n        },\r\n        checked: {},\r\n        track: {},\r\n    })(Switch);\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            background: \"#e6f3d8\",\r\n            color: \"black\"\r\n        },\r\n        heading: {\r\n            color: \"#47792A\",\r\n            textAlign: \"center\",\r\n            margin: '2vh'\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const history = useHistory();\r\n\r\n    const [hasMeadow, setHasMeadow] = useState(bench.hasMeadow);\r\n    const [locationOnWater, setLocationOnWater] = useState(bench.locationOnWater);\r\n\r\n    const handleChangeMeadow = () => {\r\n        setHasMeadow(!hasMeadow);\r\n    }\r\n\r\n    const handleChangeLocationOnwater = () => {\r\n        setLocationOnWater(!locationOnWater);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <Paper className={classes.root} >\r\n                <Formik\r\n                    initialValues={bench}\r\n                    enableReinitialize={true}\r\n                    validationSchema={CardValidationSchema}\r\n                    onSubmit={(values) => {\r\n                        const dto = { ...bench, ...values };\r\n                        console.log('DTO ', dto)\r\n                        if (modeCreate) {\r\n                            BenchService.create(dto)\r\n                                .then(res => {\r\n                                    history.push(`/`);\r\n                                })\r\n                                .catch(err => {\r\n                                    console.error('Error in CardForm ', err);\r\n                                })\r\n                                .finally(() => {\r\n                                })\r\n                        } else {\r\n                            BenchService.update(dto.id, dto)\r\n                                .then(res => {\r\n                                    history.push(`/`);\r\n                                })\r\n                                .catch(err => {\r\n                                    console.error('Error in CardForm ', err);\r\n                                })\r\n                                .finally(() => {\r\n                                })\r\n                        }\r\n                        {/* if (bench.id !== 'new') {\r\n                            axios.put(`http://localhost:8080/benches/${bench.id}`, dto)\r\n                                .then(response => {\r\n                                    setBench(response.data);\r\n                                    history.push(`/`);\r\n                                })\r\n                                .catch(error => {\r\n                                    console.error('Error in Put', error);\r\n                                })\r\n                                .finally(() => {\r\n                                    setSubmitting(false);\r\n                                })\r\n                        } else {\r\n                            axios.post(`http://localhost:8080/benches`, dto)\r\n                                .then(response => {\r\n                                    setBench(response.data);\r\n                                    history.push(`/`);\r\n                                })\r\n                                .catch(error => {\r\n                                    console.error('Error in Post', error);\r\n                                })\r\n                                .finally(() => {\r\n                                    setSubmitting(false);\r\n                                })\r\n                        } */}\r\n                    }}\r\n                >\r\n                    {({ handleSubmit, errors, touched, handleChange, initialValues, dirty }) => {\r\n                        return (\r\n                            <Fragment>\r\n                                <form method=\"post\" onSubmit={handleSubmit} onChange={handleChange}>\r\n                                    <Typography variant=\"h5\" className={classes.heading}>\r\n                                        {modeCreate ? \"Create publication\" : \"Change \" + bench.title}\r\n                                    </Typography>\r\n                                    <Grid\r\n                                        container\r\n                                        spacing={4}\r\n                                        justify=\"space-around\"\r\n                                        alignItems=\"center\"\r\n                                    >\r\n                                        <Grid item md={5}>\r\n                                            <TextField\r\n                                                id=\"standard-basic\"\r\n                                                name=\"title\"\r\n                                                label=\"Title *\"\r\n                                                error={errors.title && touched.title}\r\n                                                helperText={touched.title ? errors.title : null}\r\n                                                defaultValue={initialValues.title}\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item md={5}>\r\n                                            <TextField\r\n                                                id=\"standard-basic\"\r\n                                                name=\"description\"\r\n                                                label=\"Description\"\r\n                                                multiline\r\n                                                error={errors.description && touched.description}\r\n                                                helperText={touched.description ? errors.description : null}\r\n                                                defaultValue={initialValues.description}\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item md={5}>\r\n                                            <TextField\r\n                                                id=\"standard-basic\"\r\n                                                name=\"latitude\"\r\n                                                label=\"Latitude\"\r\n                                                error={errors.latitude && touched.latitude}\r\n                                                helperText={touched.latitude ? errors.latitude : null}\r\n                                                defaultValue={initialValues.latitude}\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item md={5}>\r\n                                            <TextField\r\n                                                id=\"standard-basic\"\r\n                                                name=\"longitude\"\r\n                                                label=\"Longitude\"\r\n                                                error={errors.longitude && touched.longitude}\r\n                                                helperText={touched.longitude ? errors.longitude : null}\r\n                                                defaultValue={initialValues.longitude}\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item md={5}>\r\n                                            <TextField\r\n                                                id=\"standard-number\"\r\n                                                name=\"amountBenches\"\r\n                                                label=\"Amount benches *\"\r\n                                                error={errors.amountBenches && touched.amountBenches}\r\n                                                helperText={touched.amountBenches ? errors.amountBenches : null}\r\n                                                defaultValue={initialValues.amountBenches}\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item md={5}>\r\n                                            <TextField\r\n                                                id=\"standard-number\"\r\n                                                name=\"amountFirePlaces\"\r\n                                                label=\"Amount fire places *\"\r\n                                                error={errors.amountFirePlaces && touched.amountFirePlaces}\r\n                                                helperText={touched.amountFirePlaces ? errors.amountFirePlaces : null}\r\n                                                defaultValue={initialValues.amountFirePlaces}\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item md={5}>\r\n                                            <TextField\r\n                                                id=\"standard-number\"\r\n                                                name=\"amountTrashCans\"\r\n                                                label=\"Amount trash cans *\"\r\n                                                error={errors.amountTrashCans && touched.amountTrashCans}\r\n                                                helperText={touched.amountTrashCans ? errors.amountTrashCans : null}\r\n                                                defaultValue={initialValues.amountTrashCans}\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item md={5}>\r\n                                            <TextField\r\n                                                id=\"standard-basic\"\r\n                                                name=\"distanceToNextShop\"\r\n                                                label=\"Distance to next shop\"\r\n                                                error={errors.distanceToNextShop && touched.distanceToNextShop}\r\n                                                helperText={touched.distanceToNextShop ? errors.distanceToNextShop : null}\r\n                                                defaultValue={initialValues.distanceToNextShop}\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item md={5}>\r\n                                            <TextField\r\n                                                id=\"standard-basic\"\r\n                                                name=\"directions\"\r\n                                                label=\"Directions\"\r\n                                                multiline\r\n                                                error={errors.directions && touched.directions}\r\n                                                helperText={touched.directions ? errors.directions : null}\r\n                                                defaultValue={initialValues.directions}\r\n                                                className={classes.switch}\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item md={5} />\r\n\r\n                                        <Grid item md={5}>\r\n                                            <FormControlLabel\r\n                                                control={<GreenSwitch\r\n                                                    checked={hasMeadow}\r\n                                                    onChange={handleChangeMeadow}\r\n                                                    color=\"primary\"\r\n                                                    name=\"hasMeadow\"\r\n                                                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                                />}\r\n                                                label=\"Meadows\"\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item md={5}>\r\n                                            <FormControlLabel\r\n                                                control={<GreenSwitch\r\n                                                    checked={locationOnWater}\r\n                                                    onChange={handleChangeLocationOnwater}\r\n                                                    color=\"primary\"\r\n                                                    name=\"locationOnWater\"\r\n                                                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                                />}\r\n                                                label=\"Location on water\"\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item md={5}>\r\n                                            <OwnButton\r\n                                                typeOfButton={'submit'}\r\n                                                text={modeCreate ? \"Create\" : \"Update\"}\r\n                                                disabled={!modeCreate ? !dirty : false}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item md={5}>\r\n                                            <OwnButton\r\n                                                typeOfButton={'reset'}\r\n                                                text={'Reset'}\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n                                </form>\r\n                            </Fragment>\r\n                        )\r\n                    }}\r\n                </Formik>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardForm;"]},"metadata":{},"sourceType":"module"}
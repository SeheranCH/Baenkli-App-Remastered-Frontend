{"ast":null,"code":"var _jsxFileName = \"/Users/ivogurtner/OneDrive - TBZ/M120/Baenkli-App-Frontend/src/components/pages/cardPage/cardPage.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../molecules/navbar/navbar\";\nimport PostCard from \"../../molecules/card/card\";\nimport CardForm from \"../../organisms/cardForm/cardForm\";\nimport Grid from '@material-ui/core/Grid';\nimport Rating from \"../../atoms/rating/rating\";\nimport Typography from '@material-ui/core/Typography';\n\nconst CardPage = props => {\n  const decider = () => {\n    if (props.match.params.id === undefined) {\n      return /*#__PURE__*/React.createElement(CardForm, {\n        bench: undefined,\n        setBench: undefined,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return props.match.params.id;\n    }\n  };\n\n  const [editing, setEditing] = useState(false);\n  const [postCardId, setPostCardId] = useState(decider);\n\n  function randomImg(width, height, key) {\n    var source = 'https://source.unsplash.com/random/' + width + 'x' + height + '/?bench,park' + key;\n    return source;\n  }\n\n  function calRating(ratingArray) {\n    if (ratingArray === undefined) {\n      return 0;\n    } else {\n      console.log(bench.ratings);\n      var total = 0;\n      var length = 0;\n      console.log(\"rating,\", ratingArray);\n      length = ratingArray.length;\n      ratingArray.map(r => total += r.rating);\n      let result = total / length;\n      return Math.round(result * 2) / 2;\n    }\n  }\n\n  const [bench, setBench] = useState([]);\n\n  function getOneBench(id) {\n    if (id !== undefined) {\n      axios.get(`http://localhost:8080/benches/${id}`).then(res => {\n        const data = res.data;\n        console.log(\"res one\", data);\n        setBench(data);\n      });\n    } else {\n      return null;\n    }\n  }\n\n  function deleteBench(id) {\n    axios.delete(`http://localhost:8080/benches/${id}`).then(res => {\n      props.history.push(`/`);\n    });\n  }\n\n  function editBench() {\n    setEditing(true);\n  }\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    getOneBench(postCardId);\n  }, []);\n  const [value, setValue] = useState();\n\n  function rateBench(ratingDTO) {\n    axios.post(`http://localhost:8080/ratings`, ratingDTO).then(res => {\n      const data = res.data;\n      console.log(\"res one\", data, ratingDTO); //setValue(value);\n    });\n  }\n\n  const ratingDTO = {\n    \"rating\": value,\n    \"bench\": bench\n  };\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }), editing || postCardId === 'new' ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardForm, {\n    bench: postCardId === 'new' ? {} : bench,\n    setBench: postCardId === 'new' ? () => {} : setBench,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }))) : /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PostCard, {\n    id: postCardId,\n    image: randomImg(500, 500, postCardId),\n    deleteButton: true,\n    editButton: true,\n    title: bench.title,\n    valueQuietness: bench.quiet,\n    valueRating: calRating(bench.ratings),\n    amountBenches: bench.amountBenches,\n    amountFirePlaces: bench.amountFirePlaces,\n    amountTrashCans: bench.amountTrashCans,\n    distanceToNextShop: bench.distanceToNextShop,\n    directions: bench.directions,\n    readOnly: true,\n    deleteFunction: () => deleteBench(postCardId),\n    editFunction: () => editBench(postCardId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, \"Rate\"), /*#__PURE__*/React.createElement(Rating, {\n    name: \"hover-feedback\",\n    value: value,\n    onChange: (event, newValue) => {\n      console.log(\"newvalue, \", newValue);\n      ratingDTO.rating = newValue;\n      console.log(\"ratingDTO\", ratingDTO);\n      setValue(newValue);\n      rateBench(ratingDTO);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }))));\n};\n\nexport default CardPage;","map":{"version":3,"sources":["/Users/ivogurtner/OneDrive - TBZ/M120/Baenkli-App-Frontend/src/components/pages/cardPage/cardPage.js"],"names":["React","Fragment","useState","useEffect","axios","Navbar","PostCard","CardForm","Grid","Rating","Typography","CardPage","props","decider","match","params","id","undefined","editing","setEditing","postCardId","setPostCardId","randomImg","width","height","key","source","calRating","ratingArray","console","log","bench","ratings","total","length","map","r","rating","result","Math","round","setBench","getOneBench","get","then","res","data","deleteBench","delete","history","push","editBench","value","setValue","rateBench","ratingDTO","post","title","quiet","amountBenches","amountFirePlaces","amountTrashCans","distanceToNextShop","directions","event","newValue"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../molecules/navbar/navbar\";\nimport PostCard from \"../../molecules/card/card\";\nimport CardForm from \"../../organisms/cardForm/cardForm\";\nimport Grid from '@material-ui/core/Grid';\nimport Rating from \"../../atoms/rating/rating\";\nimport Typography from '@material-ui/core/Typography';\n\nconst CardPage = (props) => {\n\n    const decider = () => {\n        if (props.match.params.id === undefined) {\n            return (\n                <CardForm bench={undefined} setBench={undefined} />\n            )\n        } else {\n            return props.match.params.id\n        }\n    }\n\n    const [editing, setEditing] = useState(false);\n    const [postCardId, setPostCardId] = useState(decider);\n\n\n    \n\n\n    function randomImg(width, height, key) {\n        var source = 'https://source.unsplash.com/random/' + width + 'x' + height + '/?bench,park' + key;\n        return source;\n    }\n\n    function calRating(ratingArray) {\n        if (ratingArray === undefined) {\n            return 0;\n        } else {\n            console.log(bench.ratings)\n            var total = 0;\n            var length = 0;\n            console.log(\"rating,\", ratingArray)\n            length = ratingArray.length;\n            ratingArray.map(r => total += r.rating);\n\n            let result = total / length;\n\n            return Math.round(result * 2) / 2;\n        }\n\n    }\n\n    const [bench, setBench] = useState([]);\n\n    function getOneBench(id) {\n        if (id !== undefined) {\n            axios.get(`http://localhost:8080/benches/${id}`)\n                .then(res => {\n                    const data = res.data;\n                    console.log(\"res one\", data)\n                    setBench(data);\n                })\n        } else {\n            return (\n                null\n            )\n        }\n\n    }\n\n    function deleteBench(id) {\n        axios.delete(`http://localhost:8080/benches/${id}`)\n            .then(res => {\n                props.history.push(`/`);\n            })\n    }\n\n    function editBench() {\n        setEditing(true);\n    }\n\n    useEffect(() => {\n        // Update the document title using the browser API\n        getOneBench(postCardId);\n    }, []);\n\n    const [value, setValue] = useState();\n\n    function rateBench(ratingDTO) {\n        axios.post(`http://localhost:8080/ratings`, ratingDTO)\n            .then(res => {\n                const data = res.data;\n                console.log(\"res one\", data, ratingDTO)\n                //setValue(value);\n            })\n    }\n\n    const ratingDTO = {\n        \"rating\": value,\n        \"bench\": bench\n    }\n\n    return (\n        <Fragment>\n            <Navbar />\n            {editing || postCardId === 'new' ?\n                <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                    <Grid item xs={4}>\n                        <CardForm bench={postCardId === 'new' ? {} : bench} setBench={postCardId === 'new' ? () => { } : setBench} />\n                    </Grid>\n                </Grid>\n\n                :\n                <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                    <Grid item md={4}>\n                        <PostCard\n                            id={postCardId}\n                            image={randomImg(500, 500, postCardId)}\n                            deleteButton={true}\n                            editButton={true}\n                            title={bench.title}\n                            valueQuietness={bench.quiet}\n                            valueRating={calRating(bench.ratings)}\n                            amountBenches={bench.amountBenches}\n                            amountFirePlaces={bench.amountFirePlaces}\n                            amountTrashCans={bench.amountTrashCans}\n                            distanceToNextShop={bench.distanceToNextShop}\n                            directions={bench.directions}\n                            readOnly={true}\n                            deleteFunction={() => deleteBench(postCardId)}\n                            editFunction={() => editBench(postCardId)}\n\n                        />\n                    </Grid>\n                    <Grid item md={4}>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            Rate\n                        </Typography>\n                        <Rating name=\"hover-feedback\"\n                            value={value}\n                            onChange={(event, newValue) => {\n                                console.log(\"newvalue, \", newValue)\n\n                                ratingDTO.rating = newValue;\n                                console.log(\"ratingDTO\", ratingDTO)\n                                setValue(newValue)\n                                rateBench(ratingDTO)\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n            }\n        </Fragment>\n    );\n}\n\nexport default CardPage;"]},"metadata":{},"sourceType":"module"}
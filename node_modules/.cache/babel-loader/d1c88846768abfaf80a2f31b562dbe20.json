{"ast":null,"code":"var _jsxFileName = \"/Users/ivogurtner/OneDrive - TBZ/M120/Baenkli-App-Frontend/src/components/organisms/cardForm/cardForm.js\";\nimport React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../molecules/navbar/navbar\";\nimport Grid from '@material-ui/core/Grid';\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"@material-ui/core\";\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst CardForm = ({\n  bench,\n  setBench\n}) => {\n  console.log('BENCH ID ', bench.id);\n  const GreenSwitch = withStyles({\n    switchBase: {\n      color: \"#F3FAF0\",\n      '&$checked': {\n        color: \"#75BF4A\"\n      },\n      '&$checked + $track': {\n        backgroundColor: \"#75BF4A\"\n      }\n    },\n    checked: {},\n    track: {}\n  })(Switch);\n  const useStyles = makeStyles(theme => ({\n    root: {\n      background: \"#e6f3d8\",\n      color: \"black\"\n    },\n    heading: {\n      color: \"#47792A\",\n      textAlign: \"center\"\n    },\n    subButton: {\n      backgroundColor: \"#355A20\",\n      color: \"white\",\n      '&:hover': {\n        backgroundColor: \"#47792A\",\n        color: '#FFF'\n      }\n    },\n    resButton: {}\n  }));\n  const classes = useStyles();\n  const [benchData, setBenchData] = useState(bench === undefined ? {} : [bench, setBench]);\n  const [hasMeadow, setHasMeadow] = useState(bench === undefined ? false : bench.hasMeadow);\n  const [locationOnWater, setLocationOnWater] = useState(bench === undefined ? false : bench.locationOnWater);\n  const [submitting, setSubmitting] = useState(false);\n\n  const handleChangeMeadow = () => {\n    setHasMeadow(!hasMeadow);\n  };\n\n  const handleChangeLocationOnwater = () => {\n    setLocationOnWater(!locationOnWater);\n  };\n\n  const regexName = /^[a-zA-Z äöüéèàÜÖÄÉÈÀ,+-]+$/;\n  const validationName = \"Please enter only letters\";\n  const validationMax = \"Max. 250 characters\";\n  const validationMinNumber = \"Minimum: 0\";\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().trim().matches(regexName, validationName).required(\"Title required\").max(250, validationMax),\n    description: Yup.string().trim().max(250, validationMax),\n    amountBenches: Yup.number().required(\"Amount of benches required\").min(0, validationMinNumber),\n    amountFirePlaces: Yup.number().required(\"Amount of fire places required\").min(0, validationMinNumber),\n    amountTrashCans: Yup.number().required(\"Amount of trash cans required\").min(0, validationMinNumber),\n    distanceToNextShop: Yup.number().min(0, validationMinNumber)\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: benchData,\n    enableReinitialize: true,\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setSubmitting(true);\n      const dto = { ...benchData,\n        ...values\n      };\n      console.log('DTO ', dto);\n\n      if (benchData !== undefined) {\n        axios.put(`http://localhost:8080/benches/${benchData.id}`, dto).then(response => {\n          setBenchData(response.data);\n        }).catch(error => {\n          console.error('Error in Put', error);\n        }).finally(() => {\n          setSubmitting(false);\n        });\n      } else {\n        axios.post(`http://localhost:8080/benches`, dto).then(response => {\n          setBenchData(response.data);\n        }).catch(error => {\n          console.error('Error in Post', error);\n        }).finally(() => {\n          setSubmitting(false);\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, ({\n    handleSubmit,\n    errors,\n    touched,\n    handleChange,\n    initialValues\n  }) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\",\n      onSubmit: handleSubmit,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      className: classes.heading,\n      component: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 37\n      }\n    }, benchData === undefined ? \"Create publication\" : \"Change \" + bench.title), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      justify: \"space-around\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"title\",\n      label: \"Title\",\n      required: true,\n      error: errors.title && touched.title,\n      helperText: touched.title ? errors.title : null,\n      defaultValue: initialValues.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"description\",\n      label: \"Description\",\n      multiline: true,\n      error: errors.description && touched.description,\n      helperText: touched.description ? errors.description : null,\n      defaultValue: initialValues.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"latitude\",\n      label: \"Latitude\",\n      error: errors.latitude && touched.latitude,\n      helperText: touched.latitude ? errors.latitude : null,\n      defaultValue: initialValues.latitude,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"longitude\",\n      label: \"Longitude\",\n      error: errors.longitude && touched.longitude,\n      helperText: touched.longitude ? errors.longitude : null,\n      defaultValue: initialValues.longitude,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      name: \"amountBenches\",\n      label: \"Amount benches\",\n      required: true,\n      type: \"number\",\n      error: errors.amountBenches && touched.amountBenches,\n      helperText: touched.amountBenches ? errors.amountBenches : null,\n      defaultValue: initialValues.amountBenches,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      name: \"amountFirePlaces\",\n      label: \"Amount fire places\",\n      required: true,\n      type: \"number\",\n      error: errors.amountFirePlaces && touched.amountFirePlaces,\n      helperText: touched.amountFirePlaces ? errors.amountFirePlaces : null,\n      defaultValue: initialValues.amountFirePlaces,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      name: \"amountTrashCans\",\n      label: \"Amount trash cans\",\n      required: true,\n      type: \"number\",\n      error: errors.amountTrashCans && touched.amountTrashCans,\n      helperText: touched.amountTrashCans ? errors.amountTrashCans : null,\n      defaultValue: initialValues.amountTrashCans,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"distanceToNextShop\",\n      label: \"Distance to next shop\",\n      error: errors.distanceToNextShop && touched.distanceToNextShop,\n      helperText: touched.distanceToNextShop ? errors.distanceToNextShop : null,\n      defaultValue: initialValues.distanceToNextShop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"directions\",\n      label: \"Directions\",\n      multiline: true,\n      error: errors.directions && touched.directions,\n      helperText: touched.directions ? errors.directions : null,\n      defaultValue: initialValues.directions,\n      className: classes.switch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(GreenSwitch, {\n        checked: hasMeadow,\n        onChange: handleChangeMeadow,\n        color: \"primary\",\n        name: \"hasMeadow\",\n        inputProps: {\n          'aria-label': 'primary checkbox'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 58\n        }\n      }),\n      label: \"Meadows\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(GreenSwitch, {\n        checked: locationOnWater,\n        onChange: handleChangeLocationOnwater,\n        color: \"primary\",\n        name: \"locationOnWater\",\n        inputProps: {\n          'aria-label': 'primary checkbox'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 58\n        }\n      }),\n      label: \"Location on water\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      disabled: submitting,\n      type: \"submit\",\n      className: classes.subButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 45\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      type: \"reset\",\n      className: classes.resButton,\n      onClick: () => {\n        setHasMeadow(false);\n        setLocationOnWater(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 45\n      }\n    }, \"Reset\")))));\n  })));\n};\n\nexport default CardForm;","map":{"version":3,"sources":["/Users/ivogurtner/OneDrive - TBZ/M120/Baenkli-App-Frontend/src/components/organisms/cardForm/cardForm.js"],"names":["React","Fragment","useState","axios","Navbar","Grid","Formik","Yup","TextField","Switch","Button","Paper","makeStyles","withStyles","Typography","FormControlLabel","CardForm","bench","setBench","console","log","id","GreenSwitch","switchBase","color","backgroundColor","checked","track","useStyles","theme","root","background","heading","textAlign","subButton","resButton","classes","benchData","setBenchData","undefined","hasMeadow","setHasMeadow","locationOnWater","setLocationOnWater","submitting","setSubmitting","handleChangeMeadow","handleChangeLocationOnwater","regexName","validationName","validationMax","validationMinNumber","validationSchema","object","shape","title","string","trim","matches","required","max","description","amountBenches","number","min","amountFirePlaces","amountTrashCans","distanceToNextShop","values","dto","put","then","response","data","catch","error","finally","post","handleSubmit","errors","touched","handleChange","initialValues","latitude","longitude","directions","switch"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../molecules/navbar/navbar\"\nimport Grid from '@material-ui/core/Grid';\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"@material-ui/core\";\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst CardForm = ({ bench, setBench }) => {\n\n    console.log('BENCH ID ', bench.id)\n\n    const GreenSwitch = withStyles({\n        switchBase: {\n            color: \"#F3FAF0\",\n            '&$checked': {\n                color: \"#75BF4A\",\n            },\n            '&$checked + $track': {\n                backgroundColor: \"#75BF4A\",\n            },\n        },\n        checked: {},\n        track: {},\n    })(Switch);\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            background: \"#e6f3d8\",\n            color: \"black\"\n        },\n        heading: {\n            color: \"#47792A\",\n            textAlign: \"center\"\n        },\n        subButton: {\n            backgroundColor: \"#355A20\",\n            color: \"white\",\n            '&:hover': {\n                backgroundColor: \"#47792A\",\n                color: '#FFF'\n            }\n\n        },\n        resButton: {\n\n        }\n    }));\n\n    const classes = useStyles();\n\n    const [benchData, setBenchData] = useState(bench === undefined ? {} : [bench, setBench]);\n    const [hasMeadow, setHasMeadow] = useState(bench === undefined ? false : bench.hasMeadow);\n    const [locationOnWater, setLocationOnWater] = useState(bench === undefined ? false : bench.locationOnWater);\n    const [submitting, setSubmitting] = useState(false);\n\n    const handleChangeMeadow = () => {\n        setHasMeadow(!hasMeadow);\n    }\n\n    const handleChangeLocationOnwater = () => {\n        setLocationOnWater(!locationOnWater);\n    }\n\n    const regexName = /^[a-zA-Z äöüéèàÜÖÄÉÈÀ,+-]+$/;\n    const validationName = \"Please enter only letters\";\n    const validationMax = \"Max. 250 characters\"\n    const validationMinNumber = \"Minimum: 0\";\n\n    const validationSchema = Yup.object().shape({\n        title: Yup.string()\n            .trim()\n            .matches(regexName, validationName)\n            .required(\"Title required\")\n            .max(250, validationMax),\n        description: Yup.string()\n            .trim()\n            .max(250, validationMax),\n        amountBenches: Yup.number()\n            .required(\"Amount of benches required\")\n            .min(0, validationMinNumber),\n        amountFirePlaces: Yup.number()\n            .required(\"Amount of fire places required\")\n            .min(0, validationMinNumber),\n        amountTrashCans: Yup.number()\n            .required(\"Amount of trash cans required\")\n            .min(0, validationMinNumber),\n        distanceToNextShop: Yup.number()\n            .min(0, validationMinNumber)\n    });\n\n    return (\n        <div>\n            <Navbar />\n            <Paper className={classes.root} >\n                <Formik\n                    initialValues={benchData}\n                    enableReinitialize={true}\n                    validationSchema={validationSchema}\n                    onSubmit={values => {\n                        setSubmitting(true);\n                        const dto = { ...benchData, ...values };\n                        console.log('DTO ', dto)\n                        if (benchData !== undefined) {\n                            axios.put(`http://localhost:8080/benches/${benchData.id}`, dto)\n                                .then(response => {\n                                    setBenchData(response.data)\n                                })\n                                .catch(error => {\n                                    console.error('Error in Put', error);\n                                })\n                                .finally(() => {\n                                    setSubmitting(false);\n                                })\n                        } else {\n                            axios.post(`http://localhost:8080/benches`, dto)\n                                .then(response => {\n                                    setBenchData(response.data);\n                                })\n                                .catch(error => {\n                                    console.error('Error in Post', error);\n                                })\n                                .finally(() => {\n                                    setSubmitting(false);\n                                })\n                        }\n                    }}\n                >\n                    {({ handleSubmit, errors, touched, handleChange, initialValues }) => {\n                        return (\n                            <Fragment>\n                                <form method=\"post\" onSubmit={handleSubmit} onChange={handleChange}>\n                                    <Typography variant=\"h5\" className={classes.heading} component=\"h3\">\n                                        {benchData === undefined ? \"Create publication\" : \"Change \" + bench.title}\n                                        </Typography>\n                                    <Grid\n                                        container\n                                        spacing={4}\n                                        justify=\"space-around\"\n                                        alignItems=\"center\"\n                                    >\n                                        <Grid item md={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"title\"\n                                                label=\"Title\"\n                                                required\n                                                error={errors.title && touched.title}\n                                                helperText={touched.title ? errors.title : null}\n                                                defaultValue={initialValues.title}\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"description\"\n                                                label=\"Description\"\n                                                multiline\n                                                error={errors.description && touched.description}\n                                                helperText={touched.description ? errors.description : null}\n                                                defaultValue={initialValues.description}\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"latitude\"\n                                                label=\"Latitude\"\n                                                error={errors.latitude && touched.latitude}\n                                                helperText={touched.latitude ? errors.latitude : null}\n                                                defaultValue={initialValues.latitude}\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"longitude\"\n                                                label=\"Longitude\"\n                                                error={errors.longitude && touched.longitude}\n                                                helperText={touched.longitude ? errors.longitude : null}\n                                                defaultValue={initialValues.longitude}\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}>\n                                            <TextField\n                                                id=\"standard-number\"\n                                                name=\"amountBenches\"\n                                                label=\"Amount benches\"\n                                                required\n                                                type=\"number\"\n                                                error={errors.amountBenches && touched.amountBenches}\n                                                helperText={touched.amountBenches ? errors.amountBenches : null}\n                                                defaultValue={initialValues.amountBenches}\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}>\n                                            <TextField\n                                                id=\"standard-number\"\n                                                name=\"amountFirePlaces\"\n                                                label=\"Amount fire places\"\n                                                required\n                                                type=\"number\"\n                                                error={errors.amountFirePlaces && touched.amountFirePlaces}\n                                                helperText={touched.amountFirePlaces ? errors.amountFirePlaces : null}\n                                                defaultValue={initialValues.amountFirePlaces}\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}>\n                                            <TextField\n                                                id=\"standard-number\"\n                                                name=\"amountTrashCans\"\n                                                label=\"Amount trash cans\"\n                                                required\n                                                type=\"number\"\n                                                error={errors.amountTrashCans && touched.amountTrashCans}\n                                                helperText={touched.amountTrashCans ? errors.amountTrashCans : null}\n                                                defaultValue={initialValues.amountTrashCans}\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"distanceToNextShop\"\n                                                label=\"Distance to next shop\"\n                                                error={errors.distanceToNextShop && touched.distanceToNextShop}\n                                                helperText={touched.distanceToNextShop ? errors.distanceToNextShop : null}\n                                                defaultValue={initialValues.distanceToNextShop}\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"directions\"\n                                                label=\"Directions\"\n                                                multiline\n                                                error={errors.directions && touched.directions}\n                                                helperText={touched.directions ? errors.directions : null}\n                                                defaultValue={initialValues.directions}\n                                                className={classes.switch}\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}/>\n\n                                        <Grid item md={5}>\n                                            <FormControlLabel\n                                                control={<GreenSwitch\n                                                    checked={hasMeadow}\n                                                    onChange={handleChangeMeadow}\n                                                    color=\"primary\"\n                                                    name=\"hasMeadow\"\n                                                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                                                />}\n                                                label=\"Meadows\"\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}>\n                                            <FormControlLabel\n                                                control={<GreenSwitch\n                                                    checked={locationOnWater}\n                                                    onChange={handleChangeLocationOnwater}\n                                                    color=\"primary\"\n                                                    name=\"locationOnWater\"\n                                                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                                                />}\n                                                label=\"Location on water\"\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}>\n                                            <Button variant=\"contained\" disabled={submitting} type=\"submit\" className={classes.subButton}>\n                                                Submit\n                                            </Button>\n                                        </Grid>\n                                        <Grid item md={5}>\n                                            <Button variant=\"contained\" type=\"reset\" className={classes.resButton} onClick={() => {\n                                                setHasMeadow(false);\n                                                setLocationOnWater(false);\n                                            }}>\n                                                Reset\n                                       </Button>\n                                        </Grid>\n\n                                    </Grid>\n                                </form>\n                            </Fragment>\n                        )\n                    }}\n                </Formik>\n            </Paper>\n        </div>\n    )\n}\n\nexport default CardForm;"]},"metadata":{},"sourceType":"module"}
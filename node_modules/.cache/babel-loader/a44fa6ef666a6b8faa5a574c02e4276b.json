{"ast":null,"code":"var _jsxFileName = \"/Users/ivogurtner/OneDrive - TBZ/M120/Baenkli-App-Frontend/src/components/organisms/cardForm/cardForm.js\";\nimport React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../molecules/navbar/navbar\";\nimport Grid from '@material-ui/core/Grid';\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"@material-ui/core\";\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst CardForm = ({\n  bench,\n  setBench\n}, props) => {\n  const GreenSwitch = withStyles({\n    switchBase: {\n      color: \"#F3FAF0\",\n      '&$checked': {\n        color: \"#75BF4A\"\n      },\n      '&$checked + $track': {\n        backgroundColor: \"#75BF4A\"\n      }\n    },\n    checked: {},\n    track: {}\n  })(Switch);\n  const useStyles = makeStyles(theme => ({\n    root: {\n      background: \"#e6f3d8\",\n      color: \"black\"\n    },\n    heading: {\n      color: \"#47792A\",\n      textAlign: \"center\",\n      margin: '2vh'\n    },\n    subButton: {\n      backgroundColor: \"#355A20\",\n      color: \"white\",\n      '&:hover': {\n        backgroundColor: \"#47792A\",\n        color: '#FFF'\n      }\n    }\n  }));\n  const classes = useStyles();\n  const [hasMeadow, setHasMeadow] = useState(bench === undefined ? false : bench.hasMeadow);\n  const [locationOnWater, setLocationOnWater] = useState(bench === undefined ? false : bench.locationOnWater);\n  const [submitting, setSubmitting] = useState(false);\n\n  const handleChangeMeadow = () => {\n    setHasMeadow(!hasMeadow);\n  };\n\n  const handleChangeLocationOnwater = () => {\n    setLocationOnWater(!locationOnWater);\n  };\n\n  const regexName = /^[a-zA-Z äöüéèàÜÖÄÉÈÀ,+-]+$/;\n  const validationName = \"Please enter only letters\";\n  const validationMax = \"Max. 250 characters\";\n  const validationMinNumber = \"Minimum: 0\";\n  const validationMinLatitude = \"Minimum of latitude: -90\";\n  const validationMaxLatitude = \"Maximum of latitude: +90\";\n  const validationMinLongitude = \"Minimum of longitude: -180\";\n  const validationMaxLongitude = \"Maximum of longitude: +180\";\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().trim().matches(regexName, validationName).required(\"Title required\").max(250, validationMax),\n    description: Yup.string().trim().max(250, validationMax),\n    latitude: Yup.number().min(-90, validationMinLatitude).max(90, validationMaxLatitude),\n    longitude: Yup.number().min(-180, validationMinLongitude).max(180, validationMaxLongitude),\n    amountBenches: Yup.number().required(\"Amount of benches required\").min(0, validationMinNumber),\n    amountFirePlaces: Yup.number().required(\"Amount of fire places required\").min(0, validationMinNumber),\n    amountTrashCans: Yup.number().required(\"Amount of trash cans required\").min(0, validationMinNumber),\n    distanceToNextShop: Yup.number().min(0, validationMinNumber)\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: bench,\n    enableReinitialize: true,\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setSubmitting(true);\n      const dto = { ...bench,\n        ...values\n      };\n      console.log('DTO ', dto);\n\n      if (bench.id !== 'new') {\n        axios.put(`http://localhost:8080/benches/${bench.id}`, dto).then(response => {\n          setBench(response.data);\n        }).catch(error => {\n          console.error('Error in Put', error);\n        }).finally(() => {\n          setSubmitting(false);\n        });\n      } else {\n        axios.post(`http://localhost:8080/benches`, dto).then(response => {\n          setBench(response.data);\n        }).catch(error => {\n          console.error('Error in Post', error);\n        }).finally(() => {\n          setSubmitting(false);\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, ({\n    handleSubmit,\n    errors,\n    touched,\n    handleChange,\n    initialValues\n  }) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\",\n      onSubmit: handleSubmit,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      className: classes.heading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 37\n      }\n    }, bench.id === 'new' ? \"Create publication\" : \"Change \" + bench.title), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      justify: \"space-around\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"title\",\n      label: \"Title\",\n      required: true,\n      error: errors.title && touched.title,\n      helperText: touched.title ? errors.title : null,\n      defaultValue: initialValues.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"description\",\n      label: \"Description\",\n      multiline: true,\n      error: errors.description && touched.description,\n      helperText: touched.description ? errors.description : null,\n      defaultValue: initialValues.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"latitude\",\n      label: \"Latitude\",\n      error: errors.latitude && touched.latitude,\n      helperText: touched.latitude ? errors.latitude : null,\n      defaultValue: initialValues.latitude,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"longitude\",\n      label: \"Longitude\",\n      error: errors.longitude && touched.longitude,\n      helperText: touched.longitude ? errors.longitude : null,\n      defaultValue: initialValues.longitude,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      name: \"amountBenches\",\n      label: \"Amount benches\",\n      required: true,\n      error: errors.amountBenches && touched.amountBenches,\n      helperText: touched.amountBenches ? errors.amountBenches : null,\n      defaultValue: initialValues.amountBenches,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      name: \"amountFirePlaces\",\n      label: \"Amount fire places\",\n      required: true,\n      error: errors.amountFirePlaces && touched.amountFirePlaces,\n      helperText: touched.amountFirePlaces ? errors.amountFirePlaces : null,\n      defaultValue: initialValues.amountFirePlaces,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      name: \"amountTrashCans\",\n      label: \"Amount trash cans\",\n      required: true,\n      type: \"number\",\n      error: errors.amountTrashCans && touched.amountTrashCans,\n      helperText: touched.amountTrashCans ? errors.amountTrashCans : null,\n      defaultValue: initialValues.amountTrashCans,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"distanceToNextShop\",\n      label: \"Distance to next shop (in meters)\",\n      error: errors.distanceToNextShop && touched.distanceToNextShop,\n      helperText: touched.distanceToNextShop ? errors.distanceToNextShop : null,\n      defaultValue: initialValues.distanceToNextShop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"directions\",\n      label: \"Directions\",\n      multiline: true,\n      error: errors.directions && touched.directions,\n      helperText: touched.directions ? errors.directions : null,\n      defaultValue: initialValues.directions,\n      className: classes.switch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(GreenSwitch, {\n        checked: hasMeadow,\n        onChange: handleChangeMeadow,\n        color: \"primary\",\n        name: \"hasMeadow\",\n        inputProps: {\n          'aria-label': 'primary checkbox'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 58\n        }\n      }),\n      label: \"Meadows\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(GreenSwitch, {\n        checked: locationOnWater,\n        onChange: handleChangeLocationOnwater,\n        color: \"primary\",\n        name: \"locationOnWater\",\n        inputProps: {\n          'aria-label': 'primary checkbox'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 58\n        }\n      }),\n      label: \"Location on water\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      disabled: submitting || Object.values(errors).length !== 0,\n      type: \"submit\",\n      className: classes.subButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 45\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      type: \"reset\",\n      className: classes.resButton,\n      onClick: () => {\n        setHasMeadow(false);\n        setLocationOnWater(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 45\n      }\n    }, \"Reset\")))));\n  })));\n};\n\nexport default CardForm;","map":{"version":3,"sources":["/Users/ivogurtner/OneDrive - TBZ/M120/Baenkli-App-Frontend/src/components/organisms/cardForm/cardForm.js"],"names":["React","Fragment","useState","axios","Navbar","Grid","Formik","Yup","TextField","Switch","Button","Paper","makeStyles","withStyles","Typography","FormControlLabel","CardForm","bench","setBench","props","GreenSwitch","switchBase","color","backgroundColor","checked","track","useStyles","theme","root","background","heading","textAlign","margin","subButton","classes","hasMeadow","setHasMeadow","undefined","locationOnWater","setLocationOnWater","submitting","setSubmitting","handleChangeMeadow","handleChangeLocationOnwater","regexName","validationName","validationMax","validationMinNumber","validationMinLatitude","validationMaxLatitude","validationMinLongitude","validationMaxLongitude","validationSchema","object","shape","title","string","trim","matches","required","max","description","latitude","number","min","longitude","amountBenches","amountFirePlaces","amountTrashCans","distanceToNextShop","values","dto","console","log","id","put","then","response","data","catch","error","finally","post","handleSubmit","errors","touched","handleChange","initialValues","directions","switch","Object","length","resButton"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../molecules/navbar/navbar\"\nimport Grid from '@material-ui/core/Grid';\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"@material-ui/core\";\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst CardForm = ({ bench, setBench }, props) => {\n\n    const GreenSwitch = withStyles({\n        switchBase: {\n            color: \"#F3FAF0\",\n            '&$checked': {\n                color: \"#75BF4A\",\n            },\n            '&$checked + $track': {\n                backgroundColor: \"#75BF4A\",\n            },\n        },\n        checked: {},\n        track: {},\n    })(Switch);\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            background: \"#e6f3d8\",\n            color: \"black\"\n        },\n        heading: {\n            color: \"#47792A\",\n            textAlign: \"center\",\n            margin: '2vh'\n        },\n        subButton: {\n            backgroundColor: \"#355A20\",\n            color: \"white\",\n            '&:hover': {\n                backgroundColor: \"#47792A\",\n                color: '#FFF'\n            }\n\n        },\n    }));\n\n    const classes = useStyles();\n\n    const [hasMeadow, setHasMeadow] = useState(bench === undefined ? false : bench.hasMeadow);\n    const [locationOnWater, setLocationOnWater] = useState(bench === undefined ? false : bench.locationOnWater);\n    const [submitting, setSubmitting] = useState(false);\n\n    const handleChangeMeadow = () => {\n        setHasMeadow(!hasMeadow);\n    }\n\n    const handleChangeLocationOnwater = () => {\n        setLocationOnWater(!locationOnWater);\n    }\n\n    const regexName = /^[a-zA-Z äöüéèàÜÖÄÉÈÀ,+-]+$/;\n    const validationName = \"Please enter only letters\";\n    const validationMax = \"Max. 250 characters\"\n    const validationMinNumber = \"Minimum: 0\";\n    const validationMinLatitude = \"Minimum of latitude: -90\";\n    const validationMaxLatitude = \"Maximum of latitude: +90\";\n    const validationMinLongitude = \"Minimum of longitude: -180\";\n    const validationMaxLongitude = \"Maximum of longitude: +180\";\n\n    const validationSchema = Yup.object().shape({\n        title: Yup.string()\n            .trim()\n            .matches(regexName, validationName)\n            .required(\"Title required\")\n            .max(250, validationMax),\n        description: Yup.string()\n            .trim()\n            .max(250, validationMax),\n        latitude: Yup.number()\n            .min(-90, validationMinLatitude)\n            .max(90, validationMaxLatitude),\n        longitude: Yup.number()\n            .min(-180, validationMinLongitude)\n            .max(180, validationMaxLongitude),\n        amountBenches: Yup.number()\n            .required(\"Amount of benches required\")\n            .min(0, validationMinNumber),\n        amountFirePlaces: Yup.number()\n            .required(\"Amount of fire places required\")\n            .min(0, validationMinNumber),\n        amountTrashCans: Yup.number()\n            .required(\"Amount of trash cans required\")\n            .min(0, validationMinNumber),\n        distanceToNextShop: Yup.number()\n            .min(0, validationMinNumber),\n    });\n\n    return (\n        <div>\n            <Navbar />\n            <Paper className={classes.root} >\n                <Formik\n                    initialValues={bench}\n                    enableReinitialize={true}\n                    validationSchema={validationSchema}\n                    onSubmit={(values) => {\n                        setSubmitting(true);\n                        const dto = { ...bench, ...values };\n                        console.log('DTO ', dto)\n                        if (bench.id !== 'new') {\n                            axios.put(`http://localhost:8080/benches/${bench.id}`, dto)\n                                .then(response => {\n                                    setBench(response.data)\n                                })\n                                .catch(error => {\n                                    console.error('Error in Put', error);\n                                })\n                                .finally(() => {\n                                    setSubmitting(false);\n                                })\n                        } else {\n                            axios.post(`http://localhost:8080/benches`, dto)\n                                .then(response => {\n                                    setBench(response.data);\n                                })\n                                .catch(error => {\n                                    console.error('Error in Post', error);\n                                })\n                                .finally(() => {\n                                    setSubmitting(false);\n                                })\n                        }\n                    }}\n                >\n                    {({ handleSubmit, errors, touched, handleChange, initialValues }) => {\n                        return (\n                            <Fragment>\n                                <form method=\"post\" onSubmit={handleSubmit} onChange={handleChange}>\n                                    <Typography variant=\"h5\" className={classes.heading}>\n                                        {bench.id === 'new' ? \"Create publication\" : \"Change \" + bench.title}\n                                    </Typography>\n                                    <Grid\n                                        container\n                                        spacing={4}\n                                        justify=\"space-around\"\n                                        alignItems=\"center\"\n                                    >\n                                        <Grid item md={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"title\"\n                                                label=\"Title\"\n                                                required\n                                                error={errors.title && touched.title}\n                                                helperText={touched.title ? errors.title : null}\n                                                defaultValue={initialValues.title}\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"description\"\n                                                label=\"Description\"\n                                                multiline\n                                                error={errors.description && touched.description}\n                                                helperText={touched.description ? errors.description : null}\n                                                defaultValue={initialValues.description}\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"latitude\"\n                                                label=\"Latitude\"\n                                                error={errors.latitude && touched.latitude}\n                                                helperText={touched.latitude ? errors.latitude : null}\n                                                defaultValue={initialValues.latitude}\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"longitude\"\n                                                label=\"Longitude\"\n                                                error={errors.longitude && touched.longitude}\n                                                helperText={touched.longitude ? errors.longitude : null}\n                                                defaultValue={initialValues.longitude}\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}>\n                                            <TextField\n                                                id=\"standard-number\"\n                                                name=\"amountBenches\"\n                                                label=\"Amount benches\"\n                                                required\n                                                error={errors.amountBenches && touched.amountBenches}\n                                                helperText={touched.amountBenches ? errors.amountBenches : null}\n                                                defaultValue={initialValues.amountBenches}\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}>\n                                            <TextField\n                                                id=\"standard-number\"\n                                                name=\"amountFirePlaces\"\n                                                label=\"Amount fire places\"\n                                                required\n                                                error={errors.amountFirePlaces && touched.amountFirePlaces}\n                                                helperText={touched.amountFirePlaces ? errors.amountFirePlaces : null}\n                                                defaultValue={initialValues.amountFirePlaces}\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}>\n                                            <TextField\n                                                id=\"standard-number\"\n                                                name=\"amountTrashCans\"\n                                                label=\"Amount trash cans\"\n                                                required\n                                                type=\"number\"\n                                                error={errors.amountTrashCans && touched.amountTrashCans}\n                                                helperText={touched.amountTrashCans ? errors.amountTrashCans : null}\n                                                defaultValue={initialValues.amountTrashCans}\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"distanceToNextShop\"\n                                                label=\"Distance to next shop (in meters)\"\n                                                error={errors.distanceToNextShop && touched.distanceToNextShop}\n                                                helperText={touched.distanceToNextShop ? errors.distanceToNextShop : null}\n                                                defaultValue={initialValues.distanceToNextShop}\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"directions\"\n                                                label=\"Directions\"\n                                                multiline\n                                                error={errors.directions && touched.directions}\n                                                helperText={touched.directions ? errors.directions : null}\n                                                defaultValue={initialValues.directions}\n                                                className={classes.switch}\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}>\n                                            <FormControlLabel\n                                                control={<GreenSwitch\n                                                    checked={hasMeadow}\n                                                    onChange={handleChangeMeadow}\n                                                    color=\"primary\"\n                                                    name=\"hasMeadow\"\n                                                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                                                />}\n                                                label=\"Meadows\"\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}>\n                                            <FormControlLabel\n                                                control={<GreenSwitch\n                                                    checked={locationOnWater}\n                                                    onChange={handleChangeLocationOnwater}\n                                                    color=\"primary\"\n                                                    name=\"locationOnWater\"\n                                                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                                                />}\n                                                label=\"Location on water\"\n                                            />\n                                        </Grid>\n\n                                        <Grid item md={5}>\n                                            <Button variant=\"contained\" disabled={submitting || Object.values(errors).length !== 0} type=\"submit\" className={classes.subButton}>\n                                                Submit\n                                            </Button>\n                                        </Grid>\n                                        <Grid item md={5}>\n                                            <Button variant=\"contained\" type=\"reset\" className={classes.resButton} onClick={() => {\n                                                setHasMeadow(false);\n                                                setLocationOnWater(false);\n                                            }}>\n                                                Reset\n                                       </Button>\n                                        </Grid>\n\n                                    </Grid>\n                                </form>\n                            </Fragment>\n                        )\n                    }}\n                </Formik>\n            </Paper>\n        </div>\n    )\n}\n\nexport default CardForm;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swesthauser\\\\Documents\\\\_D\\\\Workspace\\\\tbz\\\\Baenkli-App-Remastered-Frontend\\\\src\\\\components\\\\pages\\\\cardPage\\\\CardPage.js\";\nimport React, { Fragment, useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Navbar from \"../../molecules/navbar/Navbar\";\nimport PostCard from \"../../molecules/card/Card\";\nimport CommentField from \"../../molecules/commentField/CommentField\";\nimport CardForm from \"../../organisms/cardForm/CardForm\";\nimport Grid from '@material-ui/core/Grid';\nimport Rating from \"../../atoms/rating/Rating\";\nimport Typography from '@material-ui/core/Typography';\nimport SessionHandlerContext from '../../other/context/SessionHandlerContext';\nconst useStyles = makeStyles(theme => ({\n  input: {\n    marginBottom: \"200px\"\n  }\n}));\n\nconst CardPage = props => {\n  const classes = useStyles();\n  const {\n    user\n  } = useContext(SessionHandlerContext);\n  const postCardId = props.match.params.id;\n  const [editing, setEditing] = useState(false);\n  const [bench, setBench] = useState([]);\n  const [readOnlyRating, setReadOnlyRating] = useState(false);\n  const [readOnlyQuiet, setReadOnlyQuiet] = useState(false);\n\n  function randomImg(width, height, key) {\n    var source = 'https://source.unsplash.com/random/' + width + 'x' + height + '/?bench,park' + key;\n    return source;\n  }\n\n  function calRating(ratingArray) {\n    if (ratingArray === undefined) {\n      return 0;\n    } else {\n      console.log(bench.ratings);\n      var total = 0;\n      var length = 0;\n      console.log(\"rating,\", ratingArray);\n      length = ratingArray.length;\n      ratingArray.map(r => total += r.rating);\n      let result = total / length;\n      return Math.round(result * 2) / 2;\n    }\n  }\n\n  function getOneBench(id) {\n    if (id !== undefined) {\n      axios.get(`http://localhost:8080/benches/${id}`).then(res => {\n        setBench(res.data);\n      });\n    }\n  }\n\n  function deleteBench(id) {\n    axios.delete(`http://localhost:8080/benches/${id}`).then(() => {\n      props.history.push(`/`);\n    });\n  }\n\n  function editBench() {\n    setEditing(true);\n  }\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    getOneBench(postCardId);\n  }, []);\n  const [valueRating, setValueRating] = useState({});\n  const [valueQuiet, setValueQuiet] = useState({});\n\n  function postRating(dtoObject) {\n    axios.post(`http://localhost:8080/ratings`, dtoObject).then(res => {\n      putBenchByRating(res.data);\n    });\n  }\n\n  function postQuiet(dtoObject) {\n    axios.post(`http://localhost:8080/quiets`, dtoObject).then(res => {});\n  }\n\n  function putBenchByRating(dtoRating) {\n    axios.put(`http://localhost:8080/benches/${bench.id}/rating/${dtoRating.id}`, bench).then(res => {\n      setBench(res.data);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }), editing || postCardId === 'new' ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardForm, {\n    bench: postCardId === 'new' ? { ...bench,\n      id: 'new'\n    } : bench,\n    setBench: postCardId === 'new' ? () => {} : setBench,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }))) : /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PostCard, {\n    id: postCardId,\n    image: randomImg(500, 500, postCardId),\n    deleteButton: true,\n    editButton: true,\n    title: bench.title,\n    averageQuiet: bench.quietness,\n    averageRating: calRating(bench.ratings),\n    amountBenches: bench.amountBenches,\n    amountFirePlaces: bench.amountFirePlaces,\n    amountTrashCans: bench.amountTrashCans,\n    distanceToNextShop: bench.distanceToNextShop,\n    directions: bench.directions,\n    readOnly: true,\n    deleteFunction: () => deleteBench(postCardId),\n    editFunction: () => editBench(postCardId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, \"Rate\"), /*#__PURE__*/React.createElement(Rating, {\n    name: \"rating-feedback\",\n    precicion: 0.5,\n    value: valueRating,\n    readOnly: readOnlyRating,\n    onChange: (event, value) => {\n      setValueRating(value);\n      postRating({\n        rating: value\n      });\n      setReadOnlyRating(true);\n      console.log('VALUE RATING ', value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(CommentField, {\n    username: user.username,\n    firstName: user.firstName,\n    lastName: user.lastName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }))));\n};\n\nexport default CardPage;","map":{"version":3,"sources":["C:/Users/swesthauser/Documents/_D/Workspace/tbz/Baenkli-App-Remastered-Frontend/src/components/pages/cardPage/CardPage.js"],"names":["React","Fragment","useState","useEffect","useContext","axios","makeStyles","Navbar","PostCard","CommentField","CardForm","Grid","Rating","Typography","SessionHandlerContext","useStyles","theme","input","marginBottom","CardPage","props","classes","user","postCardId","match","params","id","editing","setEditing","bench","setBench","readOnlyRating","setReadOnlyRating","readOnlyQuiet","setReadOnlyQuiet","randomImg","width","height","key","source","calRating","ratingArray","undefined","console","log","ratings","total","length","map","r","rating","result","Math","round","getOneBench","get","then","res","data","deleteBench","delete","history","push","editBench","valueRating","setValueRating","valueQuiet","setValueQuiet","postRating","dtoObject","post","putBenchByRating","postQuiet","dtoRating","put","title","quietness","amountBenches","amountFirePlaces","amountTrashCans","distanceToNextShop","directions","event","value","username","firstName","lastName"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Navbar from \"../../molecules/navbar/Navbar\";\r\nimport PostCard from \"../../molecules/card/Card\";\r\nimport CommentField from \"../../molecules/commentField/CommentField\";\r\nimport CardForm from \"../../organisms/cardForm/CardForm\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Rating from \"../../atoms/rating/Rating\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SessionHandlerContext from '../../other/context/SessionHandlerContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n        marginBottom: \"200px\"\r\n    },\r\n}));\r\n\r\nconst CardPage = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const { user } = useContext(SessionHandlerContext);\r\n\r\n    const postCardId = props.match.params.id;\r\n    const [editing, setEditing] = useState(false);\r\n    const [bench, setBench] = useState([]);\r\n    const [readOnlyRating, setReadOnlyRating] = useState(false);\r\n    const [readOnlyQuiet, setReadOnlyQuiet] = useState(false);\r\n\r\n    function randomImg(width, height, key) {\r\n        var source = 'https://source.unsplash.com/random/' + width + 'x' + height + '/?bench,park' + key;\r\n        return source;\r\n    }\r\n\r\n    function calRating(ratingArray) {\r\n        if (ratingArray === undefined) {\r\n            return 0;\r\n        } else {\r\n            console.log(bench.ratings)\r\n            var total = 0;\r\n            var length = 0;\r\n            console.log(\"rating,\", ratingArray)\r\n            length = ratingArray.length;\r\n            ratingArray.map(r => total += r.rating);\r\n\r\n            let result = total / length;\r\n\r\n            return Math.round(result * 2) / 2;\r\n        }\r\n\r\n    }\r\n\r\n    function getOneBench(id) {\r\n        if (id !== undefined) {\r\n            axios.get(`http://localhost:8080/benches/${id}`)\r\n                .then((res) => {\r\n                    setBench(res.data);\r\n                })\r\n        }\r\n    }\r\n\r\n    function deleteBench(id) {\r\n        axios.delete(`http://localhost:8080/benches/${id}`)\r\n            .then(() => {\r\n                props.history.push(`/`);\r\n            })\r\n    }\r\n\r\n    function editBench() {\r\n        setEditing(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        getOneBench(postCardId);\r\n    }, []);\r\n\r\n    const [valueRating, setValueRating] = useState({});\r\n    const [valueQuiet, setValueQuiet] = useState({});\r\n\r\n    function postRating(dtoObject) {\r\n        axios.post(`http://localhost:8080/ratings`, dtoObject)\r\n            .then(res => {\r\n                putBenchByRating(res.data);\r\n            })\r\n    }\r\n\r\n    function postQuiet(dtoObject) {\r\n        axios.post(`http://localhost:8080/quiets`, dtoObject)\r\n            .then(res => {\r\n            })\r\n    }\r\n\r\n    function putBenchByRating(dtoRating) {\r\n        axios.put(`http://localhost:8080/benches/${bench.id}/rating/${dtoRating.id}`, bench)\r\n            .then(res => {\r\n                setBench(res.data);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Navbar />\r\n            {editing || postCardId === 'new' ?\r\n                <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\r\n                    <Grid item xs={4}>\r\n                        <CardForm bench={postCardId === 'new' ? { ...bench, id: 'new' } : bench} setBench={postCardId === 'new' ? () => { } : setBench} />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                :\r\n                <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\r\n                    <Grid item md={4}>\r\n                        <PostCard\r\n                            id={postCardId}\r\n                            image={randomImg(500, 500, postCardId)}\r\n                            deleteButton={true}\r\n                            editButton={true}\r\n                            title={bench.title}\r\n                            averageQuiet={bench.quietness}\r\n                            averageRating={calRating(bench.ratings)}\r\n                            amountBenches={bench.amountBenches}\r\n                            amountFirePlaces={bench.amountFirePlaces}\r\n                            amountTrashCans={bench.amountTrashCans}\r\n                            distanceToNextShop={bench.distanceToNextShop}\r\n                            directions={bench.directions}\r\n                            readOnly={true}\r\n                            deleteFunction={() => deleteBench(postCardId)}\r\n                            editFunction={() => editBench(postCardId)}\r\n\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={4}>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h6\">\r\n                            Rate\r\n                            </Typography>\r\n                        <Rating\r\n                            name=\"rating-feedback\"\r\n                            precicion={0.5}\r\n                            value={valueRating}\r\n                            readOnly={readOnlyRating}\r\n                            onChange={(event, value) => {\r\n                                setValueRating(value);\r\n                                postRating({ rating: value });\r\n                                setReadOnlyRating(true);\r\n                                console.log('VALUE RATING ', value)\r\n                            }}\r\n                        />\r\n\r\n                        <CommentField username={user.username} firstName={user.firstName} lastName={user.lastName} />\r\n                    </Grid>\r\n                </Grid>\r\n            }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default CardPage;"]},"metadata":{},"sourceType":"module"}
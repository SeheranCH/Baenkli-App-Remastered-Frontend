{"ast":null,"code":"var _jsxFileName = \"/Users/ivogurtner/OneDrive - TBZ/M120/Baenkli-App-Frontend/src/components/organisms/cardForm/cardForm.js\";\nimport React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../molecules/navbar/navbar\";\nimport Grid from '@material-ui/core/Grid';\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"@material-ui/core\";\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst CardForm = ({\n  bench,\n  setBench\n}) => {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n      padding: \"15px\",\n      margin: \"30px\",\n      background: \"#e6f3d8\",\n      color: \"black\"\n    }\n  }));\n  const classes = useStyles();\n  const [hasMeadow, setHasMeadow] = useState(bench === undefined ? false : bench.hasMeadow);\n  const [locationOnWater, setLocationOnWater] = useState(bench === undefined ? false : bench.locationOnWater);\n  const [submitting, setSubmitting] = useState(false);\n\n  const handleChangeMeadow = () => {\n    setHasMeadow(!hasMeadow);\n  };\n\n  const handleChangeLocationOnwater = () => {\n    setLocationOnWater(!locationOnWater);\n  };\n\n  const regexName = /^[a-zA-Z äöüéèàÜÖÄÉÈÀ,+-]+$/;\n  const validationName = \"Please enter only letters\";\n  const validationMax = \"Max. 250 characters\";\n  const validationMinNumber = \"Minimum: 0\";\n  const validationMaxNumber = \"Maximum: 5\";\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().trim().matches(regexName, validationName).required(\"Title required\").max(250, validationMax),\n    description: Yup.string().trim().max(250, validationMax),\n    amountBenches: Yup.number().min(0, validationMinNumber),\n    amountFirePlaces: Yup.number().min(0, validationMinNumber),\n    amountTrashCans: Yup.number().min(0, validationMinNumber),\n    distanceToNextShop: Yup.string().trim().max(250, validationMax),\n    quiet: Yup.number().min(0, validationMinNumber).max(5, validationMaxNumber)\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: bench === undefined ? {} : bench,\n    enableReinitialize: true,\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setSubmitting(true);\n      const dto = { ...bench,\n        ...values\n      };\n      console.log('DTO ', dto);\n\n      if (bench !== undefined) {\n        axios.put(`http://localhost:8080/benches/${bench.id}`, dto).then(response => {\n          setSubmitting(false);\n          setBench(response.data);\n        }).catch(error => {\n          setSubmitting(false);\n          console.error('Error in Put', error);\n        });\n      } else {\n        axios.post(`http://localhost:8080/benches`, dto).then(response => {\n          setSubmitting(false);\n          setBench(response.data);\n        }).catch(error => {\n          setSubmitting(false);\n          console.error('Error in Post', error);\n        });\n      }\n\n      {\n        /* window.location.assign('/'); */\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, ({\n    handleSubmit,\n    errors,\n    touched,\n    handleChange,\n    initialValues\n  }) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\",\n      onSubmit: handleSubmit,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textPrimary\",\n      component: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 37\n      }\n    }, \"New bench\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"title\",\n      label: \"Title\",\n      error: errors.title && touched.title,\n      helperText: touched.title ? errors.title : null,\n      defaultValue: initialValues.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"description\",\n      label: \"Description\",\n      multiline: true,\n      error: errors.description && touched.description,\n      helperText: touched.description ? errors.description : null,\n      defaultValue: initialValues.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"latitude\",\n      label: \"Latitude\",\n      error: errors.latitude && touched.latitude,\n      helperText: touched.latitude ? errors.latitude : null,\n      defaultValue: initialValues.latitude,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"longitude\",\n      label: \"Longitude\",\n      error: errors.longitude && touched.longitude,\n      helperText: touched.longitude ? errors.longitude : null,\n      defaultValue: initialValues.longitude,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      name: \"amountBenches\",\n      label: \"Amount benches\",\n      type: \"number\",\n      error: errors.amountBenches && touched.amountBenches,\n      helperText: touched.amountBenches ? errors.amountBenches : null,\n      defaultValue: initialValues.amountBenches,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      name: \"amountFirePlaces\",\n      label: \"Amount fire places\",\n      type: \"number\",\n      error: errors.amountFirePlaces && touched.amountFirePlaces,\n      helperText: touched.amountFirePlaces ? errors.amountFirePlaces : null,\n      defaultValue: initialValues.amountFirePlaces,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      name: \"amountTrashCans\",\n      label: \"Amount trash cans\",\n      type: \"number\",\n      error: errors.amountTrashCans && touched.amountTrashCans,\n      helperText: touched.amountTrashCans ? errors.amountTrashCans : null,\n      defaultValue: initialValues.amountTrashCans,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"distanceToNextShop\",\n      label: \"Distance to next shop\",\n      error: errors.distanceToNextShop && touched.distanceToNextShop,\n      helperText: touched.distanceToNextShop ? errors.distanceToNextShop : null,\n      defaultValue: initialValues.distanceToNextShop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      name: \"quiet\",\n      label: \"Quiet\",\n      type: \"number\",\n      error: errors.quiet && touched.quiet,\n      helperText: touched.quiet ? errors.quiet : null,\n      defaultValue: initialValues.quiet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"directions\",\n      label: \"Directions\",\n      multiline: true,\n      error: errors.directions && touched.directions,\n      helperText: touched.directions ? errors.directions : null,\n      defaultValue: initialValues.directions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 41\n      }\n    }, \"Are there any meadows?\", /*#__PURE__*/React.createElement(Switch, {\n      checked: hasMeadow,\n      onChange: handleChangeMeadow,\n      color: \"primary\",\n      name: \"hasMeadow\",\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 41\n      }\n    }, \"Is location on any water?\", /*#__PURE__*/React.createElement(Switch, {\n      checked: locationOnWater,\n      onChange: handleChangeLocationOnwater,\n      color: \"primary\",\n      name: \"locationOnWater\",\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      disabled: submitting,\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 45\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 45\n      }\n    }, \"Reset\")))));\n  })));\n};\n\nexport default CardForm; // initialValues={{\n//     id: bench.id,\n//     title: bench.title,\n//     description: bench.description,\n//     latitude: bench.latitude,\n//     longitude: bench.longitude,\n//     amountBenches: bench.amountBenches,\n//     amountFirePlaces: bench.amountFirePlaces,\n//     amountTrashCans: bench.amountTrashCans,\n//     distanceToNextShop: bench.distanceToNextShop,\n//     quiet: bench.quiet,\n//     directions: bench.directions,\n//     hasMeadow: bench.hasMeadow,\n//     isLocationOnWater: bench.isLocationOnWater\n// }}","map":{"version":3,"sources":["/Users/ivogurtner/OneDrive - TBZ/M120/Baenkli-App-Frontend/src/components/organisms/cardForm/cardForm.js"],"names":["React","Fragment","useState","axios","Navbar","Grid","Formik","Yup","TextField","Switch","Button","Paper","makeStyles","Typography","CardForm","bench","setBench","useStyles","theme","root","flexGrow","padding","margin","background","color","classes","hasMeadow","setHasMeadow","undefined","locationOnWater","setLocationOnWater","submitting","setSubmitting","handleChangeMeadow","handleChangeLocationOnwater","regexName","validationName","validationMax","validationMinNumber","validationMaxNumber","validationSchema","object","shape","title","string","trim","matches","required","max","description","amountBenches","number","min","amountFirePlaces","amountTrashCans","distanceToNextShop","quiet","values","dto","console","log","put","id","then","response","data","catch","error","post","handleSubmit","errors","touched","handleChange","initialValues","latitude","longitude","directions"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../molecules/navbar/navbar\"\nimport Grid from '@material-ui/core/Grid';\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"@material-ui/core\";\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst CardForm = ({ bench, setBench }) => {\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            flexGrow: 1,\n            padding: \"15px\",\n            margin: \"30px\",\n            background: \"#e6f3d8\",\n            color: \"black\"\n        }\n    }));\n\n    const classes = useStyles();\n\n    const [hasMeadow, setHasMeadow] = useState(bench === undefined ? false : bench.hasMeadow);\n    const [locationOnWater, setLocationOnWater] = useState(bench === undefined ? false : bench.locationOnWater);\n    const [submitting, setSubmitting] = useState(false);\n\n    const handleChangeMeadow = () => {\n        setHasMeadow(!hasMeadow);\n    }\n\n    const handleChangeLocationOnwater = () => {\n        setLocationOnWater(!locationOnWater);\n    }\n\n    const regexName = /^[a-zA-Z äöüéèàÜÖÄÉÈÀ,+-]+$/;\n    const validationName = \"Please enter only letters\";\n    const validationMax = \"Max. 250 characters\"\n    const validationMinNumber = \"Minimum: 0\";\n    const validationMaxNumber = \"Maximum: 5\";\n\n    const validationSchema = Yup.object().shape({\n        title: Yup.string()\n            .trim()\n            .matches(regexName, validationName)\n            .required(\"Title required\")\n            .max(250, validationMax),\n        description: Yup.string()\n            .trim()\n            .max(250, validationMax),\n        amountBenches: Yup.number()\n            .min(0, validationMinNumber),\n        amountFirePlaces: Yup.number()\n            .min(0, validationMinNumber),\n        amountTrashCans: Yup.number()\n            .min(0, validationMinNumber),\n        distanceToNextShop: Yup.string()\n            .trim()\n            .max(250, validationMax),\n        quiet: Yup.number()\n            .min(0, validationMinNumber)\n            .max(5, validationMaxNumber)          \n    });\n\n    return (\n        <div>\n            <Paper className={classes.root} elevation={1}>\n                <Formik\n                    initialValues={bench === undefined ? {} : bench}\n                    enableReinitialize={true}\n                    validationSchema={validationSchema}\n                    onSubmit={values => {\n                        setSubmitting(true);\n                        const dto = { ...bench, ...values };\n                        console.log('DTO ', dto)\n                        if (bench !== undefined) {\n                            axios.put(`http://localhost:8080/benches/${bench.id}`, dto)\n                                .then(response => {\n                                    setSubmitting(false);\n                                    setBench(response.data)\n                                })\n                                .catch(error => {\n                                    setSubmitting(false);\n                                    console.error('Error in Put', error);\n                                });\n                        } else {\n                            axios.post(`http://localhost:8080/benches`, dto)\n                                .then(response => {\n                                    setSubmitting(false);\n                                    setBench(response.data);\n                                })\n                                .catch(error => {\n                                    setSubmitting(false);\n                                    console.error('Error in Post', error);\n                                })\n                        }\n                        {/* window.location.assign('/'); */}\n                    }}\n                >\n                    {({ handleSubmit, errors, touched, handleChange, initialValues }) => {\n                        return (\n                            <Fragment>\n                                <Navbar />\n                                <form method=\"post\" onSubmit={handleSubmit} onChange={handleChange}>\n                                    <Typography variant=\"body2\" color=\"textPrimary\" component=\"h3\">\n                                        New bench\n                                        </Typography>\n                                    <Grid container spacing={2}>\n\n                                        <Grid item xs={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"title\"\n                                                label=\"Title\"\n                                                error={errors.title && touched.title}\n                                                helperText={touched.title ? errors.title : null}\n                                                defaultValue={initialValues.title}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"description\"\n                                                label=\"Description\"\n                                                multiline\n                                                error={errors.description && touched.description}\n                                                helperText={touched.description ? errors.description : null}\n                                                defaultValue={initialValues.description}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"latitude\"\n                                                label=\"Latitude\"\n                                                error={errors.latitude && touched.latitude}\n                                                helperText={touched.latitude ? errors.latitude : null}\n                                                defaultValue={initialValues.latitude}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"longitude\"\n                                                label=\"Longitude\"\n                                                error={errors.longitude && touched.longitude}\n                                                helperText={touched.longitude ? errors.longitude : null}\n                                                defaultValue={initialValues.longitude}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            <TextField\n                                                id=\"standard-number\"\n                                                name=\"amountBenches\"\n                                                label=\"Amount benches\"\n                                                type=\"number\"\n                                                error={errors.amountBenches && touched.amountBenches}\n                                                helperText={touched.amountBenches ? errors.amountBenches : null}\n                                                defaultValue={initialValues.amountBenches}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            <TextField\n                                                id=\"standard-number\"\n                                                name=\"amountFirePlaces\"\n                                                label=\"Amount fire places\"\n                                                type=\"number\"\n                                                error={errors.amountFirePlaces && touched.amountFirePlaces}\n                                                helperText={touched.amountFirePlaces ? errors.amountFirePlaces : null}\n                                                defaultValue={initialValues.amountFirePlaces}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            <TextField\n                                                id=\"standard-number\"\n                                                name=\"amountTrashCans\"\n                                                label=\"Amount trash cans\"\n                                                type=\"number\"\n                                                error={errors.amountTrashCans && touched.amountTrashCans}\n                                                helperText={touched.amountTrashCans ? errors.amountTrashCans : null}\n                                                defaultValue={initialValues.amountTrashCans}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"distanceToNextShop\"\n                                                label=\"Distance to next shop\"\n                                                error={errors.distanceToNextShop && touched.distanceToNextShop}\n                                                helperText={touched.distanceToNextShop ? errors.distanceToNextShop : null}\n                                                defaultValue={initialValues.distanceToNextShop}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            <TextField\n                                                id=\"standard-number\"\n                                                name=\"quiet\"\n                                                label=\"Quiet\"\n                                                type=\"number\"\n                                                error={errors.quiet && touched.quiet}\n                                                helperText={touched.quiet ? errors.quiet : null}\n                                                defaultValue={initialValues.quiet}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"directions\"\n                                                label=\"Directions\"\n                                                multiline\n                                                error={errors.directions && touched.directions}\n                                                helperText={touched.directions ? errors.directions : null}\n                                                defaultValue= {initialValues.directions}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            Are there any meadows?\n                                            <Switch\n                                                checked={hasMeadow}\n                                                onChange={handleChangeMeadow}\n                                                color=\"primary\"\n                                                name=\"hasMeadow\"\n                                                inputProps={{ 'aria-label': 'primary checkbox' }}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            Is location on any water?\n                                            <Switch\n                                                checked={locationOnWater}\n                                                onChange={handleChangeLocationOnwater}\n                                                color=\"primary\"\n                                                name=\"locationOnWater\"\n                                                inputProps={{ 'aria-label': 'primary checkbox' }}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            <Button variant=\"contained\" disabled={submitting} color=\"primary\" type=\"submit\">\n                                                Submit\n                                       </Button>\n                                        </Grid>\n                                        <Grid item xs={5}>\n                                            <Button variant=\"contained\" color=\"secondary\" type=\"reset\">\n                                                Reset\n                                       </Button>\n                                        </Grid>\n\n                                    </Grid>\n                                </form>\n                            </Fragment>\n                        )\n                    }}\n                </Formik>\n            </Paper>\n        </div>\n    )\n}\n\nexport default CardForm;\n\n// initialValues={{\n//     id: bench.id,\n//     title: bench.title,\n//     description: bench.description,\n//     latitude: bench.latitude,\n//     longitude: bench.longitude,\n//     amountBenches: bench.amountBenches,\n//     amountFirePlaces: bench.amountFirePlaces,\n//     amountTrashCans: bench.amountTrashCans,\n//     distanceToNextShop: bench.distanceToNextShop,\n//     quiet: bench.quiet,\n//     directions: bench.directions,\n//     hasMeadow: bench.hasMeadow,\n//     isLocationOnWater: bench.isLocationOnWater\n// }}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/ivogurtner/OneDrive - TBZ/M120/Baenkli-App-Frontend/src/components/pages/cardPage/cardPage.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../molecules/navbar/navbar\";\nimport PostCard from \"../../molecules/card/card\";\nimport CardForm from \"../../organisms/cardForm/cardForm\";\nimport Grid from '@material-ui/core/Grid';\nimport Rating from \"../../atoms/rating/rating\";\nimport Typography from '@material-ui/core/Typography';\n\nconst CardPage = props => {\n  const [editing, setEditing] = useState(false);\n  const [postCardId, setPostCardId] = useState(props.match.params.id);\n  const [bench, setBench] = useState([]);\n  const [readOnlyRating, setReadOnlyRating] = useState(false);\n  const [readOnlyQuiet, setReadOnlyQuiet] = useState(false);\n\n  function randomImg(width, height, key) {\n    var source = 'https://source.unsplash.com/random/' + width + 'x' + height + '/?bench,park' + key;\n    return source;\n  }\n\n  function calRating(ratingArray) {\n    if (ratingArray === undefined) {\n      return 0;\n    } else {\n      console.log(bench.ratings);\n      var total = 0;\n      var length = 0;\n      console.log(\"rating,\", ratingArray);\n      length = ratingArray.length;\n      ratingArray.map(r => total += r.rating);\n      let result = total / length;\n      return Math.round(result * 2) / 2;\n    }\n  }\n\n  function calQuiet(ratingArray) {\n    if (ratingArray === undefined) {\n      return 0;\n    } else {\n      console.log(bench.ratings);\n      var total = 0;\n      var length = 0;\n      console.log(\"rating,\", ratingArray);\n      length = ratingArray.length;\n      ratingArray.map(r => total += r.rating);\n      let result = total / length;\n      return Math.round(result * 2) / 2;\n    }\n  }\n\n  function getOneBench(id) {\n    if (id !== undefined) {\n      axios.get(`http://localhost:8080/benches/${id}`).then(res => {\n        setBench(res.data);\n      });\n    }\n  }\n\n  function deleteBench(id) {\n    axios.delete(`http://localhost:8080/benches/${id}`).then(() => {\n      props.history.push(`/`);\n    });\n  }\n\n  function editBench() {\n    setEditing(true);\n  }\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    getOneBench(postCardId);\n  }, []);\n  const [valueRating, setValueRating] = useState({});\n  const [valueQuiet, setValueQuiet] = useState({});\n\n  function postRating(dtoObject) {\n    axios.post(`http://localhost:8080/ratings`, dtoObject).then(res => {\n      putBenchByRating(res.data);\n    });\n  }\n\n  function postQuiet(dtoObject) {\n    axios.post(`http://localhost:8080/quiets`, dtoObject).then(res => {\n      putBenchByQuiet(res.data);\n    });\n  }\n\n  function putBenchByRating(dtoRating) {\n    axios.put(`http://localhost:8080/benches/${bench.id}/rating/${dtoRating.id}`, bench).then(res => {\n      setBench(res.data);\n    });\n  }\n\n  function putBenchByQuiet(quietDTO) {\n    axios.put(`http://localhost:8080/benches/${bench.id}/quiet/${quietDTO.id}`, bench).then(res => {\n      setBench(res.data);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), editing || postCardId === 'new' ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardForm, {\n    bench: postCardId === 'new' ? { ...bench,\n      id: 'new'\n    } : bench,\n    setBench: postCardId === 'new' ? () => {} : setBench,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }))) : /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PostCard, {\n    id: postCardId,\n    image: randomImg(500, 500, postCardId),\n    deleteButton: true,\n    editButton: true,\n    title: bench.title,\n    valueQuietness: bench.quiet,\n    valueRating: calRating(bench.ratings),\n    amountBenches: bench.amountBenches,\n    amountFirePlaces: bench.amountFirePlaces,\n    amountTrashCans: bench.amountTrashCans,\n    distanceToNextShop: bench.distanceToNextShop,\n    directions: bench.directions,\n    readOnly: true,\n    deleteFunction: () => deleteBench(postCardId),\n    editFunction: () => editBench(postCardId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }, \"Rate\"), /*#__PURE__*/React.createElement(Rating, {\n    name: \"rating-feedback\",\n    precicion: 0.5,\n    value: valueRating,\n    readOnly: readOnlyRating,\n    onChange: event => {\n      setValueRating(event.target.value);\n      postRating({\n        rating: event.target.value\n      });\n      setReadOnlyRating(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  }, \"Quiet\"), /*#__PURE__*/React.createElement(Rating, {\n    name: \"quiet-feedback\",\n    value: valueQuiet,\n    readOnly: readOnlyQuiet,\n    onChange: event => {\n      setValueQuiet(event.target.value);\n      postQuiet({\n        quiet: event.target.value\n      });\n      setReadOnlyQuiet(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  }))));\n};\n\nexport default CardPage;","map":{"version":3,"sources":["/Users/ivogurtner/OneDrive - TBZ/M120/Baenkli-App-Frontend/src/components/pages/cardPage/cardPage.js"],"names":["React","Fragment","useState","useEffect","axios","Navbar","PostCard","CardForm","Grid","Rating","Typography","CardPage","props","editing","setEditing","postCardId","setPostCardId","match","params","id","bench","setBench","readOnlyRating","setReadOnlyRating","readOnlyQuiet","setReadOnlyQuiet","randomImg","width","height","key","source","calRating","ratingArray","undefined","console","log","ratings","total","length","map","r","rating","result","Math","round","calQuiet","getOneBench","get","then","res","data","deleteBench","delete","history","push","editBench","valueRating","setValueRating","valueQuiet","setValueQuiet","postRating","dtoObject","post","putBenchByRating","postQuiet","putBenchByQuiet","dtoRating","put","quietDTO","title","quiet","amountBenches","amountFirePlaces","amountTrashCans","distanceToNextShop","directions","event","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../molecules/navbar/navbar\";\nimport PostCard from \"../../molecules/card/card\";\nimport CardForm from \"../../organisms/cardForm/cardForm\";\nimport Grid from '@material-ui/core/Grid';\nimport Rating from \"../../atoms/rating/rating\";\nimport Typography from '@material-ui/core/Typography';\n\nconst CardPage = (props) => {\n\n    const [editing, setEditing] = useState(false);\n    const [postCardId, setPostCardId] = useState(props.match.params.id);\n    const [bench, setBench] = useState([]);\n    const [readOnlyRating, setReadOnlyRating] = useState(false);\n    const [readOnlyQuiet, setReadOnlyQuiet] = useState(false);\n\n\n    function randomImg(width, height, key) {\n        var source = 'https://source.unsplash.com/random/' + width + 'x' + height + '/?bench,park' + key;\n        return source;\n    }\n\n    function calRating(ratingArray) {\n        if (ratingArray === undefined) {\n            return 0;\n        } else {\n            console.log(bench.ratings)\n            var total = 0;\n            var length = 0;\n            console.log(\"rating,\", ratingArray)\n            length = ratingArray.length;\n            ratingArray.map(r => total += r.rating);\n\n            let result = total / length;\n\n            return Math.round(result * 2) / 2;\n        }\n\n    }\n\n    function calQuiet(ratingArray) {\n        if (ratingArray === undefined) {\n            return 0;\n        } else {\n            console.log(bench.ratings)\n            var total = 0;\n            var length = 0;\n            console.log(\"rating,\", ratingArray)\n            length = ratingArray.length;\n            ratingArray.map(r => total += r.rating);\n            let result = total / length;\n\n            return Math.round(result * 2) / 2;\n        }\n    }\n\n    function getOneBench(id) {\n        if (id !== undefined) {\n            axios.get(`http://localhost:8080/benches/${id}`)\n                .then((res) => {\n                    setBench(res.data);\n                })\n        }\n    }\n\n    function deleteBench(id) {\n        axios.delete(`http://localhost:8080/benches/${id}`)\n            .then(() => {\n                props.history.push(`/`);\n            })\n    }\n\n    function editBench() {\n        setEditing(true);\n    }\n\n    useEffect(() => {\n        // Update the document title using the browser API\n        getOneBench(postCardId);\n    }, []);\n\n    const [valueRating, setValueRating] = useState({});\n    const [valueQuiet, setValueQuiet] = useState({});\n\n    function postRating(dtoObject) {\n        axios.post(`http://localhost:8080/ratings`, dtoObject)\n            .then(res => {\n                putBenchByRating(res.data);\n            })\n    }\n\n    function postQuiet(dtoObject) {\n        axios.post(`http://localhost:8080/quiets`, dtoObject)\n            .then(res => {\n                putBenchByQuiet(res.data);\n            })\n    }\n\n    function putBenchByRating(dtoRating) {\n        axios.put(`http://localhost:8080/benches/${bench.id}/rating/${dtoRating.id}`, bench)\n            .then(res => {\n                setBench(res.data);\n            })\n    }\n\n    function putBenchByQuiet(quietDTO) {\n        axios.put(`http://localhost:8080/benches/${bench.id}/quiet/${quietDTO.id}`, bench)\n            .then(res => {\n                setBench(res.data);\n            })\n    }\n\n    return (\n        <Fragment>\n            <Navbar />\n            {editing || postCardId === 'new' ?\n                <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                    <Grid item xs={4}>\n                        <CardForm bench={postCardId === 'new' ? { ...bench, id: 'new' } : bench} setBench={postCardId === 'new' ? () => { } : setBench} />\n                    </Grid>\n                </Grid>\n\n                :\n                <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                    <Grid item md={4}>\n                        <PostCard\n                            id={postCardId}\n                            image={randomImg(500, 500, postCardId)}\n                            deleteButton={true}\n                            editButton={true}\n                            title={bench.title}\n                            valueQuietness={bench.quiet}\n                            valueRating={calRating(bench.ratings)}\n                            amountBenches={bench.amountBenches}\n                            amountFirePlaces={bench.amountFirePlaces}\n                            amountTrashCans={bench.amountTrashCans}\n                            distanceToNextShop={bench.distanceToNextShop}\n                            directions={bench.directions}\n                            readOnly={true}\n                            deleteFunction={() => deleteBench(postCardId)}\n                            editFunction={() => editBench(postCardId)}\n\n                        />\n                    </Grid>\n                    <Grid item md={4}>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h6\">\n                            Rate\n                        </Typography>\n                        <Rating name=\"rating-feedback\"\n                            precicion={0.5}\n                            value={valueRating}\n                            readOnly={readOnlyRating}\n                            onChange={(event) => {\n                                setValueRating(event.target.value);\n                                postRating({ rating: event.target.value });\n                                setReadOnlyRating(true);\n                            }}\n                        />\n\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h6\">\n                            Quiet\n                        </Typography>\n                        <Rating name=\"quiet-feedback\"\n                            value={valueQuiet}\n                            readOnly={readOnlyQuiet}\n                            onChange={(event) => {\n                              setValueQuiet(event.target.value);\n                              postQuiet({ quiet: event.target.value });\n                              setReadOnlyQuiet(true);\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n            }\n        </Fragment>\n    );\n}\n\nexport default CardPage;"]},"metadata":{},"sourceType":"module"}
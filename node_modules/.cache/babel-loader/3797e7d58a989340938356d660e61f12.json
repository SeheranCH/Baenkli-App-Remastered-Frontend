{"ast":null,"code":"var _jsxFileName = \"/Users/ivogurtner/Library/Mobile Documents/com~apple~CloudDocs/_Work/TBZ/2. Jahr/M120/Baenkli-App-Frontend/src/components/organisms/loginForm/loginForm.js\";\nimport React, { useState } from \"react\";\nimport { Container, Grid, Link, Typography } from \"@material-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\n/**\n * This is the login page\n */\n\nconst Login = props => {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: \"10%\"\n    },\n    paper: {\n      flexGrow: 1,\n      paddingTop: \"50px\",\n      paddingBottom: \"50px\",\n      // margin: \"15px\",\n      background: \"#e6f3d8\",\n      color: \"black\"\n    },\n    heading: {\n      color: \"#47792A\",\n      textAlign: \"center\"\n    },\n    subButton: {\n      backgroundColor: \"#355A20\",\n      color: \"white\",\n      '&:hover': {\n        backgroundColor: \"#47792A\",\n        color: '#FFF'\n      }\n    },\n    resButton: {}\n  }));\n  const classes = useStyles();\n  const [loginFailed, setLoginFailed] = useState(\"\");\n  return /*#__PURE__*/React.createElement(Container, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    enableReinitialize: true,\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email(\"validationEmail\").required(\"validationEmailRequired\"),\n      password: Yup.string().required(\"validationPasswordRequired\")\n    }),\n    onSubmit: (values, actions) => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, ({\n    handleSubmit,\n    isValid,\n    isSubmitting\n  }) => {\n    return /*#__PURE__*/React.createElement(Form, {\n      name: \"login\",\n      method: \"post\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email\",\n      name: \"email\",\n      autoComplete: \"email\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      buttontype: \"default\",\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      disabled: !isValid || isSubmitting,\n      className: classes.subButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, \"Login \")));\n  }))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/ivogurtner/Library/Mobile Documents/com~apple~CloudDocs/_Work/TBZ/2. Jahr/M120/Baenkli-App-Frontend/src/components/organisms/loginForm/loginForm.js"],"names":["React","useState","Container","Grid","Link","Typography","Formik","Form","Yup","Paper","TextField","Button","makeStyles","withStyles","Login","props","useStyles","theme","root","marginTop","paper","flexGrow","paddingTop","paddingBottom","background","color","heading","textAlign","subButton","backgroundColor","resButton","classes","loginFailed","setLoginFailed","email","password","object","shape","string","required","values","actions","handleSubmit","isValid","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Grid, Link, Typography } from \"@material-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\n\n/**\n * This is the login page\n */\n\nconst Login = props => {\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      marginTop:\"10%\",\n    },\n    paper: {\n      flexGrow: 1,\n      paddingTop: \"50px\",\n      paddingBottom: \"50px\",\n      // margin: \"15px\",\n\n      background: \"#e6f3d8\",\n      color: \"black\"\n    },\n    heading: {\n      color: \"#47792A\",\n      textAlign: \"center\"\n    },\n    subButton: {\n      backgroundColor: \"#355A20\",\n      color: \"white\",\n      '&:hover': {\n        backgroundColor: \"#47792A\",\n        color: '#FFF'\n      }\n\n    },\n    resButton: {\n\n    }\n  }));\n\n  const classes = useStyles();\n\n  const [loginFailed, setLoginFailed] = useState(\"\");\n\n\n  return (\n\n    <Container className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n          spacing={3}\n        >\n\n          <Formik\n            initialValues={{\n              email: \"\",\n              password: \"\"\n            }}\n            enableReinitialize={true}\n            validationSchema={Yup.object().shape({\n              email: Yup.string()\n                .email(\"validationEmail\")\n                .required(\"validationEmailRequired\"),\n              password: Yup.string().required(\n                \"validationPasswordRequired\"\n              )\n            })}\n            onSubmit={(values, actions) => {\n            }}\n          >\n            {({ handleSubmit, isValid, isSubmitting }) => {\n              return (\n                <Form\n                  name=\"login\"\n                  method=\"post\"\n                  onSubmit={handleSubmit}\n                >\n                  {\" \"}\n                  <center>\n                    Login\n                        </center>\n                  <Grid item>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      fullWidth\n                      id=\"email\"\n                      label={\"Email\"}\n                      name=\"email\"\n                      autoComplete=\"email\"\n                      disabled={isSubmitting}\n                    />\n                  </Grid>\n\n                  <Grid item>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      fullWidth\n                      name=\"password\"\n                      label={\"Password\"}\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"current-password\"\n                      disabled={isSubmitting}\n                    />\n                  </Grid>\n\n                  <Grid item>\n                    <Button\n                      buttontype=\"default\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                      disabled={!isValid || isSubmitting}\n                      className={classes.subButton}\n                    >Login </Button>\n                  </Grid>\n\n                </Form>\n              );\n            }}\n          </Formik>\n\n        </Grid>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}
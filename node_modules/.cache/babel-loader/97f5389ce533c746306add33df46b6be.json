{"ast":null,"code":"var _jsxFileName = \"/Users/ivogurtner/OneDrive - TBZ/M326/Baenkli-App-Frontend/src/components/pages/cardPage/cardPage.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../molecules/navbar/navbar\";\nimport PostCard from \"../../molecules/card/card\";\nimport CardForm from \"../../organisms/cardForm/cardForm\";\nimport Grid from '@material-ui/core/Grid';\n\nconst CardPage = props => {\n  const postCardId = props.match.params.id;\n\n  function randomImg(width, height, key) {\n    var source = 'https://source.unsplash.com/random/' + width + 'x' + height + '/?bench,park' + key;\n    return source;\n  }\n\n  function calRating() {\n    var total = 0;\n    var length = 0;\n    let array = benche.ratings;\n    length = array.length;\n    array.map(r => total += r.rating);\n    let result = total / length;\n    return Math.round(result * 2) / 2;\n  }\n\n  const [benche, setBenche] = useState([]);\n\n  function getOneBench(id) {\n    axios.get(`http://localhost:8080/benches/${id}`).then(res => {\n      const data = res.data;\n      console.log(\"res one\", data);\n      return setBenche(data);\n    });\n  }\n\n  function deleteBench(id) {\n    axios.delete(`http://localhost:8080/benches/${id}`).then(res => {\n      const data = res.data;\n      console.log(\"res one\", data); //  return setBenche(data);\n\n      props.history.push(`/`);\n    });\n  }\n\n  function editBench(id) {// axios.delete(`http://localhost:8080/benches/${id}`)\n    //     .then(res => {\n    //         const data = res.data;\n    //         console.log(\"res one\", data)\n    //         //  return setBenche(data);\n    //         props.history.push(`/`);\n    //     })\n  }\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    getOneBench(postCardId);\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, postCardId !== 'new' ? /*#__PURE__*/React.createElement(PostCard, {\n    id: postCardId,\n    image: randomImg(500, 500, postCardId),\n    deleteButton: true,\n    editButton: true,\n    title: benche.title,\n    valueQuietness: benche.quietness // valueRating={calRating(postCardId)}\n    ,\n    amountBenches: benche.amountBenches,\n    amountFirePlaces: benche.amountFirePlaces,\n    amountTrashCans: benche.amountTrashCans,\n    distanceToNextShop: benche.distanceToNextShop,\n    directions: benche.directions,\n    readOnly: true,\n    deleteFunction: () => deleteBench(postCardId),\n    editFunction: () => editBench(postCardId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(CardForm, {\n    bench: {\n      id: 'new'\n    },\n    setBench: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }))));\n};\n\nexport default CardPage;","map":{"version":3,"sources":["/Users/ivogurtner/OneDrive - TBZ/M326/Baenkli-App-Frontend/src/components/pages/cardPage/cardPage.js"],"names":["React","Fragment","useState","useEffect","axios","Navbar","PostCard","CardForm","Grid","CardPage","props","postCardId","match","params","id","randomImg","width","height","key","source","calRating","total","length","array","benche","ratings","map","r","rating","result","Math","round","setBenche","getOneBench","get","then","res","data","console","log","deleteBench","delete","history","push","editBench","title","quietness","amountBenches","amountFirePlaces","amountTrashCans","distanceToNextShop","directions"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../molecules/navbar/navbar\"\nimport PostCard from \"../../molecules/card/card\"\nimport CardForm from \"../../organisms/cardForm/cardForm\";\nimport Grid from '@material-ui/core/Grid';\n\nconst CardPage = (props) => {\n\n    const postCardId = props.match.params.id;\n\n    function randomImg(width, height, key) {\n        var source = 'https://source.unsplash.com/random/' + width + 'x' + height + '/?bench,park' + key;\n        return source;\n    }\n\n    function calRating() {\n\n        var total = 0;\n        var length = 0;\n\n        let array = benche.ratings;\n        length = array.length;\n        array.map(r => total += r.rating);\n\n        let result = total / length;\n\n        return Math.round(result * 2) / 2;\n\n    }\n\n    const [benche, setBenche] = useState([]);\n\n    function getOneBench(id) {\n        axios.get(`http://localhost:8080/benches/${id}`)\n            .then(res => {\n                const data = res.data;\n                console.log(\"res one\", data)\n                return setBenche(data);\n            })\n    }\n\n    function deleteBench(id) {\n        axios.delete(`http://localhost:8080/benches/${id}`)\n            .then(res => {\n                const data = res.data;\n                console.log(\"res one\", data)\n                //  return setBenche(data);\n                props.history.push(`/`);\n            })\n    }\n\n    function editBench(id) {\n        // axios.delete(`http://localhost:8080/benches/${id}`)\n        //     .then(res => {\n        //         const data = res.data;\n        //         console.log(\"res one\", data)\n        //         //  return setBenche(data);\n        //         props.history.push(`/`);\n        //     })\n    }\n\n    useEffect(() => {\n        // Update the document title using the browser API\n        getOneBench(postCardId);\n    }, []);\n\n\n\n    return (\n        <Fragment>\n            <Navbar />\n            <Grid container spacing={3} justify=\"center\"\n                alignItems=\"center\">\n                <Grid item xs={4}>\n                    {postCardId !== 'new' ?\n                        <PostCard\n                            id={postCardId}\n                            image={randomImg(500, 500, postCardId)}\n                            deleteButton={true}\n                            editButton={true}\n                            title={benche.title}\n                            valueQuietness={benche.quietness}\n                            // valueRating={calRating(postCardId)}\n                            amountBenches={benche.amountBenches}\n                            amountFirePlaces={benche.amountFirePlaces}\n                            amountTrashCans={benche.amountTrashCans}\n                            distanceToNextShop={benche.distanceToNextShop}\n                            directions={benche.directions}\n                            readOnly={true}\n                            deleteFunction={() => deleteBench(postCardId)}\n                            editFunction={() => editBench(postCardId)}\n                        />\n                        :\n                        <CardForm bench={{ id: 'new' }} setBench={() => {}} />\n                    }\n                </Grid>\n\n            </Grid>\n        </Fragment>\n    );\n}\n\nexport default CardPage;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swesthauser\\\\Documents\\\\_D\\\\Workspace\\\\tbz\\\\Baenkli-App-Remastered-Frontend\\\\src\\\\components\\\\organisms\\\\commentModal\\\\CommentModal.js\";\nimport React, { Fragment, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport CommentField from \"../../molecules/commentField/CommentField\";\nimport Rating from \"../../atoms/rating/Rating\";\nimport { Grid } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: '100%',\n    maxWidth: '36ch',\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: 'inline'\n  },\n  paper: {\n    margin: theme.spacing(2)\n  },\n  title: {\n    margin: theme.spacing(2)\n  },\n  divider: {\n    margin: theme.spacing(2)\n  }\n}));\n\nconst CommentModal = ({\n  comments,\n  usernameCurrentUser,\n  firstNameCurrentUser,\n  lastNameCurrentUser,\n  setValueRating,\n  postRating,\n  setReadOnlyRating,\n  valueRating,\n  readOnlyRating\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Rate\"), /*#__PURE__*/React.createElement(Rating, {\n    name: \"rating-feedback\",\n    precicion: 0.5,\n    value: valueRating,\n    readOnly: readOnlyRating,\n    onChange: (event, value) => {\n      setValueRating(value);\n      postRating({\n        rating: value\n      });\n      setReadOnlyRating(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CommentField, {\n    username: usernameCurrentUser,\n    firstName: firstNameCurrentUser,\n    lastName: lastNameCurrentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Comments\")), /*#__PURE__*/React.createElement(List, {\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, comments.map((obj, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 37\n    }\n  }, obj.user.firstName.substring(0, 1).toUpperCase() + obj.user.lastName.substring(0, 1).toUpperCase())), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: obj.user.username,\n    secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      className: classes.inline,\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 45\n      }\n    }), obj.commentText),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    className: classes.divider,\n    variant: \"inset\",\n    component: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default CommentModal;","map":{"version":3,"sources":["C:/Users/swesthauser/Documents/_D/Workspace/tbz/Baenkli-App-Remastered-Frontend/src/components/organisms/commentModal/CommentModal.js"],"names":["React","Fragment","useState","makeStyles","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Typography","Paper","CommentField","Rating","Grid","useStyles","theme","list","width","maxWidth","backgroundColor","palette","background","paper","inline","display","margin","spacing","title","divider","CommentModal","comments","usernameCurrentUser","firstNameCurrentUser","lastNameCurrentUser","setValueRating","postRating","setReadOnlyRating","valueRating","readOnlyRating","classes","event","value","rating","map","obj","i","avatar","user","firstName","substring","toUpperCase","lastName","username","commentText"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CommentField from \"../../molecules/commentField/CommentField\";\r\nimport Rating from \"../../atoms/rating/Rating\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    list: {\r\n        width: '100%',\r\n        maxWidth: '36ch',\r\n        backgroundColor: theme.palette.background.paper,\r\n\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    title: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    divider: {\r\n        margin: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst CommentModal = ({ comments, usernameCurrentUser, firstNameCurrentUser, lastNameCurrentUser, setValueRating, postRating, setReadOnlyRating, valueRating, readOnlyRating }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"flex-start\"\r\n            >\r\n                <Grid item className={classes.paper}>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"h6\">\r\n                        Rate\r\n                            </Typography>\r\n                    <Rating\r\n                        name=\"rating-feedback\"\r\n                        precicion={0.5}\r\n                        value={valueRating}\r\n                        readOnly={readOnlyRating}\r\n                        onChange={(event, value) => {\r\n                            setValueRating(value);\r\n                            postRating({ rating: value });\r\n                            setReadOnlyRating(true);\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <CommentField username={usernameCurrentUser} firstName={firstNameCurrentUser} lastName={lastNameCurrentUser} />\r\n                </Grid>\r\n                <Grid item>\r\n\r\n                    <Typography className={classes.title} variant=\"h5\" gutterBottom>Comments</Typography>\r\n                </Grid>\r\n\r\n                <List className={classes.list}>\r\n                    {comments.map((obj, i) => (\r\n                        <Grid item>\r\n                            <ListItem alignItems=\"flex-start\">\r\n                                <ListItemAvatar>\r\n                                    <Avatar className={classes.avatar}>\r\n                                        {obj.user.firstName.substring(0, 1).toUpperCase() + obj.user.lastName.substring(0, 1).toUpperCase()}\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary={obj.user.username}\r\n                                    secondary={\r\n                                        <React.Fragment>\r\n                                            <Typography\r\n                                                component=\"span\"\r\n                                                variant=\"body2\"\r\n                                                className={classes.inline}\r\n                                                color=\"textPrimary\"\r\n                                            >\r\n                                            </Typography>\r\n                                            {obj.commentText}\r\n                                        </React.Fragment>\r\n                                    }\r\n                                />\r\n                            </ListItem>\r\n                            <Divider className={classes.divider} variant=\"inset\" component=\"li\" />\r\n                        </Grid>\r\n                    ))}\r\n\r\n\r\n                </List>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n\r\n}\r\nexport default CommentModal;"]},"metadata":{},"sourceType":"module"}
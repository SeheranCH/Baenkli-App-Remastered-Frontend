{"ast":null,"code":"var _jsxFileName = \"/Users/ivogurtner/OneDrive - TBZ/M326/Baenkli-App-Frontend/src/components/organisms/loginForm/loginForm.js\";\nimport React, { useState } from \"react\";\nimport { Container, Grid, Link, Typography } from \"@material-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'; //import { login } from \"../../../services/authenticationService\";\n\n/**\n * This is the login page\n */\n\nconst Login = props => {\n  const [loginFailed, setLoginFailed] = useState(\"\");\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    enableReinitialize: true,\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email(\"validationEmail\").required(\"validationEmailRequired\"),\n      password: Yup.string().required(\"validationPasswordRequired\")\n    }),\n    onSubmit: (values, actions) => {// setLoginFailed(false);\n      // login(values.email, values.password)\n      //   .then(() => {\n      //     actions.setSubmitting(false);\n      //     props.history.push(\"/\");\n      //   })\n      //   .catch(() => {\n      //     setTimeout(() => {\n      //       setLoginFailed(\"loginError\");\n      //       actions.setSubmitting(false);\n      //     }, 1500);\n      //   });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, ({\n    handleSubmit,\n    isValid,\n    isSubmitting\n  }) => {\n    return /*#__PURE__*/React.createElement(Form, {\n      name: \"login\",\n      method: \"post\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      fullWidth: true,\n      id: \"email\",\n      label: \"email\",\n      name: \"email\",\n      autoComplete: \"email\" // autoFocus\n      ,\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      fullWidth: true,\n      name: \"password\",\n      label: \"password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      buttontype: \"default\",\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      disabled: !isValid || isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"login \"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      href: \"/forgotpassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, \"forgotPassword\"))));\n  }))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/ivogurtner/OneDrive - TBZ/M326/Baenkli-App-Frontend/src/components/organisms/loginForm/loginForm.js"],"names":["React","useState","Container","Grid","Link","Typography","Formik","Form","Yup","Paper","TextField","Button","Login","props","loginFailed","setLoginFailed","email","password","object","shape","string","required","values","actions","handleSubmit","isValid","isSubmitting"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,UAAhC,QAAkD,mBAAlD;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;;AAEA;;;;AAIA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AAEA,sBAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAC,QAFV;AAGE,IAAA,UAAU,EAAC,QAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbe,MAAAA,KAAK,EAAE,EADM;AAEbC,MAAAA,QAAQ,EAAE;AAFG,KADjB;AAKE,IAAA,kBAAkB,EAAE,IALtB;AAME,IAAA,gBAAgB,EAAET,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB;AACnCH,MAAAA,KAAK,EAAER,GAAG,CAACY,MAAJ,GACJJ,KADI,CACE,iBADF,EAEJK,QAFI,CAEK,yBAFL,CAD4B;AAInCJ,MAAAA,QAAQ,EAAET,GAAG,CAACY,MAAJ,GAAaC,QAAb,CACR,4BADQ;AAJyB,KAAnB,CANpB;AAcE,IAAA,QAAQ,EAAE,CAACC,MAAD,EAASC,OAAT,KAAqB,CAC7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KA5BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA8BG,CAAC;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,GAAD,KAA6C;AAC5C,wBACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,MAAM,EAAC,MAFT;AAGE,MAAA,QAAQ,EAAEF,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,GALH,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,eASI,oBAAC,SAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,EAAE,EAAC,OAJL;AAKE,MAAA,KAAK,EAAE,OALT;AAME,MAAA,IAAI,EAAC,OANP;AAOE,MAAA,YAAY,EAAC,OAPf,CAQE;AARF;AASE,MAAA,QAAQ,EAAEE,YATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,eAoBI,oBAAC,SAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,KAAK,EAAE,UALT;AAME,MAAA,IAAI,EAAC,UANP;AAOE,MAAA,EAAE,EAAC,UAPL;AAQE,MAAA,YAAY,EAAC,kBARf;AASE,MAAA,QAAQ,EAAEA,YATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,eA+BI,oBAAC,MAAD;AACE,MAAA,UAAU,EAAC,SADb;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,OAAO,EAAC,WAJV;AAKE,MAAA,QAAQ,EAAE,CAACD,OAAD,IAAYC,YALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BJ,eAsCI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAC,iBADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG,gBAHH,CADF,CADF,CAtCJ,CADF;AAkDD,GAjFH,CADF,CALF,CADF,CAFF;AAgGD,CAnGD;;AAqGA,eAAed,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Grid, Link, Typography } from \"@material-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n//import { login } from \"../../../services/authenticationService\";\n\n/**\n * This is the login page\n */\n\nconst Login = props => {\n  const [loginFailed, setLoginFailed] = useState(\"\");\n\n  return (\n\n    <Container>\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={12}>\n          <Formik\n            initialValues={{\n              email: \"\",\n              password: \"\"\n            }}\n            enableReinitialize={true}\n            validationSchema={Yup.object().shape({\n              email: Yup.string()\n                .email(\"validationEmail\")\n                .required(\"validationEmailRequired\"),\n              password: Yup.string().required(\n                \"validationPasswordRequired\"\n              )\n            })}\n            onSubmit={(values, actions) => {\n              // setLoginFailed(false);\n\n              // login(values.email, values.password)\n              //   .then(() => {\n              //     actions.setSubmitting(false);\n              //     props.history.push(\"/\");\n              //   })\n              //   .catch(() => {\n              //     setTimeout(() => {\n              //       setLoginFailed(\"loginError\");\n              //       actions.setSubmitting(false);\n              //     }, 1500);\n              //   });\n            }}\n          >\n            {({ handleSubmit, isValid, isSubmitting }) => {\n              return (\n                <Form\n                  name=\"login\"\n                  method=\"post\"\n                  onSubmit={handleSubmit}\n                >\n                  {\" \"}\n                    <center>\n                      Login\n                        </center>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      fullWidth\n                      id=\"email\"\n                      label={\"email\"}\n                      name=\"email\"\n                      autoComplete=\"email\"\n                      // autoFocus\n                      disabled={isSubmitting}\n                    />\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      fullWidth\n                      name=\"password\"\n                      label={\"password\"}\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"current-password\"\n                      disabled={isSubmitting}\n                    />\n                    <Button\n                      buttontype=\"default\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                      disabled={!isValid || isSubmitting}\n                    >login </Button>\n                    <Grid container>\n                      <Grid item xs>\n                        <Link\n                          href=\"/forgotpassword\"\n                        >\n                          {\"forgotPassword\"}\n                        </Link>\n                      </Grid>\n                    </Grid>         \n                </Form>\n              );\n            }}\n          </Formik>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swesthauser\\\\Documents\\\\_D\\\\Workspace\\\\tbz\\\\Baenkli-App-Remastered-Frontend\\\\src\\\\components\\\\organisms\\\\loginForm\\\\LoginForm.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Container, Paper, Switch, TextField, Button, makeStyles, withStyles } from \"@material-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport { LoginValidationSchema } from \"../../other/validation/LoginValidationSchema\";\nimport SessionHandlerContext from \"../../other/context/SessionHandlerContext\";\nimport { Link } from \"react-router-dom\";\nimport OwnButton from \"../../atoms/ownButton/OwnButton\";\n/**\r\n * This is the login page\r\n */\n// TO DO: fix height between form elements in case of showing error messages\n\nconst LoginForm = props => {\n  const GreenSwitch = withStyles({\n    switchBase: {\n      color: \"#F3FAF0\",\n      '&$checked': {\n        color: \"#355A20\"\n      },\n      '&$checked + $track': {\n        backgroundColor: \"#355A20\"\n      }\n    },\n    checked: {},\n    track: {}\n  })(Switch);\n  const useStyles = makeStyles(theme => ({\n    paper: {\n      flexGrow: 1,\n      paddingTop: \"50px\",\n      paddingBottom: \"50px\",\n      background: \"#e6f3d8\",\n      color: \"black\"\n    },\n    heading: {\n      color: \"#47792A\",\n      textAlign: \"center\"\n    },\n    submitButton: {\n      backgroundColor: \"#355A20\",\n      color: \"white\",\n      '&:hover': {\n        backgroundColor: \"#47792A\",\n        color: '#FFF'\n      }\n    },\n    resButton: {},\n    formElement: {\n      margin: \"20px\",\n      textAlign: \"center\"\n    },\n    title: {\n      textAlign: \"center\"\n    },\n    switch: {},\n    footer: {\n      textAlign: \"center\"\n    },\n    link: {\n      textDecoration: \"none\"\n    }\n  }));\n  const classes = useStyles();\n  const {\n    login\n  } = useContext(SessionHandlerContext);\n  const [showPassword, setShowPassword] = useState(false);\n  const [typePassword, setTypePassword] = useState(\"password\");\n  const [textPassword, setTextPassword] = useState(\"Show password\");\n\n  const changePasswordType = () => {\n    setTypePassword(showPassword ? \"text\" : \"password\");\n    setTextPassword(showPassword ? \"Hide password\" : \"Show password\");\n  };\n\n  useEffect(() => {\n    changePasswordType(); // eslint-disable-next-line\n  }, [showPassword]);\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    enableReinitialize: true,\n    validationSchema: LoginValidationSchema,\n    onSubmit: values => {\n      login(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, ({\n    handleSubmit,\n    handleChange,\n    errors,\n    touched,\n    isSubmitting\n  }) => {\n    return /*#__PURE__*/React.createElement(Form, {\n      name: \"login\",\n      method: \"post\",\n      onSubmit: handleSubmit,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.formElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      name: \"email\",\n      variant: \"outlined\",\n      label: \"Email\",\n      disabled: isSubmitting,\n      error: errors.email && touched.email,\n      helperText: touched.email ? errors.email : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.formElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"password\",\n      name: \"password\",\n      variant: \"outlined\",\n      label: \"Password\",\n      type: typePassword,\n      disabled: isSubmitting,\n      error: errors.password && touched.password,\n      helperText: touched.password ? errors.password : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.formElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(GreenSwitch, {\n      className: classes.switch,\n      checked: showPassword,\n      onChange: () => {\n        setShowPassword(!showPassword);\n      },\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }), textPassword), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.formElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(OwnButton, {\n      typeOfButton: 'submit',\n      disabled: isSubmitting,\n      text: \"Login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.footer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }, \" Have you no account yet?\"), /*#__PURE__*/React.createElement(Link, {\n      className: classes.link,\n      to: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 19\n      }\n    }, \"Sign up now\")));\n  }));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/swesthauser/Documents/_D/Workspace/tbz/Baenkli-App-Remastered-Frontend/src/components/organisms/loginForm/LoginForm.js"],"names":["React","useState","useEffect","useContext","Container","Paper","Switch","TextField","Button","makeStyles","withStyles","Formik","Form","LoginValidationSchema","SessionHandlerContext","Link","OwnButton","LoginForm","props","GreenSwitch","switchBase","color","backgroundColor","checked","track","useStyles","theme","paper","flexGrow","paddingTop","paddingBottom","background","heading","textAlign","submitButton","resButton","formElement","margin","title","switch","footer","link","textDecoration","classes","login","showPassword","setShowPassword","typePassword","setTypePassword","textPassword","setTextPassword","changePasswordType","email","password","values","handleSubmit","handleChange","errors","touched","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Container, Paper, Switch, TextField, Button, makeStyles, withStyles } from \"@material-ui/core\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { LoginValidationSchema } from \"../../other/validation/LoginValidationSchema\";\r\nimport SessionHandlerContext from \"../../other/context/SessionHandlerContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OwnButton from \"../../atoms/ownButton/OwnButton\";\r\n\r\n/**\r\n * This is the login page\r\n */\r\n\r\n// TO DO: fix height between form elements in case of showing error messages\r\n\r\nconst LoginForm = props => {\r\n\r\n  const GreenSwitch = withStyles({\r\n    switchBase: {\r\n      color: \"#F3FAF0\",\r\n      '&$checked': {\r\n        color: \"#355A20\",\r\n      },\r\n      '&$checked + $track': {\r\n        backgroundColor: \"#355A20\",\r\n      },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n  })(Switch);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      flexGrow: 1,\r\n      paddingTop: \"50px\",\r\n      paddingBottom: \"50px\",\r\n      background: \"#e6f3d8\",\r\n      color: \"black\",\r\n    },\r\n    heading: {\r\n      color: \"#47792A\",\r\n      textAlign: \"center\"\r\n    },\r\n    submitButton: {\r\n      backgroundColor: \"#355A20\",\r\n      color: \"white\",\r\n      '&:hover': {\r\n        backgroundColor: \"#47792A\",\r\n        color: '#FFF'\r\n      }\r\n\r\n    },\r\n    resButton: {\r\n\r\n    },\r\n    formElement: {\r\n      margin: \"20px\",\r\n      textAlign: \"center\"\r\n    },\r\n    title: {\r\n      textAlign: \"center\"\r\n    },\r\n    switch: {\r\n\r\n    },\r\n    footer: {\r\n      textAlign: \"center\"\r\n    },\r\n    link: {\r\n      textDecoration: \"none\"\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const { login } = useContext(SessionHandlerContext);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [typePassword, setTypePassword] = useState(\"password\");\r\n  const [textPassword, setTextPassword] = useState(\"Show password\")\r\n\r\n  const changePasswordType = () => {\r\n    setTypePassword(showPassword ? \"text\" : \"password\");\r\n    setTextPassword(showPassword ? \"Hide password\" : \"Show password\")\r\n  };\r\n\r\n  useEffect(() => {\r\n    changePasswordType();\r\n    // eslint-disable-next-line\r\n  }, [showPassword])\r\n\r\n  return (\r\n      <Paper className={classes.paper}>\r\n        <Formik\r\n          initialValues={{\r\n            email: \"\",\r\n            password: \"\"\r\n          }}\r\n          enableReinitialize\r\n          validationSchema={LoginValidationSchema}\r\n          onSubmit={(values) => {\r\n            login(values);\r\n          }}\r\n        >\r\n          {({ handleSubmit, handleChange, errors, touched, isSubmitting }) => {\r\n            return (\r\n              <Form\r\n                name=\"login\"\r\n                method=\"post\"\r\n                onSubmit={handleSubmit}\r\n                onChange={handleChange}\r\n              >\r\n                <p className={classes.title}>\r\n                  <b>\r\n                    Login\r\n                  </b>\r\n                </p>\r\n                <div className={classes.formElement}>\r\n                  <TextField\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    variant=\"outlined\"\r\n                    label={\"Email\"}\r\n                    disabled={isSubmitting}\r\n                    error={errors.email && touched.email}\r\n                    helperText={touched.email ? errors.email : null}\r\n                  />\r\n                </div>\r\n\r\n                <div className={classes.formElement}>\r\n                  <TextField\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    variant=\"outlined\"\r\n                    label={\"Password\"}\r\n                    type={typePassword}\r\n                    disabled={isSubmitting}\r\n                    error={errors.password && touched.password}\r\n                    helperText={touched.password ? errors.password : null}\r\n                  />\r\n                </div>\r\n                <div className={classes.formElement}>\r\n                  <GreenSwitch\r\n                    className={classes.switch}\r\n                    checked={showPassword}\r\n                    onChange={() => {\r\n                      setShowPassword(!showPassword);\r\n                    }}\r\n                    color=\"primary\"\r\n                  />\r\n                  {textPassword}\r\n                </div>\r\n                <div className={classes.formElement}>\r\n                  <OwnButton\r\n                    typeOfButton={'submit'}\r\n                    disabled={isSubmitting}\r\n                    text={\"Login\"}\r\n                  />\r\n                </div>\r\n                <div className={classes.footer}>\r\n                  <p> Have you no account yet?</p>\r\n                  <Link className={classes.link} to=\"/signup\">Sign up now</Link>\r\n                </div>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Paper>\r\n  );\r\n};\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}
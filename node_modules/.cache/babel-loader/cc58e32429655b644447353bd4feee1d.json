{"ast":null,"code":"var _jsxFileName = \"/Users/ivogurtner/OneDrive - TBZ/M120/Baenkli-App-Frontend/src/components/organisms/cardForm/cardForm.js\";\nimport React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../molecules/navbar/navbar\";\nimport Grid from '@material-ui/core/Grid';\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"@material-ui/core\";\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst CardForm = ({\n  bench,\n  setBench\n}, props) => {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n      padding: \"15px\",\n      margin: \"30px\",\n      background: \"#e6f3d8\",\n      color: \"black\"\n    }\n  }));\n  const classes = useStyles();\n  const [hasMeadow, setHasMeadow] = useState(bench === undefined ? false : bench.hasMeadow);\n  const [locationOnWater, setLocationOnWater] = useState(bench === undefined ? false : bench.locationOnWater);\n  const [submitting, setSubmitting] = useState(false);\n\n  const handleChangeMeadow = () => {\n    setHasMeadow(!hasMeadow);\n  };\n\n  const handleChangeLocationOnwater = () => {\n    setLocationOnWater(!locationOnWater);\n  };\n\n  const regexName = /^[a-zA-Z äöüéèàÜÖÄÉÈÀ,+-]+$/;\n  const validationName = \"Please enter only letters\";\n  const validationMax = \"Max. 250 characters\";\n  const validationMinNumber = \"Minimum: 0\";\n  const validationMaxNumber = \"Maximum: 5\";\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().trim().matches(regexName, validationName).required(\"Title required\").max(250, validationMax),\n    description: Yup.string().trim().max(250, validationMax),\n    amountBenches: Yup.number().required(\"Amount of benches required\").min(0, validationMinNumber),\n    amountFirePlaces: Yup.number().required(\"Amount of fire places required\").min(0, validationMinNumber),\n    amountTrashCans: Yup.number().required(\"Amount of trash cans required\").min(0, validationMinNumber),\n    distanceToNextShop: Yup.string().required(\"Distance to next shop required\").trim().max(250, validationMax),\n    quiet: Yup.number().required(\"Quiet required\").min(0, validationMinNumber).max(5, validationMaxNumber)\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: bench === undefined ? {} : bench,\n    enableReinitialize: true,\n    validationSchema: validationSchema,\n    onSubmit: (values, props) => {\n      setSubmitting(true);\n      const dto = { ...bench,\n        ...values\n      };\n      console.log('DTO ', dto);\n\n      if (bench !== undefined) {\n        axios.put(`http://localhost:8080/benches/${bench.id}`, dto).then(response => {\n          setSubmitting(false);\n          setBench(response.data);\n        }).catch(error => {\n          setSubmitting(false);\n          console.error('Error in Put', error);\n        });\n      } else {\n        axios.post(`http://localhost:8080/benches`, dto).then(response => {\n          setSubmitting(false);\n          {\n            /* setBench(response.data); */\n          }\n        }).catch(error => {\n          setSubmitting(false);\n          console.error('Error in Post', error);\n        }).finally(() => {\n          props.history.push('/');\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, ({\n    handleSubmit,\n    errors,\n    touched,\n    handleChange,\n    initialValues\n  }) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\",\n      onSubmit: handleSubmit,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textPrimary\",\n      component: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 37\n      }\n    }, bench === undefined ? \"New bench\" : bench.title), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"title\",\n      label: \"Title\",\n      error: errors.title && touched.title,\n      helperText: touched.title ? errors.title : null,\n      defaultValue: initialValues.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"description\",\n      label: \"Description\",\n      multiline: true,\n      error: errors.description && touched.description,\n      helperText: touched.description ? errors.description : null,\n      defaultValue: initialValues.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"latitude\",\n      label: \"Latitude\",\n      error: errors.latitude && touched.latitude,\n      helperText: touched.latitude ? errors.latitude : null,\n      defaultValue: initialValues.latitude,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"longitude\",\n      label: \"Longitude\",\n      error: errors.longitude && touched.longitude,\n      helperText: touched.longitude ? errors.longitude : null,\n      defaultValue: initialValues.longitude,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      name: \"amountBenches\",\n      label: \"Amount benches\",\n      type: \"number\",\n      error: errors.amountBenches && touched.amountBenches,\n      helperText: touched.amountBenches ? errors.amountBenches : null,\n      defaultValue: initialValues.amountBenches,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      name: \"amountFirePlaces\",\n      label: \"Amount fire places\",\n      type: \"number\",\n      error: errors.amountFirePlaces && touched.amountFirePlaces,\n      helperText: touched.amountFirePlaces ? errors.amountFirePlaces : null,\n      defaultValue: initialValues.amountFirePlaces,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      name: \"amountTrashCans\",\n      label: \"Amount trash cans\",\n      type: \"number\",\n      error: errors.amountTrashCans && touched.amountTrashCans,\n      helperText: touched.amountTrashCans ? errors.amountTrashCans : null,\n      defaultValue: initialValues.amountTrashCans,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"distanceToNextShop\",\n      label: \"Distance to next shop\",\n      error: errors.distanceToNextShop && touched.distanceToNextShop,\n      helperText: touched.distanceToNextShop ? errors.distanceToNextShop : null,\n      defaultValue: initialValues.distanceToNextShop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      name: \"quiet\",\n      label: \"Quiet\",\n      type: \"number\",\n      error: errors.quiet && touched.quiet,\n      helperText: touched.quiet ? errors.quiet : null,\n      defaultValue: initialValues.quiet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"directions\",\n      label: \"Directions\",\n      multiline: true,\n      error: errors.directions && touched.directions,\n      helperText: touched.directions ? errors.directions : null,\n      defaultValue: initialValues.directions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 41\n      }\n    }, \"Are there any meadows?\", /*#__PURE__*/React.createElement(Switch, {\n      checked: hasMeadow,\n      onChange: handleChangeMeadow,\n      color: \"primary\",\n      name: \"hasMeadow\",\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 41\n      }\n    }, \"Is location on any water?\", /*#__PURE__*/React.createElement(Switch, {\n      checked: locationOnWater,\n      onChange: handleChangeLocationOnwater,\n      color: \"primary\",\n      name: \"locationOnWater\",\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      disabled: submitting,\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 45\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 45\n      }\n    }, \"Reset\")))));\n  })));\n};\n\nexport default CardForm; // initialValues={{\n//     id: bench.id,\n//     title: bench.title,\n//     description: bench.description,\n//     latitude: bench.latitude,\n//     longitude: bench.longitude,\n//     amountBenches: bench.amountBenches,\n//     amountFirePlaces: bench.amountFirePlaces,\n//     amountTrashCans: bench.amountTrashCans,\n//     distanceToNextShop: bench.distanceToNextShop,\n//     quiet: bench.quiet,\n//     directions: bench.directions,\n//     hasMeadow: bench.hasMeadow,\n//     isLocationOnWater: bench.isLocationOnWater\n// }}","map":{"version":3,"sources":["/Users/ivogurtner/OneDrive - TBZ/M120/Baenkli-App-Frontend/src/components/organisms/cardForm/cardForm.js"],"names":["React","Fragment","useState","axios","Navbar","Grid","Formik","Yup","TextField","Switch","Button","Paper","makeStyles","Typography","CardForm","bench","setBench","props","useStyles","theme","root","flexGrow","padding","margin","background","color","classes","hasMeadow","setHasMeadow","undefined","locationOnWater","setLocationOnWater","submitting","setSubmitting","handleChangeMeadow","handleChangeLocationOnwater","regexName","validationName","validationMax","validationMinNumber","validationMaxNumber","validationSchema","object","shape","title","string","trim","matches","required","max","description","amountBenches","number","min","amountFirePlaces","amountTrashCans","distanceToNextShop","quiet","values","dto","console","log","put","id","then","response","data","catch","error","post","finally","history","push","handleSubmit","errors","touched","handleChange","initialValues","latitude","longitude","directions"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../molecules/navbar/navbar\"\nimport Grid from '@material-ui/core/Grid';\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"@material-ui/core\";\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst CardForm = ({ bench, setBench }, props) => {\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            flexGrow: 1,\n            padding: \"15px\",\n            margin: \"30px\",\n            background: \"#e6f3d8\",\n            color: \"black\"\n        }\n    }));\n\n    const classes = useStyles();\n\n    const [hasMeadow, setHasMeadow] = useState(bench === undefined ? false : bench.hasMeadow);\n    const [locationOnWater, setLocationOnWater] = useState(bench === undefined ? false : bench.locationOnWater);\n    const [submitting, setSubmitting] = useState(false);\n\n    const handleChangeMeadow = () => {\n        setHasMeadow(!hasMeadow);\n    }\n\n    const handleChangeLocationOnwater = () => {\n        setLocationOnWater(!locationOnWater);\n    }\n\n    const regexName = /^[a-zA-Z äöüéèàÜÖÄÉÈÀ,+-]+$/;\n    const validationName = \"Please enter only letters\";\n    const validationMax = \"Max. 250 characters\"\n    const validationMinNumber = \"Minimum: 0\";\n    const validationMaxNumber = \"Maximum: 5\";\n\n    const validationSchema = Yup.object().shape({\n        title: Yup.string()\n            .trim()\n            .matches(regexName, validationName)\n            .required(\"Title required\")\n            .max(250, validationMax),\n        description: Yup.string()\n            .trim()\n            .max(250, validationMax),\n        amountBenches: Yup.number()\n            .required(\"Amount of benches required\")\n            .min(0, validationMinNumber),\n        amountFirePlaces: Yup.number()\n            .required(\"Amount of fire places required\")\n            .min(0, validationMinNumber),\n        amountTrashCans: Yup.number()\n            .required(\"Amount of trash cans required\")\n            .min(0, validationMinNumber),\n        distanceToNextShop: Yup.string()\n            .required(\"Distance to next shop required\")\n            .trim()\n            .max(250, validationMax),\n        quiet: Yup.number()\n            .required(\"Quiet required\")\n            .min(0, validationMinNumber)\n            .max(5, validationMaxNumber)\n    });\n\n    return (\n        <div>\n            <Paper className={classes.root} elevation={1}>\n                <Formik\n                    initialValues={bench === undefined ? {} : bench}\n                    enableReinitialize={true}\n                    validationSchema={validationSchema}\n                    onSubmit={(values, props) => {\n                        setSubmitting(true);\n                        const dto = { ...bench, ...values };\n                        console.log('DTO ', dto)\n                        if (bench !== undefined) {\n                            axios.put(`http://localhost:8080/benches/${bench.id}`, dto)\n                                .then(response => {\n                                    setSubmitting(false);\n                                    setBench(response.data)\n                                })\n                                .catch(error => {\n                                    setSubmitting(false);\n                                    console.error('Error in Put', error);\n                                });\n                        } else {\n                            axios.post(`http://localhost:8080/benches`, dto)\n                                .then(response => {\n                                    setSubmitting(false);\n                                    {/* setBench(response.data); */}\n                                })\n                                .catch(error => {\n                                    setSubmitting(false);\n                                    console.error('Error in Post', error);\n                                })\n                                .finally(() => {\n                                    props.history.push('/');\n                                })\n                        }\n                    }}\n                >\n                    {({ handleSubmit, errors, touched, handleChange, initialValues }) => {\n                        return (\n                            <Fragment>\n                                <Navbar />\n                                <form method=\"post\" onSubmit={handleSubmit} onChange={handleChange}>\n                                    <Typography variant=\"body2\" color=\"textPrimary\" component=\"h3\">\n                                        {bench === undefined ? \"New bench\" : bench.title}\n                                        </Typography>\n                                    <Grid container spacing={2}>\n\n                                        <Grid item xs={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"title\"\n                                                label=\"Title\"\n                                                error={errors.title && touched.title}\n                                                helperText={touched.title ? errors.title : null}\n                                                defaultValue={initialValues.title}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"description\"\n                                                label=\"Description\"\n                                                multiline\n                                                error={errors.description && touched.description}\n                                                helperText={touched.description ? errors.description : null}\n                                                defaultValue={initialValues.description}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"latitude\"\n                                                label=\"Latitude\"\n                                                error={errors.latitude && touched.latitude}\n                                                helperText={touched.latitude ? errors.latitude : null}\n                                                defaultValue={initialValues.latitude}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"longitude\"\n                                                label=\"Longitude\"\n                                                error={errors.longitude && touched.longitude}\n                                                helperText={touched.longitude ? errors.longitude : null}\n                                                defaultValue={initialValues.longitude}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            <TextField\n                                                id=\"standard-number\"\n                                                name=\"amountBenches\"\n                                                label=\"Amount benches\"\n                                                type=\"number\"\n                                                error={errors.amountBenches && touched.amountBenches}\n                                                helperText={touched.amountBenches ? errors.amountBenches : null}\n                                                defaultValue={initialValues.amountBenches}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            <TextField\n                                                id=\"standard-number\"\n                                                name=\"amountFirePlaces\"\n                                                label=\"Amount fire places\"\n                                                type=\"number\"\n                                                error={errors.amountFirePlaces && touched.amountFirePlaces}\n                                                helperText={touched.amountFirePlaces ? errors.amountFirePlaces : null}\n                                                defaultValue={initialValues.amountFirePlaces}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            <TextField\n                                                id=\"standard-number\"\n                                                name=\"amountTrashCans\"\n                                                label=\"Amount trash cans\"\n                                                type=\"number\"\n                                                error={errors.amountTrashCans && touched.amountTrashCans}\n                                                helperText={touched.amountTrashCans ? errors.amountTrashCans : null}\n                                                defaultValue={initialValues.amountTrashCans}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"distanceToNextShop\"\n                                                label=\"Distance to next shop\"\n                                                error={errors.distanceToNextShop && touched.distanceToNextShop}\n                                                helperText={touched.distanceToNextShop ? errors.distanceToNextShop : null}\n                                                defaultValue={initialValues.distanceToNextShop}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            <TextField\n                                                id=\"standard-number\"\n                                                name=\"quiet\"\n                                                label=\"Quiet\"\n                                                type=\"number\"\n                                                error={errors.quiet && touched.quiet}\n                                                helperText={touched.quiet ? errors.quiet : null}\n                                                defaultValue={initialValues.quiet}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                name=\"directions\"\n                                                label=\"Directions\"\n                                                multiline\n                                                error={errors.directions && touched.directions}\n                                                helperText={touched.directions ? errors.directions : null}\n                                                defaultValue={initialValues.directions}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            Are there any meadows?\n                                            <Switch\n                                                checked={hasMeadow}\n                                                onChange={handleChangeMeadow}\n                                                color=\"primary\"\n                                                name=\"hasMeadow\"\n                                                inputProps={{ 'aria-label': 'primary checkbox' }}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            Is location on any water?\n                                            <Switch\n                                                checked={locationOnWater}\n                                                onChange={handleChangeLocationOnwater}\n                                                color=\"primary\"\n                                                name=\"locationOnWater\"\n                                                inputProps={{ 'aria-label': 'primary checkbox' }}\n                                            />\n                                        </Grid>\n\n                                        <Grid item xs={5}>\n                                            <Button variant=\"contained\" disabled={submitting} color=\"primary\" type=\"submit\">\n                                                Submit\n                                       </Button>\n                                        </Grid>\n                                        <Grid item xs={5}>\n                                            <Button variant=\"contained\" color=\"secondary\" type=\"reset\">\n                                                Reset\n                                       </Button>\n                                        </Grid>\n\n                                    </Grid>\n                                </form>\n                            </Fragment>\n                        )\n                    }}\n                </Formik>\n            </Paper>\n        </div>\n    )\n}\n\nexport default CardForm;\n\n// initialValues={{\n//     id: bench.id,\n//     title: bench.title,\n//     description: bench.description,\n//     latitude: bench.latitude,\n//     longitude: bench.longitude,\n//     amountBenches: bench.amountBenches,\n//     amountFirePlaces: bench.amountFirePlaces,\n//     amountTrashCans: bench.amountTrashCans,\n//     distanceToNextShop: bench.distanceToNextShop,\n//     quiet: bench.quiet,\n//     directions: bench.directions,\n//     hasMeadow: bench.hasMeadow,\n//     isLocationOnWater: bench.isLocationOnWater\n// }}"]},"metadata":{},"sourceType":"module"}
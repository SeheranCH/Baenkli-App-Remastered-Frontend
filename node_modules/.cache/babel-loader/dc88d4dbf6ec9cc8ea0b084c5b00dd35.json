{"ast":null,"code":"var _jsxFileName = \"/Users/ivogurtner/OneDrive - TBZ/M326/Baenkli-App-Frontend/src/components/pages/cardPage/cardPage.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../molecules/navbar/navbar\";\nimport PostCard from \"../../molecules/card/card\";\nimport Grid from '@material-ui/core/Grid';\n\nconst CardPage = props => {\n  const postCardId = props.match.params.id;\n\n  function randomImg(width, height, key) {\n    var source = 'https://source.unsplash.com/random/' + width + 'x' + height + '/?bench,park' + key;\n    return source;\n  }\n\n  function calRating() {\n    var total = 0;\n    var length = 0;\n    let array = benche.ratings;\n    length = array.length;\n    array.map(r => total += r.rating);\n    let result = total / length;\n    return Math.round(result * 2) / 2;\n  }\n\n  const [benche, setBenche] = useState([]);\n\n  function getOneBench(id) {\n    axios.get(`http://localhost:8080/benches/${id}`).then(res => {\n      const data = res.data;\n      console.log(\"res one\", data);\n      return setBenche(data);\n    });\n  }\n\n  function deleteBench(id) {\n    axios.delete(`http://localhost:8080/benches/${id}`).then(res => {\n      const data = res.data;\n      console.log(\"res one\", data); //  return setBenche(data);\n\n      props.history.push(`/`);\n    });\n  }\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    getOneBench(postCardId);\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PostCard, {\n    id: postCardId,\n    image: randomImg(500, 500, postCardId),\n    deleteButton: true,\n    title: benche.title,\n    valueQuietness: benche.quietness // valueRating={calRating(postCardId)}\n    ,\n    amountBenches: benche.amountBenches,\n    amountFirePlaces: benche.amountFirePlaces,\n    amountTrashCans: benche.amountTrashCans,\n    distanceToNextShop: benche.distanceToNextShop,\n    directions: benche.directions,\n    readOnly: true,\n    deleteFunction: () => deleteBench(postCardId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default CardPage;","map":{"version":3,"sources":["/Users/ivogurtner/OneDrive - TBZ/M326/Baenkli-App-Frontend/src/components/pages/cardPage/cardPage.js"],"names":["React","Fragment","useState","useEffect","axios","Navbar","PostCard","Grid","CardPage","props","postCardId","match","params","id","randomImg","width","height","key","source","calRating","total","length","array","benche","ratings","map","r","rating","result","Math","round","setBenche","getOneBench","get","then","res","data","console","log","deleteBench","delete","history","push","title","quietness","amountBenches","amountFirePlaces","amountTrashCans","distanceToNextShop","directions"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../molecules/navbar/navbar\"\nimport PostCard from \"../../molecules/card/card\"\nimport Grid from '@material-ui/core/Grid';\n\nconst CardPage = (props) => {\n\n    const postCardId = props.match.params.id;\n\n    function randomImg(width, height, key) {\n        var source = 'https://source.unsplash.com/random/' + width + 'x' + height + '/?bench,park' + key;\n        return source;\n    }\n\n\n    function calRating() {\n\n        var total = 0;\n        var length = 0;\n    \n        let array = benche.ratings;\n        length = array.length;\n        array.map(r => total += r.rating);\n    \n        let result = total/length;\n    \n        return Math.round(result*2)/2;\n       \n      }\n\n    const [benche, setBenche] = useState([]);\n\n    function getOneBench(id) {\n      axios.get(`http://localhost:8080/benches/${id}`)\n        .then(res => {\n          const data = res.data;\n          console.log(\"res one\", data)\n          return setBenche(data);\n        })\n    }\n\n    function deleteBench (id) {\n        axios.delete(`http://localhost:8080/benches/${id}`)\n          .then(res => {\n            const data = res.data;\n            console.log(\"res one\", data)\n          //  return setBenche(data);\n          props.history.push(`/`);\n          })\n      }\n  \n    useEffect(() => {\n      // Update the document title using the browser API\n     getOneBench(postCardId);\n    }, []);\n\n\n\n    return (\n        <Fragment>\n            <Navbar />\n            <Grid container spacing={3} justify=\"center\"\n                alignItems=\"center\">\n                <Grid item xs={4}  >\n                    <PostCard\n                        id={postCardId}\n                        image={randomImg(500, 500, postCardId)}\n                        deleteButton={true}\n                        title={benche.title}\n                        valueQuietness={benche.quietness}\n                        // valueRating={calRating(postCardId)}\n                        amountBenches={benche.amountBenches}\n                        amountFirePlaces={benche.amountFirePlaces}\n                        amountTrashCans={benche.amountTrashCans}\n                        distanceToNextShop={benche.distanceToNextShop}\n                        directions={benche.directions}\n                        readOnly={true}\n                        deleteFunction={() => deleteBench(postCardId)}\n                    />\n                </Grid>\n\n            </Grid>\n        </Fragment>\n    );\n};\n\nexport default CardPage;"]},"metadata":{},"sourceType":"module"}
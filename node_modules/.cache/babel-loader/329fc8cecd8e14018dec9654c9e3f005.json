{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swesthauser\\\\Documents\\\\_D\\\\Workspace\\\\tbz\\\\Baenkli-App-Remastered-Frontend\\\\src\\\\components\\\\organisms\\\\userForm\\\\UserForm.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, TextField, Typography, Button, Switch, Paper, Container } from \"@material-ui/core\";\nimport { Formik } from \"formik\";\nimport { CreateUserValidationSchema } from \"../../other/validation/CreateUserValidationSchema\";\nimport { UpdateUserValidationSchema } from \"../../other/validation/UpdateUserValidationSchema\";\nimport UserService from \"../../../service/UserService\";\nimport SessionHandlerContext from \"../../other/context/SessionHandlerContext\";\nimport { useHistory } from \"react-router-dom\";\nimport OwnButton from \"../../atoms/ownButton/OwnButton\";\nimport Title from \"../../atoms/title/Title\";\nconst useStyles = makeStyles(theme => ({\n  // root: {\n  //     margin: \"5%\"\n  // },\n  paper: {\n    flexGrow: 1,\n    paddingTop: \"50px\",\n    paddingBottom: \"50px\",\n    background: \"#e6f3d8\",\n    color: \"black\"\n  },\n  title: {\n    textAlign: \"center\"\n  },\n  inputs: {\n    textAlign: \"center\",\n    margin: \"20px\"\n  },\n  input: {\n    marginLeft: \"20px\"\n  },\n  button: {\n    backgroundColor: \"#87C4F4\"\n  },\n  helperText: {\n    margin: \"10px\"\n  },\n  link: {\n    textDecoration: \"none\"\n  },\n  switch: {\n    margin: \"10px\"\n  },\n  footer: {\n    textAlign: \"center\",\n    margin: \"20px\"\n  },\n  submitButton: {\n    backgroundColor: \"#355A20\",\n    color: \"white\",\n    '&:hover': {\n      backgroundColor: \"#47792A\",\n      color: '#FFF'\n    }\n  }\n}));\n\nconst UserForm = ({\n  initialObject,\n  modeRegister,\n  modeDialog,\n  updateFunc\n}) => {\n  const {\n    setActiveUser\n  } = useContext(SessionHandlerContext);\n  const history = useHistory();\n  const [showPassword, setShowPassword] = useState(false);\n  const [typePassword, setTypePassword] = useState(\"password\");\n  const [textShowPassword, setTextShowPassword] = useState(\"Show password\");\n  const classes = useStyles();\n\n  const changePasswordType = () => {\n    setTypePassword(showPassword ? \"text\" : \"password\");\n    setTextShowPassword(!showPassword ? \"Show password\" : \"Hide password\");\n  };\n\n  useEffect(() => {\n    changePasswordType(); // eslint-disable-next-line\n  }, [showPassword]);\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialObject,\n    enableReinitialize: true,\n    validationSchema: modeRegister ? CreateUserValidationSchema : UpdateUserValidationSchema,\n    onSubmit: values => {\n      var dto = { ...initialObject,\n        ...values\n      };\n\n      if (!modeRegister) {\n        delete dto.password;\n      }\n\n      delete dto.emailRepeat;\n      delete dto.passwordRepeat;\n\n      if (modeRegister) {\n        UserService.create(dto).then(() => {\n          history.push('/login');\n        }).catch(err => {\n          console.error('Error in UserForm: ', err);\n        });\n      } else if (modeDialog) {\n        updateFunc(dto);\n      } else {\n        UserService.update(dto.id, dto).then(res => {\n          setActiveUser(res.data);\n        }).catch(err => {\n          console.error('Error in UserForm: ', err);\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, ({\n    handleSubmit,\n    errors,\n    touched,\n    handleChange,\n    initialValues,\n    dirty,\n    values\n  }) => {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\",\n      onSubmit: handleSubmit,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      text: modeRegister ? \"Register\" : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.inputs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"username\",\n      name: \"username\",\n      label: \"Username *\",\n      variant: \"outlined\",\n      type: \"text\",\n      error: errors.username && touched.username,\n      helperText: touched.username ? errors.username : null,\n      className: classes.input,\n      defaultValue: initialValues.username != null ? initialValues.username : null,\n      style: {\n        width: \"400px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.inputs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"firstName\",\n      name: \"firstName\",\n      label: \"First name *\",\n      variant: \"outlined\",\n      type: \"text\",\n      error: errors.firstName && touched.firstName,\n      helperText: touched.firstName ? errors.firstName : null,\n      className: classes.input,\n      defaultValue: initialValues.firstName != null ? initialValues.firstName : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"lastName\",\n      name: \"lastName\",\n      label: \"Last name *\",\n      variant: \"outlined\",\n      type: \"text\",\n      error: errors.lastName && touched.lastName,\n      helperText: touched.lastName ? errors.lastName : null,\n      className: classes.input,\n      defaultValue: initialValues.lastName != null ? initialValues.lastName : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.inputs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      name: \"email\",\n      label: \"Email *\",\n      variant: \"outlined\",\n      type: \"text\",\n      error: errors.email && touched.email,\n      helperText: touched.email ? errors.email : null,\n      className: classes.input,\n      defaultValue: initialValues.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    }), modeRegister || initialValues.email !== values.email ? /*#__PURE__*/React.createElement(TextField, {\n      id: \"emailRepeat\",\n      name: \"emailRepeat\",\n      label: \"Confirm email *\",\n      variant: \"outlined\",\n      type: \"text\",\n      error: errors.emailRepeat && touched.emailRepeat,\n      helperText: touched.emailRepeat ? errors.emailRepeat : null,\n      className: classes.input,\n      defaultValue: initialValues.emailRepeat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 37\n      }\n    }) : null), modeRegister ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.inputs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"password\",\n      name: \"password\",\n      label: modeRegister ? \"Password *\" : \"New password\",\n      variant: \"outlined\",\n      type: typePassword,\n      error: errors.password && touched.password,\n      helperText: touched.password ? errors.password : null,\n      className: classes.input,\n      defaultValue: initialValues.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"passwordRepeat\",\n      name: \"passwordRepeat\",\n      label: modeRegister ? \"Confirm password *\" : \"Confirm new password*\",\n      variant: \"outlined\",\n      type: typePassword,\n      error: errors.passwordRepeat && touched.passwordRepeat,\n      helperText: touched.passwordRepeat ? errors.passwordRepeat : null,\n      className: classes.input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 37\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.footer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      className: classes.switch,\n      checked: showPassword,\n      onChange: () => {\n        setShowPassword(!showPassword);\n      },\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 33\n      }\n    }), textShowPassword, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(OwnButton, {\n      typeOfButton: 'submit',\n      text: modeRegister ? \"Sign up\" : \"Update\",\n      disabled: !modeRegister ? !dirty : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.helperText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 33\n      }\n    }, modeRegister && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.footer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 45\n      }\n    }, \" Have you created an account yet?\"), /*#__PURE__*/React.createElement(Link, {\n      className: classes.link,\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 45\n      }\n    }, \"Sign in now\")))));\n  }));\n};\n\nexport default UserForm;","map":{"version":3,"sources":["C:/Users/swesthauser/Documents/_D/Workspace/tbz/Baenkli-App-Remastered-Frontend/src/components/organisms/userForm/UserForm.js"],"names":["React","useState","useEffect","useContext","Link","makeStyles","TextField","Typography","Button","Switch","Paper","Container","Formik","CreateUserValidationSchema","UpdateUserValidationSchema","UserService","SessionHandlerContext","useHistory","OwnButton","Title","useStyles","theme","paper","flexGrow","paddingTop","paddingBottom","background","color","title","textAlign","inputs","margin","input","marginLeft","button","backgroundColor","helperText","link","textDecoration","switch","footer","submitButton","UserForm","initialObject","modeRegister","modeDialog","updateFunc","setActiveUser","history","showPassword","setShowPassword","typePassword","setTypePassword","textShowPassword","setTextShowPassword","classes","changePasswordType","values","dto","password","emailRepeat","passwordRepeat","create","then","push","catch","err","console","error","update","id","res","data","handleSubmit","errors","touched","handleChange","initialValues","dirty","username","width","firstName","lastName","email"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles, TextField, Typography, Button, Switch, Paper, Container } from \"@material-ui/core\";\r\nimport { Formik } from \"formik\";\r\nimport { CreateUserValidationSchema } from \"../../other/validation/CreateUserValidationSchema\";\r\nimport { UpdateUserValidationSchema } from \"../../other/validation/UpdateUserValidationSchema\";\r\nimport UserService from \"../../../service/UserService\";\r\nimport SessionHandlerContext from \"../../other/context/SessionHandlerContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport OwnButton from \"../../atoms/ownButton/OwnButton\";\r\nimport Title from \"../../atoms/title/Title\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // root: {\r\n    //     margin: \"5%\"\r\n    // },\r\n    paper: {\r\n        flexGrow: 1,\r\n        paddingTop: \"50px\",\r\n        paddingBottom: \"50px\",\r\n        background: \"#e6f3d8\",\r\n        color: \"black\",\r\n    },\r\n    title: {\r\n        textAlign: \"center\"\r\n    },\r\n    inputs: {\r\n        textAlign: \"center\",\r\n        margin: \"20px\",\r\n    },\r\n    input: {\r\n        marginLeft: \"20px\",\r\n    },\r\n    button: {\r\n        backgroundColor: \"#87C4F4\"\r\n    },\r\n    helperText: {\r\n        margin: \"10px\"\r\n    },\r\n    link: {\r\n        textDecoration: \"none\"\r\n    },\r\n    switch: {\r\n        margin: \"10px\"\r\n    },\r\n    footer: {\r\n        textAlign: \"center\",\r\n        margin: \"20px\"\r\n    },\r\n    submitButton: {\r\n        backgroundColor: \"#355A20\",\r\n        color: \"white\",\r\n        '&:hover': {\r\n            backgroundColor: \"#47792A\",\r\n            color: '#FFF'\r\n        }\r\n\r\n    },\r\n}));\r\n\r\nconst UserForm = ({ initialObject, modeRegister, modeDialog, updateFunc }) => {\r\n\r\n    const { setActiveUser } = useContext(SessionHandlerContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [typePassword, setTypePassword] = useState(\"password\");\r\n    const [textShowPassword, setTextShowPassword] = useState(\"Show password\")\r\n    const classes = useStyles();\r\n\r\n    const changePasswordType = () => {\r\n        setTypePassword(showPassword ? \"text\" : \"password\");\r\n        setTextShowPassword(!showPassword ? \"Show password\" : \"Hide password\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        changePasswordType();\r\n        // eslint-disable-next-line\r\n    }, [showPassword])\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Formik\r\n                initialValues={initialObject}\r\n                enableReinitialize\r\n                validationSchema={modeRegister ? CreateUserValidationSchema : UpdateUserValidationSchema}\r\n                onSubmit={(values) => {\r\n                    var dto = { ...initialObject, ...values };\r\n                    if (!modeRegister) {\r\n                        delete dto.password;\r\n                    }\r\n                    delete dto.emailRepeat;\r\n                    delete dto.passwordRepeat;\r\n                    if (modeRegister) {\r\n                        UserService.create(dto)\r\n                            .then(() => {\r\n                                history.push('/login')\r\n                            })\r\n                            .catch(err => {\r\n                                console.error('Error in UserForm: ', err);\r\n                            })\r\n                    } else if (modeDialog) {\r\n                        updateFunc(dto);\r\n                    }\r\n                    else {\r\n                        UserService.update(dto.id, dto)\r\n                            .then((res) => {\r\n                                setActiveUser(res.data);\r\n                            })\r\n                            .catch(err => {\r\n                                console.error('Error in UserForm: ', err);\r\n                            })\r\n                    }\r\n                }}\r\n            >\r\n                {({ handleSubmit, errors, touched, handleChange, initialValues, dirty, values }) => {\r\n                    return (\r\n                        <form method=\"post\" onSubmit={handleSubmit} onChange={handleChange}>\r\n                            <Title text={modeRegister ? \"Register\" : null} />\r\n                            <div className={classes.inputs}>\r\n                                <TextField\r\n                                    id=\"username\"\r\n                                    name=\"username\"\r\n                                    label=\"Username *\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"text\"\r\n                                    error={errors.username && touched.username}\r\n                                    helperText={touched.username ? errors.username : null}\r\n                                    className={classes.input}\r\n                                    defaultValue={initialValues.username != null ? initialValues.username : null}\r\n                                    style={{ width: \"400px\" }}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.inputs}>\r\n                                <TextField\r\n                                    id=\"firstName\"\r\n                                    name=\"firstName\"\r\n                                    label=\"First name *\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"text\"\r\n                                    error={errors.firstName && touched.firstName}\r\n                                    helperText={touched.firstName ? errors.firstName : null}\r\n                                    className={classes.input}\r\n                                    defaultValue={initialValues.firstName != null ? initialValues.firstName : null}\r\n                                />\r\n                                <TextField\r\n                                    id=\"lastName\"\r\n                                    name=\"lastName\"\r\n                                    label=\"Last name *\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"text\"\r\n                                    error={errors.lastName && touched.lastName}\r\n                                    helperText={touched.lastName ? errors.lastName : null}\r\n                                    className={classes.input}\r\n                                    defaultValue={initialValues.lastName != null ? initialValues.lastName : null}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.inputs}>\r\n                                <TextField\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    label=\"Email *\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"text\"\r\n                                    error={errors.email && touched.email}\r\n                                    helperText={touched.email ? errors.email : null}\r\n                                    className={classes.input}\r\n                                    defaultValue={initialValues.email}\r\n                                />\r\n                                {modeRegister || initialValues.email !== values.email ?\r\n                                    <TextField\r\n                                        id=\"emailRepeat\"\r\n                                        name=\"emailRepeat\"\r\n                                        label=\"Confirm email *\"\r\n                                        variant=\"outlined\"\r\n                                        type=\"text\"\r\n                                        error={errors.emailRepeat && touched.emailRepeat}\r\n                                        helperText={touched.emailRepeat ? errors.emailRepeat : null}\r\n                                        className={classes.input}\r\n                                        defaultValue={initialValues.emailRepeat}\r\n                                    />\r\n                                    : null}\r\n                            </div>\r\n                            {modeRegister ?\r\n                                <div className={classes.inputs}>\r\n                                    <TextField\r\n                                        id=\"password\"\r\n                                        name=\"password\"\r\n                                        label={modeRegister ? \"Password *\" : \"New password\"}\r\n                                        variant=\"outlined\"\r\n                                        type={typePassword}\r\n                                        error={errors.password && touched.password}\r\n                                        helperText={touched.password ? errors.password : null}\r\n                                        className={classes.input}\r\n                                        defaultValue={initialValues.password}\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"passwordRepeat\"\r\n                                        name=\"passwordRepeat\"\r\n                                        label={modeRegister ? \"Confirm password *\" : \"Confirm new password*\"}\r\n                                        variant=\"outlined\"\r\n                                        type={typePassword}\r\n                                        error={errors.passwordRepeat && touched.passwordRepeat}\r\n                                        helperText={touched.passwordRepeat ? errors.passwordRepeat : null}\r\n                                        className={classes.input}\r\n                                    />\r\n                                </div>\r\n                                : null}\r\n                            <div className={classes.footer}>\r\n                                <Typography />\r\n                                <Switch\r\n                                    className={classes.switch}\r\n                                    checked={showPassword}\r\n                                    onChange={() => {\r\n                                        setShowPassword(!showPassword);\r\n                                    }}\r\n                                    color=\"primary\"\r\n                                />\r\n                                {textShowPassword}\r\n                                <Typography />\r\n                                <OwnButton\r\n                                    typeOfButton={'submit'}\r\n                                    text={modeRegister ? \"Sign up\" : \"Update\"}\r\n                                    disabled={!modeRegister ? !dirty : false}\r\n                                />\r\n                                <Typography className={classes.helperText}>\r\n                                    {modeRegister &&\r\n                                        <div className={classes.footer}>\r\n                                            <p> Have you created an account yet?</p>\r\n                                            <Link className={classes.link} to=\"/login\">Sign in now</Link>\r\n                                        </div>\r\n                                    }\r\n                                </Typography>\r\n                            </div>\r\n                        </form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </Paper>\r\n    );\r\n};\r\nexport default UserForm;"]},"metadata":{},"sourceType":"module"}
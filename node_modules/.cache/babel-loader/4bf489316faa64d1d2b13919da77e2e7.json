{"ast":null,"code":"var _jsxFileName = \"/Users/ivogurtner/OneDrive - TBZ/M326/Baenkli-App-Frontend/src/components/organisms/cardForm/cardForm.js\";\nimport React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../molecules/navbar/navbar\";\nimport Grid from '@material-ui/core/Grid';\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"@material-ui/core\";\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\n\nconst CardForm = ({\n  bench,\n  setBench\n}) => {\n  console.log('BENCH ', bench);\n  const i = bench;\n  const [hasMeadow, setHasMeadow] = useState(false);\n  const [isLocationOnWater, setIsLocationOnWater] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n\n  const handleChangeMeadow = () => {\n    setHasMeadow(!hasMeadow);\n  };\n\n  const handleChangeLocationOnwater = () => {\n    setIsLocationOnWater(!isLocationOnWater);\n  };\n\n  const regexName = /^[a-zA-Z äöüéèàÜÖÄÉÈÀ,+-]+$/;\n  const validationName = \"Please enter only letters\";\n  const validationMax = \"Max. 250 characters\";\n  const validationMinNumber = \"Minimum: 0\";\n  const validationMaxNumber = \"Maximum: 5\";\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().trim().matches(regexName, validationName).required(\"Title required\").max(250, validationMax),\n    description: Yup.string().trim().max(250, validationMax),\n    amountBenches: Yup.number().min(0, validationMinNumber),\n    amountFirePlaces: Yup.number().min(0, validationMinNumber),\n    amountTrashCans: Yup.number().min(0, validationMinNumber),\n    distanceToNextShop: Yup.string().trim().max(250, validationMax),\n    quiet: Yup.number().min(0, validationMinNumber).max(5, validationMaxNumber),\n    directions: Yup.string().trim().max(250, validationMax)\n  });\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: bench === {} ? {} : bench,\n    enableReinitialize: true,\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setSubmitting(true);\n      const dto = { ...bench,\n        ...values\n      };\n\n      if (bench.id !== 'new') {\n        axios.put(`http://localhost:8080/benches/${bench.id}`, dto).then(response => {\n          setSubmitting(false);\n          setBench(response.data);\n        }).catch(error => {\n          setSubmitting(false);\n          console.error('Error in Put', error);\n        });\n      } else {\n        delete dto.id;\n        axios.post(`http://localhost:8080/benches`, dto).then(response => {\n          setSubmitting(false);\n          setBench(response.data);\n        }).catch(error => {\n          setSubmitting(false);\n          console.error('Error in Post', error);\n        });\n      }\n\n      window.location.assign('/');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, ({\n    handleSubmit,\n    errors,\n    touched,\n    handleChange,\n    initialValues\n  }) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\",\n      onSubmit: handleSubmit,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"title\",\n      label: \"Title\",\n      error: errors.title && touched.name,\n      helperText: touched.title ? errors.title : null,\n      defaultValue: initialValues.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"description\",\n      label: \"Description\",\n      multiline: true,\n      error: errors.description && touched.description,\n      helperText: touched.description ? errors.description : null,\n      defaultValue: initialValues.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"latitude\",\n      label: \"Latitude\",\n      error: errors.latitude && touched.latitude,\n      helperText: touched.latitude ? errors.latitude : null,\n      defaultValue: initialValues.latitude,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"longitude\",\n      label: \"Longitude\",\n      error: errors.longitude && touched.longitude,\n      helperText: touched.longitude ? errors.longitude : null,\n      defaultValue: initialValues.longitude,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      name: \"amountBenches\",\n      label: \"Amount benches\",\n      type: \"number\",\n      error: errors.amountBenches && touched.amountBenches,\n      helperText: touched.amountBenches ? errors.amountBenches : null,\n      defaultValue: initialValues.amountBenches,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      name: \"amountFirePlaces\",\n      label: \"Amount fire places\",\n      type: \"number\",\n      error: errors.amountFirePlaces && touched.amountFirePlaces,\n      helperText: touched.amountFirePlaces ? errors.amountFirePlaces : null,\n      defaultValue: initialValues.amountFirePlaces,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      name: \"amountTrashCans\",\n      label: \"Amount trash cans\",\n      type: \"number\",\n      error: errors.amountTrashCans && touched.amountTrashCans,\n      helperText: touched.amountTrashCans ? errors.amountTrashCans : null,\n      defaultValue: initialValues.amountTrashCans,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"distanceToNextShop\",\n      label: \"Distance to next shop\",\n      error: errors.distanceToNextShop && touched.distanceToNextShop,\n      helperText: touched.distanceToNextShop ? errors.distanceToNextShop : null,\n      defaultValue: initialValues.distanceToNextShop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      name: \"quiet\",\n      label: \"Quiet\",\n      type: \"number\",\n      error: errors.quiet && touched.quiet,\n      helperText: touched.quiet ? errors.quiet : null,\n      defaultValue: initialValues.quiet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      name: \"directions\",\n      label: \"Directions\",\n      multiline: true,\n      error: errors.directions && touched.directions,\n      helperText: touched.directions ? errors.directions : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 33\n      }\n    }, \"Are there any meadows?\", /*#__PURE__*/React.createElement(Switch, {\n      checked: hasMeadow,\n      onChange: handleChangeMeadow,\n      color: \"primary\",\n      name: \"hasMeadow\",\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      defaultValue: initialValues.hasMeadow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 33\n      }\n    }, \"Is location on any water?\", /*#__PURE__*/React.createElement(Switch, {\n      checked: isLocationOnWater,\n      onChange: handleChangeLocationOnwater,\n      color: \"primary\",\n      name: \"isLocationOnWater\",\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      defaultValue: initialValues.isLocationOnWater,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      disabled: submitting,\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 37\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 37\n      }\n    }, \"Reset\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 33\n      }\n    }))));\n  });\n};\n\nexport default CardForm; // initialValues={{\n//     id: bench.id,\n//     title: bench.title,\n//     description: bench.description,\n//     latitude: bench.latitude,\n//     longitude: bench.longitude,\n//     amountBenches: bench.amountBenches,\n//     amountFirePlaces: bench.amountFirePlaces,\n//     amountTrashCans: bench.amountTrashCans,\n//     distanceToNextShop: bench.distanceToNextShop,\n//     quiet: bench.quiet,\n//     directions: bench.directions,\n//     hasMeadow: bench.hasMeadow,\n//     isLocationOnWater: bench.isLocationOnWater\n// }}","map":{"version":3,"sources":["/Users/ivogurtner/OneDrive - TBZ/M326/Baenkli-App-Frontend/src/components/organisms/cardForm/cardForm.js"],"names":["React","Fragment","useState","axios","Navbar","Grid","Formik","Yup","TextField","Switch","Button","CardForm","bench","setBench","console","log","i","hasMeadow","setHasMeadow","isLocationOnWater","setIsLocationOnWater","submitting","setSubmitting","handleChangeMeadow","handleChangeLocationOnwater","regexName","validationName","validationMax","validationMinNumber","validationMaxNumber","validationSchema","object","shape","title","string","trim","matches","required","max","description","amountBenches","number","min","amountFirePlaces","amountTrashCans","distanceToNextShop","quiet","directions","values","dto","id","put","then","response","data","catch","error","post","window","location","assign","handleSubmit","errors","touched","handleChange","initialValues","name","latitude","longitude"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../molecules/navbar/navbar\"\nimport Grid from '@material-ui/core/Grid';\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"@material-ui/core\";\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\n\nconst CardForm = ({ bench, setBench }) => {\n\n    console.log('BENCH ', bench)\n\n    const i = bench;\n\n    const [hasMeadow, setHasMeadow] = useState(false);\n    const [isLocationOnWater, setIsLocationOnWater] = useState(false);\n    const [submitting, setSubmitting] = useState(false);\n\n    const handleChangeMeadow = () => {\n        setHasMeadow(!hasMeadow);\n    }\n\n    const handleChangeLocationOnwater = () => {\n        setIsLocationOnWater(!isLocationOnWater);\n    }\n\n    const regexName = /^[a-zA-Z äöüéèàÜÖÄÉÈÀ,+-]+$/;\n    const validationName = \"Please enter only letters\";\n    const validationMax = \"Max. 250 characters\"\n    const validationMinNumber = \"Minimum: 0\";\n    const validationMaxNumber = \"Maximum: 5\";\n\n    const validationSchema = Yup.object().shape({\n        title: Yup.string()\n            .trim()\n            .matches(regexName, validationName)\n            .required(\"Title required\")\n            .max(250, validationMax),\n        description: Yup.string()\n            .trim()\n            .max(250, validationMax),\n        amountBenches: Yup.number()\n            .min(0, validationMinNumber),\n        amountFirePlaces: Yup.number()\n            .min(0, validationMinNumber),\n        amountTrashCans: Yup.number()\n            .min(0, validationMinNumber),\n        distanceToNextShop: Yup.string()\n            .trim()\n            .max(250, validationMax),\n        quiet: Yup.number()\n            .min(0, validationMinNumber)\n            .max(5, validationMaxNumber),\n        directions: Yup.string()\n            .trim()\n            .max(250, validationMax)\n    });\n\n    return (\n        <Formik\n            initialValues={bench === {} ? {} : bench}\n            enableReinitialize={true}\n            validationSchema={validationSchema}\n            onSubmit={values => {\n                setSubmitting(true);\n                const dto = { ...bench, ...values };\n                if (bench.id !== 'new') {\n                    axios.put(`http://localhost:8080/benches/${bench.id}`, dto)\n                        .then(response => {\n                            setSubmitting(false);\n                            setBench(response.data)\n                        })\n                        .catch(error => {\n                            setSubmitting(false);\n                            console.error('Error in Put', error);\n                        });\n                } else {\n                    delete dto.id;\n                    axios.post(`http://localhost:8080/benches`, dto)\n                        .then(response => {\n                            setSubmitting(false);\n                            setBench(response.data);\n                        })\n                        .catch(error => {\n                            setSubmitting(false);\n                            console.error('Error in Post', error);\n                        })\n                }\n                window.location.assign('/');\n            }}\n        >\n            {({ handleSubmit, errors, touched, handleChange, initialValues }) => {\n                return (\n                    <Fragment>\n                        <Navbar />\n                        <form method=\"post\" onSubmit={handleSubmit} onChange={handleChange}>\n                            <Grid\n                                container\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                spacing={3}\n                            >\n                                <Grid item xs={4} />\n                                <Grid item xs={4}>\n                                    <TextField\n                                        id=\"standard-basic\"\n                                        name=\"title\"\n                                        label=\"Title\"\n                                        error={errors.title && touched.name}\n                                        helperText={touched.title ? errors.title : null}\n                                        defaultValue={initialValues.title}\n                                    />\n                                </Grid>\n                                <Grid item xs={4} />\n\n                                <Grid item xs={4} />\n                                <Grid item xs={4}>\n                                    <TextField\n                                        id=\"standard-basic\"\n                                        name=\"description\"\n                                        label=\"Description\"\n                                        multiline\n                                        error={errors.description && touched.description}\n                                        helperText={touched.description ? errors.description : null}\n                                        defaultValue={initialValues.description}\n                                    />\n                                </Grid>\n                                <Grid item xs={4} />\n\n                                <Grid item xs={4} />\n                                <Grid item xs={4}>\n                                    <TextField\n                                        id=\"standard-basic\"\n                                        name=\"latitude\"\n                                        label=\"Latitude\"\n                                        error={errors.latitude && touched.latitude}\n                                        helperText={touched.latitude ? errors.latitude : null}\n                                        defaultValue={initialValues.latitude}\n                                    />\n                                </Grid>\n                                <Grid item xs={4} />\n\n                                <Grid item xs={4} />\n                                <Grid item xs={4}>\n                                    <TextField\n                                        id=\"standard-basic\"\n                                        name=\"longitude\"\n                                        label=\"Longitude\"\n                                        error={errors.longitude && touched.longitude}\n                                        helperText={touched.longitude ? errors.longitude : null}\n                                        defaultValue={initialValues.longitude}\n                                    />\n                                </Grid>\n                                <Grid item xs={4} />\n\n                                <Grid item xs={4} />\n                                <Grid item xs={4}>\n                                    <TextField\n                                        id=\"standard-number\"\n                                        name=\"amountBenches\"\n                                        label=\"Amount benches\"\n                                        type=\"number\"\n                                        error={errors.amountBenches && touched.amountBenches}\n                                        helperText={touched.amountBenches ? errors.amountBenches : null}                                        \n                                        defaultValue={initialValues.amountBenches}\n                                    />\n                                </Grid>\n                                <Grid item xs={4} />\n\n                                <Grid item xs={4} />\n                                <Grid item xs={4}>\n                                    <TextField\n                                        id=\"standard-number\"\n                                        name=\"amountFirePlaces\"\n                                        label=\"Amount fire places\"\n                                        type=\"number\"\n                                        error={errors.amountFirePlaces && touched.amountFirePlaces}\n                                        helperText={touched.amountFirePlaces ? errors.amountFirePlaces : null}\n                                        defaultValue={initialValues.amountFirePlaces}\n                                    />\n                                </Grid>\n                                <Grid item xs={4} />\n\n                                <Grid item xs={4} />\n                                <Grid item xs={4}>\n                                    <TextField\n                                        id=\"standard-number\"\n                                        name=\"amountTrashCans\"\n                                        label=\"Amount trash cans\"\n                                        type=\"number\"\n                                        error={errors.amountTrashCans && touched.amountTrashCans}\n                                        helperText={touched.amountTrashCans ? errors.amountTrashCans : null}\n                                        defaultValue={initialValues.amountTrashCans}\n                                    />\n                                </Grid>\n                                <Grid item xs={4} />\n\n                                <Grid item xs={4} />\n                                <Grid item xs={4}>\n                                    <TextField\n                                        id=\"standard-basic\"\n                                        name=\"distanceToNextShop\"\n                                        label=\"Distance to next shop\"\n                                        error={errors.distanceToNextShop && touched.distanceToNextShop}\n                                        helperText={touched.distanceToNextShop ? errors.distanceToNextShop : null}\n                                        defaultValue={initialValues.distanceToNextShop}\n                                    />\n                                </Grid>\n                                <Grid item xs={4} />\n\n                                <Grid item xs={4} />\n                                <Grid item xs={4}>\n                                    <TextField\n                                        id=\"standard-number\"\n                                        name=\"quiet\"\n                                        label=\"Quiet\"\n                                        type=\"number\"\n                                        error={errors.quiet && touched.quiet}\n                                        helperText={touched.quiet ? errors.quiet : null}\n                                        defaultValue={initialValues.quiet}\n                                    />\n                                </Grid>\n                                <Grid item xs={4} />\n\n                                <Grid item xs={4} />\n                                <Grid item xs={4}>\n                                    <TextField\n                                        id=\"standard-basic\"\n                                        name=\"directions\"\n                                        label=\"Directions\"\n                                        multiline\n                                        error={errors.directions && touched.directions}\n                                        helperText={touched.directions ? errors.directions : null}\n                                    />\n                                </Grid>\n                                <Grid item xs={4} />\n\n                                <Grid item xs={4} />\n                                <Grid item xs={4}>\n                                    Are there any meadows?\n                                    <Switch\n                                        checked={hasMeadow}\n                                        onChange={handleChangeMeadow}\n                                        color=\"primary\"\n                                        name=\"hasMeadow\"\n                                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                                        defaultValue={initialValues.hasMeadow}\n                                    />\n                                </Grid>\n                                <Grid item xs={4} />\n\n                                <Grid item xs={4} />\n                                <Grid item xs={4}>\n                                    Is location on any water?\n                                    <Switch\n                                        checked={isLocationOnWater}\n                                        onChange={handleChangeLocationOnwater}\n                                        color=\"primary\"\n                                        name=\"isLocationOnWater\"\n                                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                                        defaultValue={initialValues.isLocationOnWater}\n                                    />\n                                </Grid>\n                                <Grid item xs={4} />\n\n                                <Grid item xs={4} />\n                                <Grid item xs={2}>\n                                    <Button variant=\"contained\" disabled={submitting} color=\"primary\" type=\"submit\">\n                                        Submit\n                                       </Button>\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <Button variant=\"contained\" color=\"secondary\" type=\"reset\">\n                                        Reset\n                                       </Button>\n                                </Grid>\n                                <Grid item xs={4} />\n\n                            </Grid>\n                        </form>\n                    </Fragment>\n                )\n            }}\n        </Formik>\n    )\n}\n\nexport default CardForm;\n\n// initialValues={{\n//     id: bench.id,\n//     title: bench.title,\n//     description: bench.description,\n//     latitude: bench.latitude,\n//     longitude: bench.longitude,\n//     amountBenches: bench.amountBenches,\n//     amountFirePlaces: bench.amountFirePlaces,\n//     amountTrashCans: bench.amountTrashCans,\n//     distanceToNextShop: bench.distanceToNextShop,\n//     quiet: bench.quiet,\n//     directions: bench.directions,\n//     hasMeadow: bench.hasMeadow,\n//     isLocationOnWater: bench.isLocationOnWater\n// }}"]},"metadata":{},"sourceType":"module"}
[{"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\index.js":"1","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\App.js":"2","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\serviceWorker.js":"3","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\other\\context\\SessionHandlerContext.js":"4","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\service\\UserService.js":"5","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\config\\Api.js":"6","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\other\\router\\router.js":"7","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\pages\\registerPage\\RegisterPage.js":"8","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\pages\\mapsPage\\MapsPage.js":"9","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\pages\\loginPage\\LoginPage.js":"10","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\pages\\homePage\\HomePage.js":"11","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\pages\\cardPage\\CardPage.js":"12","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\pages\\newBenchPage\\NewBenchPage.js":"13","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\pages\\favoritePage\\FavoritePage.js":"14","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\pages\\accountPage\\AccountPage.js":"15","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\service\\CommentService.js":"16","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\service\\BenchService.js":"17","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\molecules\\bottomNavbar\\BottomNavbar.js":"18","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\molecules\\postCard\\PostCard.js":"19","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\molecules\\navbar\\Navbar.js":"20","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\organisms\\googleMaps\\GoogleMaps.js":"21","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\organisms\\userForm\\UserForm.js":"22","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\organisms\\commentModal\\CommentModal.js":"23","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\organisms\\loginForm\\LoginForm.js":"24","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\organisms\\cardForm\\CardForm.js":"25","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\organisms\\ownTable\\OwnTable.js":"26","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\organisms\\personalBenchManagment\\PersonalBenchManagment.js":"27","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\atoms\\rating\\Rating.js":"28","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\other\\validation\\CardValidationSchema.js":"29","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\molecules\\divider\\Divider.js":"30","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\other\\validation\\LoginValidationSchema.js":"31","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\atoms\\ownButton\\OwnButton.js":"32","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\other\\validation\\CreateUserValidationSchema.js":"33","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\other\\validation\\UpdateUserValidationSchema.js":"34","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\atoms\\title\\Title.js":"35","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\molecules\\commentField\\CommentField.js":"36","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\molecules\\dialog\\Dialog.js":"37","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\molecules\\searchField\\SearchField.js":"38","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\atoms\\customizedRating\\CustomizedRating.js":"39","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\other\\secureRouter\\SecureRouter.js":"40"},{"size":614,"mtime":1611597819701,"results":"41","hashOfConfig":"42"},{"size":335,"mtime":1611598542093,"results":"43","hashOfConfig":"42"},{"size":5227,"mtime":1611597819721,"results":"44","hashOfConfig":"42"},{"size":2385,"mtime":1611663702713,"results":"45","hashOfConfig":"42"},{"size":530,"mtime":1611597819720,"results":"46","hashOfConfig":"42"},{"size":975,"mtime":1611597819700,"results":"47","hashOfConfig":"42"},{"size":1232,"mtime":1611661053638,"results":"48","hashOfConfig":"42"},{"size":1058,"mtime":1611597819699,"results":"49","hashOfConfig":"42"},{"size":589,"mtime":1611597819697,"results":"50","hashOfConfig":"42"},{"size":720,"mtime":1611597819696,"results":"51","hashOfConfig":"42"},{"size":2369,"mtime":1611597819695,"results":"52","hashOfConfig":"42"},{"size":7122,"mtime":1611662872956,"results":"53","hashOfConfig":"42"},{"size":872,"mtime":1611597819698,"results":"54","hashOfConfig":"42"},{"size":2206,"mtime":1611597819694,"results":"55","hashOfConfig":"42"},{"size":12339,"mtime":1611663879975,"results":"56","hashOfConfig":"42"},{"size":565,"mtime":1611597819720,"results":"57","hashOfConfig":"42"},{"size":665,"mtime":1611597819719,"results":"58","hashOfConfig":"42"},{"size":1814,"mtime":1611597819674,"results":"59","hashOfConfig":"42"},{"size":4536,"mtime":1611597819679,"results":"60","hashOfConfig":"42"},{"size":3460,"mtime":1611597819678,"results":"61","hashOfConfig":"42"},{"size":863,"mtime":1611597819683,"results":"62","hashOfConfig":"42"},{"size":11451,"mtime":1611597819687,"results":"63","hashOfConfig":"42"},{"size":4586,"mtime":1611597819682,"results":"64","hashOfConfig":"42"},{"size":4942,"mtime":1611597819683,"results":"65","hashOfConfig":"42"},{"size":13620,"mtime":1611597819681,"results":"66","hashOfConfig":"42"},{"size":7709,"mtime":1611597819685,"results":"67","hashOfConfig":"42"},{"size":6535,"mtime":1611597819686,"results":"68","hashOfConfig":"42"},{"size":729,"mtime":1611597819672,"results":"69","hashOfConfig":"42"},{"size":1803,"mtime":1611597819690,"results":"70","hashOfConfig":"42"},{"size":4383,"mtime":1611597819677,"results":"71","hashOfConfig":"42"},{"size":308,"mtime":1611597819691,"results":"72","hashOfConfig":"42"},{"size":2093,"mtime":1611597819671,"results":"73","hashOfConfig":"42"},{"size":1860,"mtime":1611597819691,"results":"74","hashOfConfig":"42"},{"size":1216,"mtime":1611597819691,"results":"75","hashOfConfig":"42"},{"size":223,"mtime":1611597819672,"results":"76","hashOfConfig":"42"},{"size":3370,"mtime":1611597819675,"results":"77","hashOfConfig":"42"},{"size":2084,"mtime":1611597819676,"results":"78","hashOfConfig":"42"},{"size":1423,"mtime":1611597819679,"results":"79","hashOfConfig":"42"},{"size":1001,"mtime":1611597819670,"results":"80","hashOfConfig":"42"},{"size":1487,"mtime":1611661240206,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"16lmbxb",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"84"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"84"},"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\index.js",[],["175","176"],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\App.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\serviceWorker.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\other\\context\\SessionHandlerContext.js",["177","178"],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\service\\UserService.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\config\\Api.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\other\\router\\router.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\pages\\registerPage\\RegisterPage.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\pages\\mapsPage\\MapsPage.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\pages\\loginPage\\LoginPage.js",["179","180"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport Navbar from \"../../molecules/navbar/Navbar\"\r\nimport { makeStyles, Grid } from '@material-ui/core';\r\nimport LoginForm from '../../organisms/loginForm/LoginForm'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: \"10%\",\r\n  },\r\n}));\r\n\r\nconst LoginPage = () => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <Grid\r\n        container\r\n        className={classes.root}\r\n      >\r\n        <Grid item xs={2}></Grid>\r\n        <Grid item xs={8}>\r\n          <LoginForm />\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\pages\\homePage\\HomePage.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\pages\\cardPage\\CardPage.js",["181","182","183","184"],"import React, { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Navbar from \"../../molecules/navbar/Navbar\";\r\nimport PostCard from \"../../molecules/postCard/PostCard\";\r\nimport CommentModal from \"../../organisms/commentModal/CommentModal\";\r\nimport CardForm from \"../../organisms/cardForm/CardForm\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Rating from \"../../atoms/rating/Rating\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SessionHandlerContext from '../../other/context/SessionHandlerContext';\r\nimport CommentService from \"../../../service/CommentService\";\r\nimport BenchService from \"../../../service/BenchService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n        marginBottom: \"200px\"\r\n    },\r\n}));\r\n\r\nconst CardPage = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const { user } = useContext(SessionHandlerContext);\r\n\r\n    const [ownBenches, setOwnBenches] = useState([]);\r\n\r\n\r\n    const postCardId = props.match.params.id;\r\n    const [editing, setEditing] = useState(false);\r\n    const [bench, setBench] = useState([]);\r\n    const [comments, setComments] = useState([]);\r\n    const [readOnlyRating, setReadOnlyRating] = useState(false);\r\n\r\n    function randomImg(width, height, key) {\r\n        var source = 'https://source.unsplash.com/random/' + width + 'x' + height + '/?bench,park' + key;\r\n        return source;\r\n    }\r\n\r\n    function calRating(ratingArray) {\r\n        if (ratingArray === undefined) {\r\n            return 0;\r\n        } else {\r\n            console.log(bench.ratings)\r\n            var total = 0;\r\n            var length = 0;\r\n            console.log(\"rating,\", ratingArray)\r\n            length = ratingArray.length;\r\n            ratingArray.map(r => total += r.rating);\r\n\r\n            let result = total / length;\r\n\r\n            return Math.round(result * 2) / 2;\r\n        }\r\n\r\n    }\r\n\r\n    function getOneBench(id) {\r\n        if (id !== undefined) {\r\n            axios.get(`http://localhost:8080/benches/${id}`)\r\n                .then((res) => {\r\n                    setBench(res.data);\r\n                })\r\n        }\r\n    }\r\n\r\n    function isBenchOwnBench(){\r\n        for(let ownbench of ownBenches){\r\n            if(ownbench.id === bench.id){\r\n                return true\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const getOwnBenches = (id) => {\r\n        BenchService.getOwnBenches(id)\r\n            .then(res => {\r\n                setOwnBenches(res.data);\r\n            })\r\n            .catch(err => {\r\n                console.error('Error in AccountPage: ', err);\r\n            });\r\n    }\r\n\r\n    function deleteBench(id) {\r\n        axios.delete(`http://localhost:8080/benches/${id}`)\r\n            .then(() => {\r\n                props.history.push(`/`);\r\n            })\r\n    }\r\n\r\n    function getComments(id) {\r\n        CommentService.getByBenchId(id)\r\n            .then((res) => {\r\n                setComments(res.data);\r\n                console.log(comments)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n        // .finally(() => {\r\n\r\n        // })\r\n    }\r\n\r\n    function postComment(dto) {\r\n        CommentService.create(dto)\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                getComments(postCardId);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n        // .finally(() => {\r\n\r\n        // })\r\n    }\r\n\r\n    function editBench() {\r\n        setEditing(true);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        getOneBench(postCardId);\r\n        getComments(postCardId);\r\n        getOwnBenches(user.id);\r\n        isBenchOwnBench();\r\n\r\n    }, []);\r\n\r\n    const [valueRating, setValueRating] = useState({});\r\n\r\n    function postRating(dtoObject) {\r\n        axios.post(`http://localhost:8080/ratings`, dtoObject)\r\n            .then(res => {\r\n                putBenchByRating(res.data);\r\n            })\r\n    }\r\n\r\n\r\n    function putBenchByRating(dtoRating) {\r\n        axios.put(`http://localhost:8080/benches/${bench.id}/rating/${dtoRating.id}`, bench)\r\n            .then(res => {\r\n                setBench(res.data);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Navbar />\r\n            {editing || postCardId === 'new' ?\r\n                <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\r\n                    <Grid item xs={4}>\r\n                        <CardForm bench={postCardId === 'new' ? { ...bench, id: 'new' } : bench} setBench={postCardId === 'new' ? () => { } : setBench} />\r\n                    </Grid>\r\n                </Grid>\r\n                :\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"align-star\"\r\n                >\r\n                    <Grid item >\r\n                        <PostCard\r\n                            id={postCardId}\r\n                            image={randomImg(500, 500, postCardId)}\r\n                            deleteButton={isBenchOwnBench() ? true : false}\r\n                            editButton={isBenchOwnBench() ? true : false}\r\n                            title={bench.title}\r\n                            averageQuiet={bench.quietness}\r\n                            averageRating={calRating(bench.ratings)}\r\n                            amountBenches={bench.amountBenches}\r\n                            amountFirePlaces={bench.amountFirePlaces}\r\n                            amountTrashCans={bench.amountTrashCans}\r\n                            distanceToNextShop={bench.distanceToNextShop}\r\n                            directions={bench.directions}\r\n                            readOnly={true}\r\n                            deleteFunction={() => deleteBench(postCardId)}\r\n                            editFunction={() => editBench(postCardId)}\r\n                            hasMeadow={bench.hasMeadow}\r\n                            locationOnWater={bench.locationOnWater}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <CommentModal\r\n                            usernameCurrentUser={user.username}\r\n                            firstNameCurrentUser={user.firstName}\r\n                            lastNameCurrentUser={user.lastName}\r\n                            comments={comments}\r\n                            valueRating={valueRating}\r\n                            readOnlyRating={readOnlyRating}\r\n                            setValueRating={setValueRating}\r\n                            postRating={postRating}\r\n                            setReadOnlyRating={setReadOnlyRating}\r\n                            bench={bench}\r\n                            postComment={postComment}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default CardPage;\r\n","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\pages\\newBenchPage\\NewBenchPage.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\pages\\favoritePage\\FavoritePage.js",["185"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"../../molecules/navbar/Navbar\"\r\nimport BottomNavbar from \"../../molecules/bottomNavbar/BottomNavbar\"\r\nimport PostCard from \"../../molecules/postCard/PostCard\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport BenchService from \"../../../service/BenchService\";\r\n\r\nconst FavoritePage = () => {\r\n\r\n  const [benches, setBenches] = useState([]);\r\n\r\n  function getAllBenches() {\r\n    BenchService.getAll()\r\n      .then(res => {\r\n        const data = res.data;\r\n        setBenches(data);\r\n      })\r\n      .catch(err => {\r\n        console.error('Error in HomePage.js ', err);\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Update the document title using the browser API\r\n    getAllBenches();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  function calcAverage(array, isRating) {\r\n    var total = 0;\r\n    var length = 0;\r\n    length = array.length;\r\n    if (isRating) {\r\n      array.map(r => total += r.rating);\r\n    } else {\r\n      array.map(q => total += q.quiet) ;\r\n    }\r\n\r\n    let result = total / length;\r\n\r\n    return Math.round(result * 2) / 2;\r\n  }\r\n\r\n  function randomImg(width, height, key) {\r\n    var source = 'https://source.unsplash.com/random/' + width + 'x' + height + '/?bench,park' + key;\r\n    return source;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <Grid container >\r\n        {benches.map((obj, i) => (\r\n          <Grid item xs={4} key={i}>\r\n            <PostCard\r\n              id={obj.id}\r\n              image={randomImg(500, 500, obj.id)}\r\n              title={obj.title}\r\n              description={obj.description}\r\n              averageQuiet={obj.quietness}\r\n              averageRating={calcAverage(obj.ratings, true)}\r\n              amountBenches={obj.amountBenches}\r\n              amountFirePlaces={obj.amountFirePlaces}\r\n              amountTrashCans={obj.amountTrashCans}\r\n              distanceToNextShop={obj.distanceToNextShop}\r\n              directions={obj.directions}\r\n              readOnly={true}\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <BottomNavbar />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FavoritePage;","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\pages\\accountPage\\AccountPage.js",["186","187","188"],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\service\\CommentService.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\service\\BenchService.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\molecules\\bottomNavbar\\BottomNavbar.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\molecules\\postCard\\PostCard.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\molecules\\navbar\\Navbar.js",["189","190","191","192","193"],"import React, { Fragment, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Avatar } from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PlaceIcon from '@material-ui/icons/Place';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport clsx from 'clsx';\r\nimport Logo from './../../../logo.png'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport SessionHandlerContext from '../../other/context/SessionHandlerContext';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // flexGrow: 1,\r\n    padding: \"5px\",\r\n    marginBottom: \"50px\",\r\n    background: \"#93CB56\",\r\n    color: \"#355A20\"\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#355A20\"\r\n  }\r\n}));\r\n\r\n\r\nconst Navbar = props => {\r\n\r\n  const { user, logout } = useContext(SessionHandlerContext);\r\n\r\n  const classes = useStyles();\r\n\r\n  const goToLogin = () => {\r\n    props.history.push(`/login`);\r\n  };\r\n\r\n  const goToHomePage = () => {\r\n    props.history.push(`/`);\r\n  };\r\n\r\n  const goToMaps = () => {\r\n    props.history.push(`/maps`);\r\n  };\r\n\r\n  const goToAccount = () => {\r\n    props.history.push(`/account`)\r\n  }\r\n\r\n  const goToFavorites = () => {\r\n    props.history.push(`/favorites`);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" className={clsx(classes.root)}>\r\n        <Toolbar>\r\n          <Button\r\n            onClick={goToHomePage}\r\n            title={\"Go to home page\"}\r\n          >\r\n            <img src={Logo} alt={\"Brand bench app\"} width={'100px'} />\r\n          </Button>\r\n          <IconButton\r\n            onClick={goToMaps}\r\n            title={\"Go to map overview\"}\r\n          >\r\n            <PlaceIcon />\r\n          </IconButton>\r\n          {user == null ?\r\n            <IconButton\r\n              color=\"inherit\"\r\n              onClick={goToLogin}\r\n              edge=\"end\"\r\n              title={\"Get signed in\"}\r\n            >\r\n              <PersonIcon />\r\n            </IconButton>\r\n            :\r\n            <div>\r\n              <IconButton\r\n                onClick={goToAccount}\r\n                title={\"My account - \" + user.firstName + \" \" + user.lastName}\r\n              >\r\n                <Avatar className={classes.avatar}>\r\n                  {user.firstName.substring(0, 1).toUpperCase() + user.lastName.substring(0, 1).toUpperCase()}\r\n                </Avatar>\r\n              </IconButton>\r\n              <IconButton\r\n                onClick={() => logout()}\r\n                title={\"Get logged out\"}\r\n              >\r\n                <ExitToAppIcon/>\r\n              </IconButton>\r\n              <IconButton\r\n                onClick={() => goToFavorites()}\r\n                title={\"Favoritelist\"}\r\n              >\r\n                <FavoriteIcon/>\r\n              </IconButton>\r\n            </div>\r\n          }\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Navbar);\r\n","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\organisms\\googleMaps\\GoogleMaps.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\organisms\\userForm\\UserForm.js",["194","195"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles, TextField, Typography, Button, Switch, Paper, Container } from \"@material-ui/core\";\r\nimport { Formik } from \"formik\";\r\nimport { CreateUserValidationSchema } from \"../../other/validation/CreateUserValidationSchema\";\r\nimport { UpdateUserValidationSchema } from \"../../other/validation/UpdateUserValidationSchema\";\r\nimport UserService from \"../../../service/UserService\";\r\nimport SessionHandlerContext from \"../../other/context/SessionHandlerContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport OwnButton from \"../../atoms/ownButton/OwnButton\";\r\nimport Title from \"../../atoms/title/Title\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // root: {\r\n    //     margin: \"5%\"\r\n    // },\r\n    paper: {\r\n        flexGrow: 1,\r\n        paddingTop: \"50px\",\r\n        paddingBottom: \"50px\",\r\n        background: \"#e6f3d8\",\r\n        color: \"black\",\r\n    },\r\n    title: {\r\n        textAlign: \"center\"\r\n    },\r\n    inputs: {\r\n        textAlign: \"center\",\r\n        margin: \"20px\",\r\n    },\r\n    input: {\r\n        marginLeft: \"20px\",\r\n    },\r\n    button: {\r\n        backgroundColor: \"#87C4F4\"\r\n    },\r\n    helperText: {\r\n        margin: \"10px\"\r\n    },\r\n    link: {\r\n        textDecoration: \"none\"\r\n    },\r\n    switch: {\r\n        margin: \"10px\"\r\n    },\r\n    footer: {\r\n        textAlign: \"center\",\r\n        margin: \"20px\"\r\n    },\r\n    submitButton: {\r\n        backgroundColor: \"#355A20\",\r\n        color: \"white\",\r\n        '&:hover': {\r\n            backgroundColor: \"#47792A\",\r\n            color: '#FFF'\r\n        }\r\n\r\n    },\r\n}));\r\n\r\nconst UserForm = ({ initialObject, modeRegister, modeDialog, updateFunc }) => {\r\n\r\n    const { setActiveUser } = useContext(SessionHandlerContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [typePassword, setTypePassword] = useState(\"password\");\r\n    const [textShowPassword, setTextShowPassword] = useState(\"Show password\")\r\n    const classes = useStyles();\r\n\r\n    const changePasswordType = () => {\r\n        setTypePassword(showPassword ? \"text\" : \"password\");\r\n        setTextShowPassword(!showPassword ? \"Show password\" : \"Hide password\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        changePasswordType();\r\n        // eslint-disable-next-line\r\n    }, [showPassword])\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Formik\r\n                initialValues={initialObject}\r\n                enableReinitialize\r\n                validationSchema={modeRegister ? CreateUserValidationSchema : UpdateUserValidationSchema}\r\n                onSubmit={(values) => {\r\n                    var dto = { ...initialObject, ...values };\r\n                    if (!modeRegister) {\r\n                        delete dto.password;\r\n                    }\r\n                    delete dto.emailRepeat;\r\n                    delete dto.passwordRepeat;\r\n                    if (modeRegister) {\r\n                        UserService.create(dto)\r\n                            .then(() => {\r\n                                history.push('/login')\r\n                            })\r\n                            .catch(err => {\r\n                                console.error('Error in UserForm: ', err);\r\n                            })\r\n                    } else if (modeDialog) {\r\n                        updateFunc(dto);\r\n                    }\r\n                    else {\r\n                        UserService.update(dto.id, dto)\r\n                            .then((res) => {\r\n                                setActiveUser(res.data);\r\n                            })\r\n                            .catch(err => {\r\n                                console.error('Error in UserForm: ', err);\r\n                            })\r\n                    }\r\n                }}\r\n            >\r\n                {({ handleSubmit, errors, touched, handleChange, initialValues, dirty, values }) => {\r\n                    return (\r\n                        <form method=\"post\" onSubmit={handleSubmit} onChange={handleChange}>\r\n                            <Title text={modeRegister ? \"Register\" : null} />\r\n                            <div className={classes.inputs}>\r\n                                <TextField\r\n                                    id=\"username\"\r\n                                    name=\"username\"\r\n                                    label=\"Username *\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"text\"\r\n                                    error={errors.username && touched.username}\r\n                                    helperText={touched.username ? errors.username : null}\r\n                                    className={classes.input}\r\n                                    defaultValue={initialValues.username != null ? initialValues.username : null}\r\n                                    style={{ width: \"400px\" }}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.inputs}>\r\n                                <TextField\r\n                                    id=\"firstName\"\r\n                                    name=\"firstName\"\r\n                                    label=\"First name *\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"text\"\r\n                                    error={errors.firstName && touched.firstName}\r\n                                    helperText={touched.firstName ? errors.firstName : null}\r\n                                    className={classes.input}\r\n                                    defaultValue={initialValues.firstName != null ? initialValues.firstName : null}\r\n                                />\r\n                                <TextField\r\n                                    id=\"lastName\"\r\n                                    name=\"lastName\"\r\n                                    label=\"Last name *\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"text\"\r\n                                    error={errors.lastName && touched.lastName}\r\n                                    helperText={touched.lastName ? errors.lastName : null}\r\n                                    className={classes.input}\r\n                                    defaultValue={initialValues.lastName != null ? initialValues.lastName : null}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.inputs}>\r\n                                <TextField\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    label=\"Email *\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"text\"\r\n                                    error={errors.email && touched.email}\r\n                                    helperText={touched.email ? errors.email : null}\r\n                                    className={classes.input}\r\n                                    defaultValue={initialValues.email}\r\n                                />\r\n                                {modeRegister || initialValues.email !== values.email ?\r\n                                    <TextField\r\n                                        id=\"emailRepeat\"\r\n                                        name=\"emailRepeat\"\r\n                                        label=\"Confirm email *\"\r\n                                        variant=\"outlined\"\r\n                                        type=\"text\"\r\n                                        error={errors.emailRepeat && touched.emailRepeat}\r\n                                        helperText={touched.emailRepeat ? errors.emailRepeat : null}\r\n                                        className={classes.input}\r\n                                        defaultValue={initialValues.emailRepeat}\r\n                                    />\r\n                                    : null}\r\n                            </div>\r\n                            {modeRegister ?\r\n                                <div className={classes.inputs}>\r\n                                    <TextField\r\n                                        id=\"password\"\r\n                                        name=\"password\"\r\n                                        label={modeRegister ? \"Password *\" : \"New password\"}\r\n                                        variant=\"outlined\"\r\n                                        type={typePassword}\r\n                                        error={errors.password && touched.password}\r\n                                        helperText={touched.password ? errors.password : null}\r\n                                        className={classes.input}\r\n                                        defaultValue={initialValues.password}\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"passwordRepeat\"\r\n                                        name=\"passwordRepeat\"\r\n                                        label={modeRegister ? \"Confirm password *\" : \"Confirm new password*\"}\r\n                                        variant=\"outlined\"\r\n                                        type={typePassword}\r\n                                        error={errors.passwordRepeat && touched.passwordRepeat}\r\n                                        helperText={touched.passwordRepeat ? errors.passwordRepeat : null}\r\n                                        className={classes.input}\r\n                                    />\r\n                                </div>\r\n                                : null}\r\n                            <div className={classes.footer}>\r\n                                <Typography />\r\n                                <Switch\r\n                                    className={classes.switch}\r\n                                    checked={showPassword}\r\n                                    onChange={() => {\r\n                                        setShowPassword(!showPassword);\r\n                                    }}\r\n                                    color=\"primary\"\r\n                                />\r\n                                {textShowPassword}\r\n                                <Typography />\r\n                                <OwnButton\r\n                                    typeOfButton={'submit'}\r\n                                    text={modeRegister ? \"Sign up\" : \"Update\"}\r\n                                    disabled={!modeRegister ? !dirty : false}\r\n                                />\r\n                                <Typography className={classes.helperText}>\r\n                                    {modeRegister &&\r\n                                        <div className={classes.footer}>\r\n                                            <p> Have you created an account yet?</p>\r\n                                            <Link className={classes.link} to=\"/login\">Sign in now</Link>\r\n                                        </div>\r\n                                    }\r\n                                </Typography>\r\n                            </div>\r\n                        </form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </Paper>\r\n    );\r\n};\r\nexport default UserForm;","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\organisms\\commentModal\\CommentModal.js",["196","197"],"import React, { Fragment, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CommentField from \"../../molecules/commentField/CommentField\";\r\nimport Rating from \"../../atoms/rating/Rating\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    list: {\r\n        width: '100%',\r\n        maxWidth: '36ch',\r\n        backgroundColor: theme.palette.background.paper,\r\n\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    paper: {\r\n        maxWidth: 345,\r\n        margin: \"50px\",\r\n    },\r\n    title: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    divider: {\r\n        margin: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst CommentModal = ({ comments, usernameCurrentUser, firstNameCurrentUser, lastNameCurrentUser, setValueRating, postRating, setReadOnlyRating, valueRating, readOnlyRating, bench, postComment }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"flex-start\"\r\n            >\r\n                <Grid item className={classes.title}>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"h6\">\r\n                        Rate this bench\r\n                        </Typography>\r\n                    <Rating\r\n                        name=\"rating-feedback\"\r\n                        precicion={0.5}\r\n                        value={valueRating}\r\n                        readOnly={readOnlyRating}\r\n                        onChange={(event, value) => {\r\n                            setValueRating(value);\r\n                            postRating({ rating: value });\r\n                            setReadOnlyRating(true);\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <CommentField\r\n                        username={usernameCurrentUser}\r\n                        firstName={firstNameCurrentUser}\r\n                        lastName={lastNameCurrentUser}\r\n                        bench={bench}\r\n                        postComment={postComment}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n\r\n                    <Typography className={classes.title} variant=\"h5\" gutterBottom>Comments</Typography>\r\n                </Grid>\r\n\r\n                <List className={classes.list} dense>\r\n                    {comments.map((obj, i) => (\r\n                        <Grid item>\r\n                            <ListItem alignItems=\"flex-start\">\r\n                                <ListItemAvatar>\r\n                                    <Avatar className={classes.avatar}>\r\n                                        {obj.user.firstName.substring(0, 1).toUpperCase() + obj.user.lastName.substring(0, 1).toUpperCase()}\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary={obj.user.username}\r\n                                    secondary={\r\n                                        <React.Fragment>\r\n                                            <Typography\r\n                                                component=\"span\"\r\n                                                variant=\"body2\"\r\n                                                className={classes.inline}\r\n                                                color=\"textPrimary\"\r\n                                            >\r\n                                            </Typography>\r\n                                            {obj.commentText}\r\n                                        </React.Fragment>\r\n                                    }\r\n                                />\r\n                            </ListItem>\r\n                            <Divider className={classes.divider} variant=\"inset\" component=\"li\" />\r\n                        </Grid>\r\n                    ))}\r\n\r\n\r\n                </List>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n\r\n}\r\nexport default CommentModal;","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\organisms\\loginForm\\LoginForm.js",["198","199"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Container, Paper, Switch, TextField, Button, makeStyles, withStyles } from \"@material-ui/core\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { LoginValidationSchema } from \"../../other/validation/LoginValidationSchema\";\r\nimport SessionHandlerContext from \"../../other/context/SessionHandlerContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OwnButton from \"../../atoms/ownButton/OwnButton\";\r\n\r\n/**\r\n * This is the login page\r\n */\r\n\r\n// TO DO: fix height between form elements in case of showing error messages\r\n\r\nconst LoginForm = props => {\r\n\r\n  const GreenSwitch = withStyles({\r\n    switchBase: {\r\n      color: \"#F3FAF0\",\r\n      '&$checked': {\r\n        color: \"#355A20\",\r\n      },\r\n      '&$checked + $track': {\r\n        backgroundColor: \"#355A20\",\r\n      },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n  })(Switch);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      flexGrow: 1,\r\n      paddingTop: \"50px\",\r\n      paddingBottom: \"50px\",\r\n      background: \"#e6f3d8\",\r\n      color: \"black\",\r\n    },\r\n    heading: {\r\n      color: \"#47792A\",\r\n      textAlign: \"center\"\r\n    },\r\n    submitButton: {\r\n      backgroundColor: \"#355A20\",\r\n      color: \"white\",\r\n      '&:hover': {\r\n        backgroundColor: \"#47792A\",\r\n        color: '#FFF'\r\n      }\r\n\r\n    },\r\n    resButton: {\r\n\r\n    },\r\n    formElement: {\r\n      margin: \"20px\",\r\n      textAlign: \"center\"\r\n    },\r\n    title: {\r\n      textAlign: \"center\"\r\n    },\r\n    switch: {\r\n\r\n    },\r\n    footer: {\r\n      textAlign: \"center\"\r\n    },\r\n    link: {\r\n      textDecoration: \"none\"\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const { login } = useContext(SessionHandlerContext);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [typePassword, setTypePassword] = useState(\"password\");\r\n  const [textPassword, setTextPassword] = useState(\"Show password\")\r\n\r\n  const changePasswordType = () => {\r\n    setTypePassword(showPassword ? \"text\" : \"password\");\r\n    setTextPassword(showPassword ? \"Hide password\" : \"Show password\")\r\n  };\r\n\r\n  useEffect(() => {\r\n    changePasswordType();\r\n    // eslint-disable-next-line\r\n  }, [showPassword])\r\n\r\n  return (\r\n      <Paper className={classes.paper}>\r\n        <Formik\r\n          initialValues={{\r\n            email: \"\",\r\n            password: \"\"\r\n          }}\r\n          enableReinitialize\r\n          validationSchema={LoginValidationSchema}\r\n          onSubmit={(values) => {\r\n            login(values);\r\n          }}\r\n        >\r\n          {({ handleSubmit, handleChange, errors, touched, isSubmitting }) => {\r\n            return (\r\n              <Form\r\n                name=\"login\"\r\n                method=\"post\"\r\n                onSubmit={handleSubmit}\r\n                onChange={handleChange}\r\n              >\r\n                <p className={classes.title}>\r\n                  <b>\r\n                    Login\r\n                  </b>\r\n                </p>\r\n                <div className={classes.formElement}>\r\n                  <TextField\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    variant=\"outlined\"\r\n                    label={\"Email\"}\r\n                    disabled={isSubmitting}\r\n                    error={errors.email && touched.email}\r\n                    helperText={touched.email ? errors.email : null}\r\n                  />\r\n                </div>\r\n\r\n                <div className={classes.formElement}>\r\n                  <TextField\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    variant=\"outlined\"\r\n                    label={\"Password\"}\r\n                    type={typePassword}\r\n                    disabled={isSubmitting}\r\n                    error={errors.password && touched.password}\r\n                    helperText={touched.password ? errors.password : null}\r\n                  />\r\n                </div>\r\n                <div className={classes.formElement}>\r\n                  <GreenSwitch\r\n                    className={classes.switch}\r\n                    checked={showPassword}\r\n                    onChange={() => {\r\n                      setShowPassword(!showPassword);\r\n                    }}\r\n                    color=\"primary\"\r\n                  />\r\n                  {textPassword}\r\n                </div>\r\n                <div className={classes.formElement}>\r\n                  <OwnButton\r\n                    typeOfButton={'submit'}\r\n                    disabled={isSubmitting}\r\n                    text={\"Login\"}\r\n                  />\r\n                </div>\r\n                <div className={classes.footer}>\r\n                  <p> Have you no account yet?</p>\r\n                  <Link className={classes.link} to=\"/signup\">Sign up now</Link>\r\n                </div>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Paper>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\organisms\\cardForm\\CardForm.js",["200"],"import React, { Fragment, useContext, useState } from \"react\";\r\nimport Navbar from \"../../molecules/navbar/Navbar\"\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Formik } from \"formik\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { useHistory } from 'react-router-dom'\r\nimport BenchService from \"../../../service/BenchService\";\r\nimport OwnButton from \"../../atoms/ownButton/OwnButton\";\r\nimport { CardValidationSchema } from \"../../other/validation/CardValidationSchema\";\r\nimport SessionHandlerContext from \"../../other/context/SessionHandlerContext\";\r\n\r\n\r\nconst CardForm = ({ bench, setBench, modeCreate, updateFunc, modeDialog }) => {\r\n\r\n    const GreenSwitch = withStyles({\r\n        switchBase: {\r\n            color: \"#F3FAF0\",\r\n            '&$checked': {\r\n                color: \"#75BF4A\",\r\n            },\r\n            '&$checked + $track': {\r\n                backgroundColor: \"#75BF4A\",\r\n            },\r\n        },\r\n        checked: {},\r\n        track: {},\r\n    })(Switch);\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        rootNormal: {\r\n            background: \"#e6f3d8\",\r\n            color: \"black\",\r\n            marginTop: \"100px\",\r\n        },\r\n        rootDialog: {\r\n            background: \"#e6f3d8\",\r\n            color: \"black\"\r\n        },\r\n        heading: {\r\n            color: \"#47792A\",\r\n            textAlign: \"center\",\r\n            margin: '2vh'\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const { user } = useContext(SessionHandlerContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [hasMeadow, setHasMeadow] = useState(bench.hasMeadow);\r\n    const [locationOnWater, setLocationOnWater] = useState(bench.locationOnWater);\r\n\r\n    const handleChangeMeadow = () => {\r\n        setHasMeadow(!hasMeadow);\r\n    }\r\n\r\n    const handleChangeLocationOnwater = () => {\r\n        setLocationOnWater(!locationOnWater);\r\n    }\r\n\r\n    return (\r\n        <Paper className={modeDialog ? classes.rootDialog : classes.rootNormal} >\r\n            <Formik\r\n                initialValues={bench}\r\n                enableReinitialize\r\n                validationSchema={CardValidationSchema}\r\n                onSubmit={(values) => {\r\n                    var dto = { ...bench, ...values };\r\n                    if (modeCreate) {\r\n                        dto = { ...dto, user: user };\r\n                        BenchService.create(dto)\r\n                            .then(res => {\r\n                                history.push(`/`);\r\n                            })\r\n                            .catch(err => {\r\n                                console.error('Error in CardForm ', err);\r\n                            })\r\n                            .finally(() => {\r\n                            })\r\n                    } else if (modeDialog) {\r\n                        updateFunc(dto);\r\n                    } else {\r\n                        BenchService.update(dto.id, dto)\r\n                            .then(res => {\r\n                                history.push(`/`);\r\n                            })\r\n                            .catch(err => {\r\n                                console.error('Error in CardForm ', err);\r\n                            })\r\n                            .finally(() => {\r\n                            })\r\n                    }\r\n                }\r\n                }\r\n            >\r\n                {({ handleSubmit, errors, touched, handleChange, initialValues, dirty }) => {\r\n                    return (\r\n                        <Fragment>\r\n                            <form method=\"post\" onSubmit={handleSubmit} onChange={handleChange}>\r\n                                {!modeDialog ?\r\n                                    <Typography variant=\"h5\" className={classes.heading}>\r\n                                        {modeCreate ? \"Create new bench\" : \"Change \" + bench.title}\r\n                                    </Typography>\r\n                                    : null}\r\n                                <Grid\r\n                                    container\r\n                                    spacing={4}\r\n                                    justify=\"space-around\"\r\n                                    alignItems=\"center\"\r\n                                >\r\n                                    <Grid item md={5}>\r\n                                        <TextField\r\n                                            id=\"standard-basic\"\r\n                                            name=\"title\"\r\n                                            label=\"Title *\"\r\n                                            error={errors.title && touched.title}\r\n                                            helperText={touched.title ? errors.title : null}\r\n                                            defaultValue={initialValues.title}\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                    <Grid item md={5}>\r\n                                        <TextField\r\n                                            id=\"standard-basic\"\r\n                                            name=\"description\"\r\n                                            label=\"Description\"\r\n                                            multiline\r\n                                            error={errors.description && touched.description}\r\n                                            helperText={touched.description ? errors.description : null}\r\n                                            defaultValue={initialValues.description}\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                    <Grid item md={5}>\r\n                                        <TextField\r\n                                            id=\"standard-basic\"\r\n                                            name=\"latitude\"\r\n                                            label=\"Latitude\"\r\n                                            error={errors.latitude && touched.latitude}\r\n                                            helperText={touched.latitude ? errors.latitude : null}\r\n                                            defaultValue={initialValues.latitude}\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                    <Grid item md={5}>\r\n                                        <TextField\r\n                                            id=\"standard-basic\"\r\n                                            name=\"longitude\"\r\n                                            label=\"Longitude\"\r\n                                            error={errors.longitude && touched.longitude}\r\n                                            helperText={touched.longitude ? errors.longitude : null}\r\n                                            defaultValue={initialValues.longitude}\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                    <Grid item md={5}>\r\n                                        <TextField\r\n                                            id=\"standard-number\"\r\n                                            name=\"amountBenches\"\r\n                                            label=\"Amount benches *\"\r\n                                            error={errors.amountBenches && touched.amountBenches}\r\n                                            helperText={touched.amountBenches ? errors.amountBenches : null}\r\n                                            defaultValue={initialValues.amountBenches}\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                    <Grid item md={5}>\r\n                                        <TextField\r\n                                            id=\"standard-number\"\r\n                                            name=\"amountFirePlaces\"\r\n                                            label=\"Amount fire places *\"\r\n                                            error={errors.amountFirePlaces && touched.amountFirePlaces}\r\n                                            helperText={touched.amountFirePlaces ? errors.amountFirePlaces : null}\r\n                                            defaultValue={initialValues.amountFirePlaces}\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                    <Grid item md={5}>\r\n                                        <TextField\r\n                                            id=\"standard-number\"\r\n                                            name=\"amountTrashCans\"\r\n                                            label=\"Amount trash cans *\"\r\n                                            error={errors.amountTrashCans && touched.amountTrashCans}\r\n                                            helperText={touched.amountTrashCans ? errors.amountTrashCans : null}\r\n                                            defaultValue={initialValues.amountTrashCans}\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                    <Grid item md={5}>\r\n                                        <TextField\r\n                                            id=\"standard-basic\"\r\n                                            name=\"distanceToNextShop\"\r\n                                            label=\"Distance to next shop\"\r\n                                            error={errors.distanceToNextShop && touched.distanceToNextShop}\r\n                                            helperText={touched.distanceToNextShop ? errors.distanceToNextShop : null}\r\n                                            defaultValue={initialValues.distanceToNextShop}\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                    <Grid item md={5}>\r\n                                        <TextField\r\n                                            id=\"standard-basic\"\r\n                                            name=\"directions\"\r\n                                            label=\"Directions\"\r\n                                            multiline\r\n                                            error={errors.directions && touched.directions}\r\n                                            helperText={touched.directions ? errors.directions : null}\r\n                                            defaultValue={initialValues.directions}\r\n                                            className={classes.switch}\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                    <Grid item md={5} />\r\n\r\n                                    <Grid item md={5}>\r\n                                        <FormControlLabel\r\n                                            control={<GreenSwitch\r\n                                                checked={hasMeadow}\r\n                                                onChange={handleChangeMeadow}\r\n                                                color=\"primary\"\r\n                                                name=\"hasMeadow\"\r\n                                                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                            />}\r\n                                            label=\"Meadows\"\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                    <Grid item md={5}>\r\n                                        <FormControlLabel\r\n                                            control={<GreenSwitch\r\n                                                checked={locationOnWater}\r\n                                                onChange={handleChangeLocationOnwater}\r\n                                                color=\"primary\"\r\n                                                name=\"locationOnWater\"\r\n                                                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                            />}\r\n                                            label=\"Location on water\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={5}>\r\n                                        <OwnButton\r\n                                            typeOfButton={'submit'}\r\n                                            text={modeCreate ? \"Create\" : \"Update\"}\r\n                                            disabled={!modeCreate ? !dirty : false}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={5}>\r\n                                        <OwnButton\r\n                                            typeOfButton={'reset'}\r\n                                            text={'Reset'}\r\n                                            disabled={!modeCreate ? !dirty : false}\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n                            </form>\r\n                        </Fragment>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </Paper >\r\n    )\r\n}\r\n\r\nexport default CardForm;\r\n","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\organisms\\ownTable\\OwnTable.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\organisms\\personalBenchManagment\\PersonalBenchManagment.js",["201","202","203","204","205","206","207","208","209"],"import React, { useState, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { List, Paper, Button } from '@material-ui/core';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ShopIcon from '@material-ui/icons/Shop';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport OwnDialog from \"../../molecules/dialog/Dialog\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport BenchService from '../../../service/BenchService';\r\nimport Title from \"../../atoms/title/Title\";\r\nimport WeekendIcon from '@material-ui/icons/Weekend';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    title: {\r\n    },\r\n    // paper: {\r\n    //     margin: \"20px\",\r\n    //     paddingTop: \"20px\",\r\n    //     width: \"100%\"\r\n    // },\r\n    paper: {\r\n        flexGrow: 1,\r\n        paddingTop: \"50px\",\r\n        paddingBottom: \"50px\",\r\n        background: \"#e6f3d8\",\r\n        color: \"black\",\r\n    },\r\n    deleteButton: {\r\n        color: \"red\",\r\n    },\r\n    editButton: {\r\n        color: \"#355A20\",\r\n    },\r\n}));\r\n\r\n\r\nconst PersonalBenchManagment = ({ benches, benchHandler }) => {\r\n\r\n    const [openDelete, setOpenDelete] = useState(false);\r\n    const [benchToDelete, setBenchToDelete] = useState({});\r\n\r\n    const [openEdit, setOpenEdit] = useState(false);\r\n    const [benchToEdit, setBenchToEdit] = useState({});\r\n\r\n    const history = useHistory();\r\n\r\n    const classes = useStyles();\r\n\r\n    const dialogHandlerDelete = () => {\r\n        setOpenDelete(!openDelete);\r\n    }\r\n\r\n    const dialogHandlerEdit = () => {\r\n        setOpenEdit(!openEdit);\r\n    }\r\n\r\n    const goToBench = (id) => {\r\n        history.push(`/bench/${id}`);\r\n    }\r\n\r\n    const getInformation = (b) => {\r\n        var info = \"Bench id: \" + b.id;\r\n        if (b.longitude !== null && b.latitude !== null) {\r\n            info += \" | Coordinates: \" + b.longitude + \" / \" + b.latitude;\r\n        }\r\n        if (b.address !== null) {\r\n            info += \" | Location: \" + b.address.street + \", \" + b.address.zip + \" \" + b.address.place;\r\n        }\r\n        return info;\r\n    }\r\n\r\n    const deleteBench = () => {\r\n        BenchService.delete(benchToDelete.id)\r\n            .then(() => {\r\n                benchHandler(benches.filter(b => b.id !== benchToDelete.id))\r\n            })\r\n            .catch(err => {\r\n                console.error('Error in PersonalBenchManagment: ', err);\r\n            })\r\n            .finally(() => {\r\n                dialogHandlerDelete();\r\n            })\r\n    }\r\n\r\n    const changeBench = (dto) => {\r\n        BenchService.update(dto.id, dto)\r\n            .then(res => {\r\n                let benchArray = benches.filter(b => b.id !== benchToEdit.id);\r\n                benchArray.push(res.data);\r\n                benchHandler(benchArray);\r\n            })\r\n            .catch(err => {\r\n                console.error('Error in PersonalBenchManagment: ', err)\r\n            })\r\n            .finally(() => {\r\n                dialogHandlerEdit();\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <div className={classes.demo}>\r\n                <List>\r\n                    {benches.map((b) =>\r\n                        <ListItem key={b.id} onClick={() => goToBench(b.id)} title={\"Go to bench \" + b.title}>\r\n                            <ListItemAvatar>\r\n                                <Avatar>\r\n                                    <WeekendIcon />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={b.title}\r\n                                secondary={getInformation(b)}\r\n                            />\r\n                            <ListItemSecondaryAction>\r\n                                <IconButton\r\n                                    title={\"Edit bench \" + b.title}\r\n                                    onClick={() => {\r\n                                        setBenchToEdit(b);\r\n                                        dialogHandlerEdit();\r\n                                    }}\r\n                                    edge=\"end\"\r\n                                    aria-label=\"edit\"\r\n                                    className={classes.editButton}\r\n                                >\r\n                                    <EditIcon />\r\n                                </IconButton>\r\n                                <IconButton\r\n                                    title={\"Delete bench \" + b.title}\r\n                                    onClick={() => {\r\n                                        setBenchToDelete(b);\r\n                                        dialogHandlerDelete();\r\n                                    }}\r\n                                    edge=\"end\"\r\n                                    aria-label=\"delete\"\r\n                                    className={classes.deleteButton}\r\n                                >\r\n                                    <DeleteIcon />\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>,\r\n                    )}\r\n                </List>\r\n            </div>\r\n            <OwnDialog\r\n                isOpen={openDelete}\r\n                handler={dialogHandlerDelete}\r\n                mode={'delete'}\r\n                titleDialog={\"Delete bench '\" + benchToDelete.title + \"'?\"}\r\n                action={() => deleteBench()}\r\n            />\r\n            <OwnDialog\r\n                isOpen={openEdit}\r\n                handler={dialogHandlerEdit}\r\n                mode={'editBench'}\r\n                titleDialog={\"Edit bench '\"+ benchToEdit.title + \"'\"}\r\n                action={changeBench}\r\n                bench={benchToEdit}\r\n            />\r\n        </Paper>\r\n\r\n    );\r\n}\r\nexport default PersonalBenchManagment;\r\n\r\n ","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\atoms\\rating\\Rating.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\other\\validation\\CardValidationSchema.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\molecules\\divider\\Divider.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\other\\validation\\LoginValidationSchema.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\atoms\\ownButton\\OwnButton.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\other\\validation\\CreateUserValidationSchema.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\other\\validation\\UpdateUserValidationSchema.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\atoms\\title\\Title.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\molecules\\commentField\\CommentField.js",["210"],"import React, { useContext, useState } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SessionHandlerContext from '../../other/context/SessionHandlerContext';\r\nimport CommentService from \"../../../service/CommentService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(2),\r\n            width: '25ch',\r\n        },\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    title: {\r\n        margin: theme.spacing(2),\r\n        width: '100%',\r\n        maxWidth: '36ch',\r\n    },\r\n}));\r\n\r\nconst CommentField = ({ username, firstName, lastName, bench, postComment }) => {\r\n\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(null);\r\n    const { user } = useContext(SessionHandlerContext);\r\n\r\n    const commentDTO = {\r\n        commentText: value,\r\n        bench: bench,\r\n        user: user\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n        console.log(\"value, \", value)\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"flex-start\"\r\n        >\r\n            <Grid item>\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"flex-start\"\r\n                    className={classes.title}\r\n                >\r\n                    <Grid item >\r\n                        <Avatar className={classes.avatar}>\r\n                            {firstName.substring(0, 1).toUpperCase() + lastName.substring(0, 1).toUpperCase()}\r\n                        </Avatar>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"h6\" gutterBottom>{username}</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        id=\"outlined-textarea\"\r\n                        label=\"Comment\"\r\n                        placeholder=\"Write a comment\"\r\n                        multiline\r\n                        variant=\"outlined\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                    />\r\n                </form>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"default\"\r\n                    className={classes.button}\r\n                    startIcon={<SendIcon />}\r\n                    onClick={() => {\r\n                        postComment(commentDTO);\r\n                        setValue(\"\");\r\n                    }}\r\n                >\r\n                    Send\r\n                    </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default withRouter(CommentField);","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\molecules\\dialog\\Dialog.js",["211","212","213","214","215","216"],"import React, { useContext, useState } from \"react\";\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, DialogContentText, FormControl, FilledInput, InputAdornment } from '@material-ui/core';\r\nimport OwnButton from \"../../atoms/ownButton/OwnButton\";\r\nimport CardForm from \"../../organisms/cardForm/CardForm\";\r\nimport UserForm from \"../../organisms/userForm/UserForm\";\r\n\r\n\r\nconst OwnDialog = ({ isOpen, handler, action, mode, titleDialog, bench, user }) => {\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={isOpen}\r\n                onClose={handler}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                style={null}\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    {titleDialog}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    {mode === 'editBench' ?\r\n                        <CardForm\r\n                            updateFunc={action}\r\n                            bench={bench}\r\n                            modeDialog\r\n                        />\r\n                        : null}\r\n                    {mode === 'editUser' ?\r\n                        <UserForm\r\n                            initialObject={user}\r\n                            updateFunc={action}\r\n                            modeDialog\r\n                        />\r\n                        : null}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {mode !== 'editBench' && mode !== 'editUser' ?\r\n                        <OwnButton\r\n                            onClickFunc={handler}\r\n                            typeOfButton={'cancel'}\r\n                        />\r\n                        : null}\r\n                    {mode === 'delete' ?\r\n                        <OwnButton\r\n                            onClickFunc={action}\r\n                            typeOfButton={'confirm'}\r\n                        />\r\n                        : null}\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OwnDialog;\r\n","C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\molecules\\searchField\\SearchField.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\atoms\\customizedRating\\CustomizedRating.js",[],"C:\\Users\\Elijana\\Desktop\\NYP\\2. Lehrjahr\\react\\Baenkli-App-Remastered-Frontend\\src\\components\\other\\secureRouter\\SecureRouter.js",["217","218","219"],"import React, {useContext} from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport SessionHandlerContext from \"../context/SessionHandlerContext\";\r\n\r\n\r\n\r\nconst SecureRoute = ( props) => {\r\n    const {component: Component, authorities = [], showBackButton = true, ...rest} = props;\r\n    const {user, isActiveUserAdmin} = useContext(SessionHandlerContext);\r\n\r\n\r\n    const isAdminNeeded = () =>{\r\n        if(authorities[0]==\"admin\" && isActiveUserAdmin()){\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    const hasNeededAuthorities = authorities.length === 0 | isAdminNeeded();\r\n\r\n\r\n    const isLoggedin = () => {\r\n        let token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n            return false;\r\n        }\r\n        return true\r\n    };\r\n\r\n    if(isLoggedin()){\r\n        return (\r\n            <Route\r\n                {...rest}\r\n                render={props => (\r\n                    <div>\r\n                        {hasNeededAuthorities ? (\r\n                            <Component {...props}/>\r\n                        ) : (\r\n                            <Redirect to=\"/unauthorized\"/>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n    else{\r\n        return (\r\n            <Route\r\n                {...rest} render={() => (\r\n                <Redirect to={{ pathname: \"/login\"}} />\r\n            )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default SecureRoute;",{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":53,"column":35,"nodeType":"226","messageId":"227","endLine":53,"endColumn":37},{"ruleId":"224","severity":1,"message":"225","line":56,"column":39,"nodeType":"226","messageId":"227","endLine":56,"endColumn":41},{"ruleId":"228","severity":1,"message":"229","line":1,"column":27,"nodeType":"230","messageId":"231","endLine":1,"endColumn":35},{"ruleId":"228","severity":1,"message":"232","line":1,"column":37,"nodeType":"230","messageId":"231","endLine":1,"endColumn":46},{"ruleId":"228","severity":1,"message":"233","line":9,"column":8,"nodeType":"230","messageId":"231","endLine":9,"endColumn":14},{"ruleId":"228","severity":1,"message":"234","line":10,"column":8,"nodeType":"230","messageId":"231","endLine":10,"endColumn":18},{"ruleId":"228","severity":1,"message":"235","line":23,"column":11,"nodeType":"230","messageId":"231","endLine":23,"endColumn":18},{"ruleId":"236","severity":1,"message":"237","line":134,"column":8,"nodeType":"238","endLine":134,"endColumn":10,"suggestions":"239"},{"ruleId":"228","severity":1,"message":"240","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":13},{"ruleId":"228","severity":1,"message":"241","line":35,"column":7,"nodeType":"230","messageId":"231","endLine":35,"endColumn":11},{"ruleId":"228","severity":1,"message":"242","line":56,"column":5,"nodeType":"230","messageId":"231","endLine":56,"endColumn":16},{"ruleId":"236","severity":1,"message":"243","line":330,"column":8,"nodeType":"238","endLine":330,"endColumn":24,"suggestions":"244"},{"ruleId":"228","severity":1,"message":"245","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":25},{"ruleId":"228","severity":1,"message":"234","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":18},{"ruleId":"228","severity":1,"message":"246","line":9,"column":8,"nodeType":"230","messageId":"231","endLine":9,"endColumn":16},{"ruleId":"228","severity":1,"message":"247","line":10,"column":8,"nodeType":"230","messageId":"231","endLine":10,"endColumn":21},{"ruleId":"228","severity":1,"message":"248","line":11,"column":8,"nodeType":"230","messageId":"231","endLine":11,"endColumn":15},{"ruleId":"228","severity":1,"message":"249","line":3,"column":45,"nodeType":"230","messageId":"231","endLine":3,"endColumn":51},{"ruleId":"228","severity":1,"message":"250","line":3,"column":68,"nodeType":"230","messageId":"231","endLine":3,"endColumn":77},{"ruleId":"228","severity":1,"message":"245","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":25},{"ruleId":"228","severity":1,"message":"229","line":1,"column":27,"nodeType":"230","messageId":"231","endLine":1,"endColumn":35},{"ruleId":"228","severity":1,"message":"250","line":2,"column":10,"nodeType":"230","messageId":"231","endLine":2,"endColumn":19},{"ruleId":"228","severity":1,"message":"249","line":2,"column":47,"nodeType":"230","messageId":"231","endLine":2,"endColumn":53},{"ruleId":"228","severity":1,"message":"251","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":14},{"ruleId":"228","severity":1,"message":"252","line":1,"column":27,"nodeType":"230","messageId":"231","endLine":1,"endColumn":37},{"ruleId":"228","severity":1,"message":"249","line":3,"column":23,"nodeType":"230","messageId":"231","endLine":3,"endColumn":29},{"ruleId":"228","severity":1,"message":"253","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":20},{"ruleId":"228","severity":1,"message":"254","line":11,"column":8,"nodeType":"230","messageId":"231","endLine":11,"endColumn":12},{"ruleId":"228","severity":1,"message":"234","line":12,"column":8,"nodeType":"230","messageId":"231","endLine":12,"endColumn":18},{"ruleId":"228","severity":1,"message":"255","line":13,"column":8,"nodeType":"230","messageId":"231","endLine":13,"endColumn":18},{"ruleId":"228","severity":1,"message":"256","line":15,"column":8,"nodeType":"230","messageId":"231","endLine":15,"endColumn":16},{"ruleId":"228","severity":1,"message":"257","line":19,"column":8,"nodeType":"230","messageId":"231","endLine":19,"endColumn":21},{"ruleId":"228","severity":1,"message":"258","line":21,"column":8,"nodeType":"230","messageId":"231","endLine":21,"endColumn":13},{"ruleId":"228","severity":1,"message":"259","line":11,"column":8,"nodeType":"230","messageId":"231","endLine":11,"endColumn":22},{"ruleId":"228","severity":1,"message":"252","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":27},{"ruleId":"228","severity":1,"message":"229","line":1,"column":29,"nodeType":"230","messageId":"231","endLine":1,"endColumn":37},{"ruleId":"228","severity":1,"message":"260","line":2,"column":61,"nodeType":"230","messageId":"231","endLine":2,"endColumn":78},{"ruleId":"228","severity":1,"message":"261","line":2,"column":80,"nodeType":"230","messageId":"231","endLine":2,"endColumn":91},{"ruleId":"228","severity":1,"message":"262","line":2,"column":93,"nodeType":"230","messageId":"231","endLine":2,"endColumn":104},{"ruleId":"228","severity":1,"message":"263","line":2,"column":106,"nodeType":"230","messageId":"231","endLine":2,"endColumn":120},{"ruleId":"228","severity":1,"message":"264","line":8,"column":52,"nodeType":"230","messageId":"231","endLine":8,"endColumn":66},{"ruleId":"228","severity":1,"message":"265","line":9,"column":12,"nodeType":"230","messageId":"231","endLine":9,"endColumn":16},{"ruleId":"224","severity":1,"message":"225","line":13,"column":26,"nodeType":"226","messageId":"227","endLine":13,"endColumn":28},"no-native-reassign",["266"],"no-negated-in-lhs",["267"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Rating' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getComments', 'isBenchOwnBench', 'postCardId', and 'user.id'. Either include them or remove the dependency array.","ArrayExpression",["268"],"'axios' is defined but never used.","'rows' is assigned a value but never used.","'fakeBenches' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllUsers'. Either include it or remove the dependency array.",["269"],"'Fragment' is defined but never used.","'MenuIcon' is defined but never used.","'AccountCircle' is defined but never used.","'MapIcon' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","'Navbar' is defined but never used.","'useContext' is defined but never used.","'ListItemIcon' is defined but never used.","'Grid' is defined but never used.","'FolderIcon' is defined but never used.","'ShopIcon' is defined but never used.","'AddCircleIcon' is defined but never used.","'Title' is defined but never used.","'CommentService' is defined but never used.","'DialogContentText' is defined but never used.","'FormControl' is defined but never used.","'FilledInput' is defined but never used.","'InputAdornment' is defined but never used.","'showBackButton' is assigned a value but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},"Update the dependencies array to be: [getComments, isBenchOwnBench, postCardId, user.id]",{"range":"274","text":"275"},"Update the dependencies array to be: [user, setUsers, getAllUsers]",{"range":"276","text":"277"},[3874,3876],"[getComments, isBenchOwnBench, postCardId, user.id]",[10207,10223],"[user, setUsers, getAllUsers]"]